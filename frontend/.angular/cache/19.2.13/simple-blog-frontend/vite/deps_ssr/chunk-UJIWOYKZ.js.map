{
  "version": 3,
  "sources": ["../../../../../../../node_modules/@angular/ssr/third_party/beasties/index.js", "../../../../../../../node_modules/@angular/ssr/fesm2022/ssr.mjs"],
  "sourcesContent": ["function createNotImplementedError(name) {\n  throw new Error(`[unenv] ${name} is not implemented yet!`);\n}\nfunction notImplemented(name) {\n  const fn = () => {\n    throw createNotImplementedError(name);\n  };\n  return Object.assign(fn, {\n    __unenv__: true\n  });\n}\nconst access = notImplemented(\"fs.access\");\nconst copyFile = notImplemented(\"fs.copyFile\");\nconst cp = notImplemented(\"fs.cp\");\nconst open = notImplemented(\"fs.open\");\nconst opendir = notImplemented(\"fs.opendir\");\nconst rename = notImplemented(\"fs.rename\");\nconst truncate = notImplemented(\"fs.truncate\");\nconst rm = notImplemented(\"fs.rm\");\nconst rmdir = notImplemented(\"fs.rmdir\");\nconst mkdir = notImplemented(\"fs.mkdir\");\nconst readdir = notImplemented(\"fs.readdir\");\nconst readlink = notImplemented(\"fs.readlink\");\nconst symlink = notImplemented(\"fs.symlink\");\nconst lstat = notImplemented(\"fs.lstat\");\nconst stat = notImplemented(\"fs.stat\");\nconst link = notImplemented(\"fs.link\");\nconst unlink = notImplemented(\"fs.unlink\");\nconst chmod = notImplemented(\"fs.chmod\");\nconst lchmod = notImplemented(\"fs.lchmod\");\nconst lchown = notImplemented(\"fs.lchown\");\nconst chown = notImplemented(\"fs.chown\");\nconst utimes = notImplemented(\"fs.utimes\");\nconst lutimes = notImplemented(\"fs.lutimes\");\nconst realpath = notImplemented(\"fs.realpath\");\nconst mkdtemp = notImplemented(\"fs.mkdtemp\");\nconst writeFile = notImplemented(\"fs.writeFile\");\nconst appendFile = notImplemented(\"fs.appendFile\");\nconst readFile$1 = notImplemented(\"fs.readFile\");\nnotImplemented(\"fs.watch\");\nconst statfs = notImplemented(\"fs.statfs\");\nfunction notImplementedAsync(name) {\n  const fn = notImplemented(name);\n  fn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n  fn.native = fn;\n  return fn;\n}\nfunction callbackify(fn) {\n  const fnc = function (...args) {\n    const cb = args.pop();\n    fn().catch(error => cb(error)).then(val => cb(void 0, val));\n  };\n  fnc.__promisify__ = fn;\n  fnc.native = fnc;\n  return fnc;\n}\ncallbackify(access);\ncallbackify(appendFile);\ncallbackify(chown);\ncallbackify(chmod);\ncallbackify(copyFile);\ncallbackify(cp);\ncallbackify(lchown);\ncallbackify(lchmod);\ncallbackify(link);\ncallbackify(lstat);\ncallbackify(lutimes);\ncallbackify(mkdir);\ncallbackify(mkdtemp);\ncallbackify(realpath);\ncallbackify(open);\ncallbackify(opendir);\ncallbackify(readdir);\nconst readFile = callbackify(readFile$1);\ncallbackify(readlink);\ncallbackify(rename);\ncallbackify(rm);\ncallbackify(rmdir);\ncallbackify(stat);\ncallbackify(symlink);\ncallbackify(truncate);\ncallbackify(unlink);\ncallbackify(utimes);\ncallbackify(writeFile);\ncallbackify(statfs);\nnotImplementedAsync(\"fs.close\");\nnotImplementedAsync(\"fs.createReadStream\");\nnotImplementedAsync(\"fs.createWriteStream\");\nnotImplementedAsync(\"fs.exists\");\nnotImplementedAsync(\"fs.fchown\");\nnotImplementedAsync(\"fs.fchmod\");\nnotImplementedAsync(\"fs.fdatasync\");\nnotImplementedAsync(\"fs.fstat\");\nnotImplementedAsync(\"fs.fsync\");\nnotImplementedAsync(\"fs.ftruncate\");\nnotImplementedAsync(\"fs.futimes\");\nnotImplementedAsync(\"fs.lstatSync\");\nnotImplementedAsync(\"fs.read\");\nnotImplementedAsync(\"fs.readv\");\nnotImplementedAsync(\"fs.realpathSync\");\nnotImplementedAsync(\"fs.statSync\");\nnotImplementedAsync(\"fs.unwatchFile\");\nnotImplementedAsync(\"fs.watch\");\nnotImplementedAsync(\"fs.watchFile\");\nnotImplementedAsync(\"fs.write\");\nnotImplementedAsync(\"fs.writev\");\nnotImplementedAsync(\"fs._toUnixTimestamp\");\nnotImplementedAsync(\"fs.openAsBlob\");\nnotImplemented(\"fs.appendFileSync\");\nnotImplemented(\"fs.accessSync\");\nnotImplemented(\"fs.chownSync\");\nnotImplemented(\"fs.chmodSync\");\nnotImplemented(\"fs.closeSync\");\nnotImplemented(\"fs.copyFileSync\");\nnotImplemented(\"fs.cpSync\");\nnotImplemented(\"fs.fchownSync\");\nnotImplemented(\"fs.fchmodSync\");\nnotImplemented(\"fs.fdatasyncSync\");\nnotImplemented(\"fs.fstatSync\");\nnotImplemented(\"fs.fsyncSync\");\nnotImplemented(\"fs.ftruncateSync\");\nnotImplemented(\"fs.futimesSync\");\nnotImplemented(\"fs.lchownSync\");\nnotImplemented(\"fs.lchmodSync\");\nnotImplemented(\"fs.linkSync\");\nnotImplemented(\"fs.lutimesSync\");\nnotImplemented(\"fs.mkdirSync\");\nnotImplemented(\"fs.mkdtempSync\");\nnotImplemented(\"fs.openSync\");\nnotImplemented(\"fs.opendirSync\");\nnotImplemented(\"fs.readdirSync\");\nnotImplemented(\"fs.readSync\");\nnotImplemented(\"fs.readvSync\");\nnotImplemented(\"fs.readFileSync\");\nnotImplemented(\"fs.readlinkSync\");\nnotImplemented(\"fs.renameSync\");\nnotImplemented(\"fs.rmSync\");\nnotImplemented(\"fs.rmdirSync\");\nnotImplemented(\"fs.symlinkSync\");\nnotImplemented(\"fs.truncateSync\");\nnotImplemented(\"fs.unlinkSync\");\nnotImplemented(\"fs.utimesSync\");\nnotImplemented(\"fs.writeFileSync\");\nnotImplemented(\"fs.writeSync\");\nnotImplemented(\"fs.writevSync\");\nnotImplemented(\"fs.statfsSync\");\nconst _DRIVE_LETTER_START_RE = /^[A-Za-z]:\\//;\nfunction normalizeWindowsPath(input = \"\") {\n  if (!input) {\n    return input;\n  }\n  return input.replace(/\\\\/g, \"/\").replace(_DRIVE_LETTER_START_RE, r => r.toUpperCase());\n}\nconst _UNC_REGEX = /^[/\\\\]{2}/;\nconst _IS_ABSOLUTE_RE = /^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[A-Za-z]:[/\\\\]/;\nconst _DRIVE_LETTER_RE = /^[A-Za-z]:$/;\nconst _ROOT_FOLDER_RE = /^\\/([A-Za-z]:)?$/;\nconst sep = \"/\";\nconst delimiter = \":\";\nconst normalize = function (path) {\n  if (path.length === 0) {\n    return \".\";\n  }\n  path = normalizeWindowsPath(path);\n  const isUNCPath = path.match(_UNC_REGEX);\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSeparator = path[path.length - 1] === \"/\";\n  path = normalizeString(path, !isPathAbsolute);\n  if (path.length === 0) {\n    if (isPathAbsolute) {\n      return \"/\";\n    }\n    return trailingSeparator ? \"./\" : \".\";\n  }\n  if (trailingSeparator) {\n    path += \"/\";\n  }\n  if (_DRIVE_LETTER_RE.test(path)) {\n    path += \"/\";\n  }\n  if (isUNCPath) {\n    if (!isPathAbsolute) {\n      return `//./${path}`;\n    }\n    return `//${path}`;\n  }\n  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;\n};\nconst join = function (...arguments_) {\n  if (arguments_.length === 0) {\n    return \".\";\n  }\n  let joined;\n  for (const argument of arguments_) {\n    if (argument && argument.length > 0) {\n      if (joined === void 0) {\n        joined = argument;\n      } else {\n        joined += `/${argument}`;\n      }\n    }\n  }\n  if (joined === void 0) {\n    return \".\";\n  }\n  return normalize(joined.replace(/\\/\\/+/g, \"/\"));\n};\nfunction cwd() {\n  if (typeof process !== \"undefined\" && typeof process.cwd === \"function\") {\n    return process.cwd().replace(/\\\\/g, \"/\");\n  }\n  return \"/\";\n}\nconst resolve = function (...arguments_) {\n  arguments_ = arguments_.map(argument => normalizeWindowsPath(argument));\n  let resolvedPath = \"\";\n  let resolvedAbsolute = false;\n  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {\n    const path = index >= 0 ? arguments_[index] : cwd();\n    if (!path || path.length === 0) {\n      continue;\n    }\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = isAbsolute(path);\n  }\n  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);\n  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {\n    return `/${resolvedPath}`;\n  }\n  return resolvedPath.length > 0 ? resolvedPath : \".\";\n};\nfunction normalizeString(path, allowAboveRoot) {\n  let res = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let char = null;\n  for (let index = 0; index <= path.length; ++index) {\n    if (index < path.length) {\n      char = path[index];\n    } else if (char === \"/\") {\n      break;\n    } else {\n      char = \"/\";\n    }\n    if (char === \"/\") {\n      if (lastSlash === index - 1 || dots === 1) ;else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== \".\" || res[res.length - 2] !== \".\") {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\");\n            if (lastSlashIndex === -1) {\n              res = \"\";\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n            }\n            lastSlash = index;\n            dots = 0;\n            continue;\n          } else if (res.length > 0) {\n            res = \"\";\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? \"/..\" : \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `/${path.slice(lastSlash + 1, index)}`;\n        } else {\n          res = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (char === \".\" && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nconst isAbsolute = function (p) {\n  return _IS_ABSOLUTE_RE.test(p);\n};\nconst toNamespacedPath = function (p) {\n  return normalizeWindowsPath(p);\n};\nconst _EXTNAME_RE = /.(\\.[^./]+)$/;\nconst extname = function (p) {\n  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));\n  return match && match[1] || \"\";\n};\nconst relative = function (from, to) {\n  const _from = resolve(from).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  const _to = resolve(to).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  if (_to[0][1] === \":\" && _from[0][1] === \":\" && _from[0] !== _to[0]) {\n    return _to.join(\"/\");\n  }\n  const _fromCopy = [..._from];\n  for (const segment of _fromCopy) {\n    if (_to[0] !== segment) {\n      break;\n    }\n    _from.shift();\n    _to.shift();\n  }\n  return [..._from.map(() => \"..\"), ..._to].join(\"/\");\n};\nconst dirname = function (p) {\n  const segments = normalizeWindowsPath(p).replace(/\\/$/, \"\").split(\"/\").slice(0, -1);\n  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {\n    segments[0] += \"/\";\n  }\n  return segments.join(\"/\") || (isAbsolute(p) ? \"/\" : \".\");\n};\nconst format = function (p) {\n  const segments = [p.root, p.dir, p.base ?? p.name + p.ext].filter(Boolean);\n  return normalizeWindowsPath(p.root ? resolve(...segments) : segments.join(\"/\"));\n};\nconst basename = function (p, extension) {\n  const lastSegment = normalizeWindowsPath(p).split(\"/\").pop();\n  return extension && lastSegment.endsWith(extension) ? lastSegment.slice(0, -extension.length) : lastSegment;\n};\nconst parse$3 = function (p) {\n  const root = normalizeWindowsPath(p).split(\"/\").shift() || \"/\";\n  const base = basename(p);\n  const extension = extname(base);\n  return {\n    root,\n    dir: dirname(p),\n    base,\n    ext: extension,\n    name: base.slice(0, base.length - extension.length)\n  };\n};\nconst path = {\n  __proto__: null,\n  basename: basename,\n  delimiter: delimiter,\n  dirname: dirname,\n  extname: extname,\n  format: format,\n  isAbsolute: isAbsolute,\n  join: join,\n  normalize: normalize,\n  normalizeString: normalizeString,\n  parse: parse$3,\n  relative: relative,\n  resolve: resolve,\n  sep: sep,\n  toNamespacedPath: toNamespacedPath\n};\nvar _path = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  basename: basename,\n  default: path,\n  delimiter: delimiter,\n  dirname: dirname,\n  extname: extname,\n  format: format,\n  isAbsolute: isAbsolute,\n  join: join,\n  normalize: normalize,\n  normalizeString: normalizeString,\n  parse: parse$3,\n  relative: relative,\n  resolve: resolve,\n  sep: sep,\n  toNamespacedPath: toNamespacedPath\n});\nconst _pathModule = {\n  ..._path,\n  platform: \"posix\",\n  posix: void 0,\n  win32: void 0\n};\n_pathModule.posix = _pathModule;\n_pathModule.win32 = _pathModule;\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nfunction getAugmentedNamespace(n) {\n  if (Object.prototype.hasOwnProperty.call(n, '__esModule')) return n;\n  var f = n.default;\n  if (typeof f == \"function\") {\n    var a = function a() {\n      if (this instanceof a) {\n        return Reflect.construct(f, arguments, this.constructor);\n      }\n      return f.apply(this, arguments);\n    };\n    a.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nvar picocolors_browser = {\n  exports: {}\n};\nvar hasRequiredPicocolors_browser;\nfunction requirePicocolors_browser() {\n  if (hasRequiredPicocolors_browser) return picocolors_browser.exports;\n  hasRequiredPicocolors_browser = 1;\n  var x = String;\n  var create = function () {\n    return {\n      isColorSupported: false,\n      reset: x,\n      bold: x,\n      dim: x,\n      italic: x,\n      underline: x,\n      inverse: x,\n      hidden: x,\n      strikethrough: x,\n      black: x,\n      red: x,\n      green: x,\n      yellow: x,\n      blue: x,\n      magenta: x,\n      cyan: x,\n      white: x,\n      gray: x,\n      bgBlack: x,\n      bgRed: x,\n      bgGreen: x,\n      bgYellow: x,\n      bgBlue: x,\n      bgMagenta: x,\n      bgCyan: x,\n      bgWhite: x,\n      blackBright: x,\n      redBright: x,\n      greenBright: x,\n      yellowBright: x,\n      blueBright: x,\n      magentaBright: x,\n      cyanBright: x,\n      whiteBright: x,\n      bgBlackBright: x,\n      bgRedBright: x,\n      bgGreenBright: x,\n      bgYellowBright: x,\n      bgBlueBright: x,\n      bgMagentaBright: x,\n      bgCyanBright: x,\n      bgWhiteBright: x\n    };\n  };\n  picocolors_browser.exports = create();\n  picocolors_browser.exports.createColors = create;\n  return picocolors_browser.exports;\n}\nvar _nodeResolve_empty = {};\nvar _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  default: _nodeResolve_empty\n});\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);\nvar cssSyntaxError;\nvar hasRequiredCssSyntaxError;\nfunction requireCssSyntaxError() {\n  if (hasRequiredCssSyntaxError) return cssSyntaxError;\n  hasRequiredCssSyntaxError = 1;\n  let pico = requirePicocolors_browser();\n  let terminalHighlight = require$$2;\n  class CssSyntaxError extends Error {\n    constructor(message, line, column, source, file, plugin) {\n      super(message);\n      this.name = 'CssSyntaxError';\n      this.reason = message;\n      if (file) {\n        this.file = file;\n      }\n      if (source) {\n        this.source = source;\n      }\n      if (plugin) {\n        this.plugin = plugin;\n      }\n      if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n        if (typeof line === 'number') {\n          this.line = line;\n          this.column = column;\n        } else {\n          this.line = line.line;\n          this.column = line.column;\n          this.endLine = column.line;\n          this.endColumn = column.column;\n        }\n      }\n      this.setMessage();\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, CssSyntaxError);\n      }\n    }\n    setMessage() {\n      this.message = this.plugin ? this.plugin + ': ' : '';\n      this.message += this.file ? this.file : '<css input>';\n      if (typeof this.line !== 'undefined') {\n        this.message += ':' + this.line + ':' + this.column;\n      }\n      this.message += ': ' + this.reason;\n    }\n    showSourceCode(color) {\n      if (!this.source) return '';\n      let css = this.source;\n      if (color == null) color = pico.isColorSupported;\n      let aside = text => text;\n      let mark = text => text;\n      let highlight = text => text;\n      if (color) {\n        let {\n          bold,\n          gray,\n          red\n        } = pico.createColors(true);\n        mark = text => bold(red(text));\n        aside = text => gray(text);\n        if (terminalHighlight) {\n          highlight = text => terminalHighlight(text);\n        }\n      }\n      let lines = css.split(/\\r?\\n/);\n      let start = Math.max(this.line - 3, 0);\n      let end = Math.min(this.line + 2, lines.length);\n      let maxWidth = String(end).length;\n      return lines.slice(start, end).map((line, index) => {\n        let number = start + 1 + index;\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n        if (number === this.line) {\n          if (line.length > 160) {\n            let padding = 20;\n            let subLineStart = Math.max(0, this.column - padding);\n            let subLineEnd = Math.max(this.column + padding, this.endColumn + padding);\n            let subLine = line.slice(subLineStart, subLineEnd);\n            let spacing = aside(gutter.replace(/\\d/g, ' ')) + line.slice(0, Math.min(this.column - 1, padding - 1)).replace(/[^\\t]/g, ' ');\n            return mark('>') + aside(gutter) + highlight(subLine) + '\\n ' + spacing + mark('^');\n          }\n          let spacing = aside(gutter.replace(/\\d/g, ' ')) + line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ');\n          return mark('>') + aside(gutter) + highlight(line) + '\\n ' + spacing + mark('^');\n        }\n        return ' ' + aside(gutter) + highlight(line);\n      }).join('\\n');\n    }\n    toString() {\n      let code = this.showSourceCode();\n      if (code) {\n        code = '\\n\\n' + code + '\\n';\n      }\n      return this.name + ': ' + this.message + code;\n    }\n  }\n  cssSyntaxError = CssSyntaxError;\n  CssSyntaxError.default = CssSyntaxError;\n  return cssSyntaxError;\n}\nvar stringifier;\nvar hasRequiredStringifier;\nfunction requireStringifier() {\n  if (hasRequiredStringifier) return stringifier;\n  hasRequiredStringifier = 1;\n  const DEFAULT_RAW = {\n    after: '\\n',\n    beforeClose: '\\n',\n    beforeComment: '\\n',\n    beforeDecl: '\\n',\n    beforeOpen: ' ',\n    beforeRule: '\\n',\n    colon: ': ',\n    commentLeft: ' ',\n    commentRight: ' ',\n    emptyBody: '',\n    indent: '    ',\n    semicolon: false\n  };\n  function capitalize(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  }\n  class Stringifier {\n    constructor(builder) {\n      this.builder = builder;\n    }\n    atrule(node, semicolon) {\n      let name = '@' + node.name;\n      let params = node.params ? this.rawValue(node, 'params') : '';\n      if (typeof node.raws.afterName !== 'undefined') {\n        name += node.raws.afterName;\n      } else if (params) {\n        name += ' ';\n      }\n      if (node.nodes) {\n        this.block(node, name + params);\n      } else {\n        let end = (node.raws.between || '') + (semicolon ? ';' : '');\n        this.builder(name + params + end, node);\n      }\n    }\n    beforeAfter(node, detect) {\n      let value;\n      if (node.type === 'decl') {\n        value = this.raw(node, null, 'beforeDecl');\n      } else if (node.type === 'comment') {\n        value = this.raw(node, null, 'beforeComment');\n      } else if (detect === 'before') {\n        value = this.raw(node, null, 'beforeRule');\n      } else {\n        value = this.raw(node, null, 'beforeClose');\n      }\n      let buf = node.parent;\n      let depth = 0;\n      while (buf && buf.type !== 'root') {\n        depth += 1;\n        buf = buf.parent;\n      }\n      if (value.includes('\\n')) {\n        let indent = this.raw(node, null, 'indent');\n        if (indent.length) {\n          for (let step = 0; step < depth; step++) value += indent;\n        }\n      }\n      return value;\n    }\n    block(node, start) {\n      let between = this.raw(node, 'between', 'beforeOpen');\n      this.builder(start + between + '{', node, 'start');\n      let after;\n      if (node.nodes && node.nodes.length) {\n        this.body(node);\n        after = this.raw(node, 'after');\n      } else {\n        after = this.raw(node, 'after', 'emptyBody');\n      }\n      if (after) this.builder(after);\n      this.builder('}', node, 'end');\n    }\n    body(node) {\n      let last = node.nodes.length - 1;\n      while (last > 0) {\n        if (node.nodes[last].type !== 'comment') break;\n        last -= 1;\n      }\n      let semicolon = this.raw(node, 'semicolon');\n      for (let i = 0; i < node.nodes.length; i++) {\n        let child = node.nodes[i];\n        let before = this.raw(child, 'before');\n        if (before) this.builder(before);\n        this.stringify(child, last !== i || semicolon);\n      }\n    }\n    comment(node) {\n      let left = this.raw(node, 'left', 'commentLeft');\n      let right = this.raw(node, 'right', 'commentRight');\n      this.builder('/*' + left + node.text + right + '*/', node);\n    }\n    decl(node, semicolon) {\n      let between = this.raw(node, 'between', 'colon');\n      let string = node.prop + between + this.rawValue(node, 'value');\n      if (node.important) {\n        string += node.raws.important || ' !important';\n      }\n      if (semicolon) string += ';';\n      this.builder(string, node);\n    }\n    document(node) {\n      this.body(node);\n    }\n    raw(node, own, detect) {\n      let value;\n      if (!detect) detect = own;\n\n      // Already had\n      if (own) {\n        value = node.raws[own];\n        if (typeof value !== 'undefined') return value;\n      }\n      let parent = node.parent;\n      if (detect === 'before') {\n        // Hack for first rule in CSS\n        if (!parent || parent.type === 'root' && parent.first === node) {\n          return '';\n        }\n\n        // `root` nodes in `document` should use only their own raws\n        if (parent && parent.type === 'document') {\n          return '';\n        }\n      }\n\n      // Floating child without parent\n      if (!parent) return DEFAULT_RAW[detect];\n\n      // Detect style by other nodes\n      let root = node.root();\n      if (!root.rawCache) root.rawCache = {};\n      if (typeof root.rawCache[detect] !== 'undefined') {\n        return root.rawCache[detect];\n      }\n      if (detect === 'before' || detect === 'after') {\n        return this.beforeAfter(node, detect);\n      } else {\n        let method = 'raw' + capitalize(detect);\n        if (this[method]) {\n          value = this[method](root, node);\n        } else {\n          root.walk(i => {\n            value = i.raws[own];\n            if (typeof value !== 'undefined') return false;\n          });\n        }\n      }\n      if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n      root.rawCache[detect] = value;\n      return value;\n    }\n    rawBeforeClose(root) {\n      let value;\n      root.walk(i => {\n        if (i.nodes && i.nodes.length > 0) {\n          if (typeof i.raws.after !== 'undefined') {\n            value = i.raws.after;\n            if (value.includes('\\n')) {\n              value = value.replace(/[^\\n]+$/, '');\n            }\n            return false;\n          }\n        }\n      });\n      if (value) value = value.replace(/\\S/g, '');\n      return value;\n    }\n    rawBeforeComment(root, node) {\n      let value;\n      root.walkComments(i => {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before;\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n          return false;\n        }\n      });\n      if (typeof value === 'undefined') {\n        value = this.raw(node, null, 'beforeDecl');\n      } else if (value) {\n        value = value.replace(/\\S/g, '');\n      }\n      return value;\n    }\n    rawBeforeDecl(root, node) {\n      let value;\n      root.walkDecls(i => {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before;\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n          return false;\n        }\n      });\n      if (typeof value === 'undefined') {\n        value = this.raw(node, null, 'beforeRule');\n      } else if (value) {\n        value = value.replace(/\\S/g, '');\n      }\n      return value;\n    }\n    rawBeforeOpen(root) {\n      let value;\n      root.walk(i => {\n        if (i.type !== 'decl') {\n          value = i.raws.between;\n          if (typeof value !== 'undefined') return false;\n        }\n      });\n      return value;\n    }\n    rawBeforeRule(root) {\n      let value;\n      root.walk(i => {\n        if (i.nodes && (i.parent !== root || root.first !== i)) {\n          if (typeof i.raws.before !== 'undefined') {\n            value = i.raws.before;\n            if (value.includes('\\n')) {\n              value = value.replace(/[^\\n]+$/, '');\n            }\n            return false;\n          }\n        }\n      });\n      if (value) value = value.replace(/\\S/g, '');\n      return value;\n    }\n    rawColon(root) {\n      let value;\n      root.walkDecls(i => {\n        if (typeof i.raws.between !== 'undefined') {\n          value = i.raws.between.replace(/[^\\s:]/g, '');\n          return false;\n        }\n      });\n      return value;\n    }\n    rawEmptyBody(root) {\n      let value;\n      root.walk(i => {\n        if (i.nodes && i.nodes.length === 0) {\n          value = i.raws.after;\n          if (typeof value !== 'undefined') return false;\n        }\n      });\n      return value;\n    }\n    rawIndent(root) {\n      if (root.raws.indent) return root.raws.indent;\n      let value;\n      root.walk(i => {\n        let p = i.parent;\n        if (p && p !== root && p.parent && p.parent === root) {\n          if (typeof i.raws.before !== 'undefined') {\n            let parts = i.raws.before.split('\\n');\n            value = parts[parts.length - 1];\n            value = value.replace(/\\S/g, '');\n            return false;\n          }\n        }\n      });\n      return value;\n    }\n    rawSemicolon(root) {\n      let value;\n      root.walk(i => {\n        if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n          value = i.raws.semicolon;\n          if (typeof value !== 'undefined') return false;\n        }\n      });\n      return value;\n    }\n    rawValue(node, prop) {\n      let value = node[prop];\n      let raw = node.raws[prop];\n      if (raw && raw.value === value) {\n        return raw.raw;\n      }\n      return value;\n    }\n    root(node) {\n      this.body(node);\n      if (node.raws.after) this.builder(node.raws.after);\n    }\n    rule(node) {\n      this.block(node, this.rawValue(node, 'selector'));\n      if (node.raws.ownSemicolon) {\n        this.builder(node.raws.ownSemicolon, node, 'end');\n      }\n    }\n    stringify(node, semicolon) {\n      /* c8 ignore start */\n      if (!this[node.type]) {\n        throw new Error('Unknown AST node type ' + node.type + '. ' + 'Maybe you need to change PostCSS stringifier.');\n      }\n      /* c8 ignore stop */\n      this[node.type](node, semicolon);\n    }\n  }\n  stringifier = Stringifier;\n  Stringifier.default = Stringifier;\n  return stringifier;\n}\nvar stringify_1;\nvar hasRequiredStringify;\nfunction requireStringify() {\n  if (hasRequiredStringify) return stringify_1;\n  hasRequiredStringify = 1;\n  let Stringifier = requireStringifier();\n  function stringify(node, builder) {\n    let str = new Stringifier(builder);\n    str.stringify(node);\n  }\n  stringify_1 = stringify;\n  stringify.default = stringify;\n  return stringify_1;\n}\nvar symbols = {};\nvar hasRequiredSymbols;\nfunction requireSymbols() {\n  if (hasRequiredSymbols) return symbols;\n  hasRequiredSymbols = 1;\n  symbols.isClean = Symbol('isClean');\n  symbols.my = Symbol('my');\n  return symbols;\n}\nvar node;\nvar hasRequiredNode$1;\nfunction requireNode$1() {\n  if (hasRequiredNode$1) return node;\n  hasRequiredNode$1 = 1;\n  let CssSyntaxError = requireCssSyntaxError();\n  let Stringifier = requireStringifier();\n  let stringify = requireStringify();\n  let {\n    isClean,\n    my\n  } = requireSymbols();\n  function cloneNode(obj, parent) {\n    let cloned = new obj.constructor();\n    for (let i in obj) {\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n        /* c8 ignore next 2 */\n        continue;\n      }\n      if (i === 'proxyCache') continue;\n      let value = obj[i];\n      let type = typeof value;\n      if (i === 'parent' && type === 'object') {\n        if (parent) cloned[i] = parent;\n      } else if (i === 'source') {\n        cloned[i] = value;\n      } else if (Array.isArray(value)) {\n        cloned[i] = value.map(j => cloneNode(j, cloned));\n      } else {\n        if (type === 'object' && value !== null) value = cloneNode(value);\n        cloned[i] = value;\n      }\n    }\n    return cloned;\n  }\n  function sourceOffset(inputCSS, position) {\n    // Not all custom syntaxes support `offset` in `source.start` and `source.end`\n    if (position && typeof position.offset !== 'undefined') {\n      return position.offset;\n    }\n    let column = 1;\n    let line = 1;\n    let offset = 0;\n    for (let i = 0; i < inputCSS.length; i++) {\n      if (line === position.line && column === position.column) {\n        offset = i;\n        break;\n      }\n      if (inputCSS[i] === '\\n') {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n    return offset;\n  }\n  class Node {\n    constructor(defaults = {}) {\n      this.raws = {};\n      this[isClean] = false;\n      this[my] = true;\n      for (let name in defaults) {\n        if (name === 'nodes') {\n          this.nodes = [];\n          for (let node of defaults[name]) {\n            if (typeof node.clone === 'function') {\n              this.append(node.clone());\n            } else {\n              this.append(node);\n            }\n          }\n        } else {\n          this[name] = defaults[name];\n        }\n      }\n    }\n    addToError(error) {\n      error.postcssNode = this;\n      if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n        let s = this.source;\n        error.stack = error.stack.replace(/\\n\\s{4}at /, `$&${s.input.from}:${s.start.line}:${s.start.column}$&`);\n      }\n      return error;\n    }\n    after(add) {\n      this.parent.insertAfter(this, add);\n      return this;\n    }\n    assign(overrides = {}) {\n      for (let name in overrides) {\n        this[name] = overrides[name];\n      }\n      return this;\n    }\n    before(add) {\n      this.parent.insertBefore(this, add);\n      return this;\n    }\n    cleanRaws(keepBetween) {\n      delete this.raws.before;\n      delete this.raws.after;\n      if (!keepBetween) delete this.raws.between;\n    }\n    clone(overrides = {}) {\n      let cloned = cloneNode(this);\n      for (let name in overrides) {\n        cloned[name] = overrides[name];\n      }\n      return cloned;\n    }\n    cloneAfter(overrides = {}) {\n      let cloned = this.clone(overrides);\n      this.parent.insertAfter(this, cloned);\n      return cloned;\n    }\n    cloneBefore(overrides = {}) {\n      let cloned = this.clone(overrides);\n      this.parent.insertBefore(this, cloned);\n      return cloned;\n    }\n    error(message, opts = {}) {\n      if (this.source) {\n        let {\n          end,\n          start\n        } = this.rangeBy(opts);\n        return this.source.input.error(message, {\n          column: start.column,\n          line: start.line\n        }, {\n          column: end.column,\n          line: end.line\n        }, opts);\n      }\n      return new CssSyntaxError(message);\n    }\n    getProxyProcessor() {\n      return {\n        get(node, prop) {\n          if (prop === 'proxyOf') {\n            return node;\n          } else if (prop === 'root') {\n            return () => node.root().toProxy();\n          } else {\n            return node[prop];\n          }\n        },\n        set(node, prop, value) {\n          if (node[prop] === value) return true;\n          node[prop] = value;\n          if (prop === 'prop' || prop === 'value' || prop === 'name' || prop === 'params' || prop === 'important' || /* c8 ignore next */\n          prop === 'text') {\n            node.markDirty();\n          }\n          return true;\n        }\n      };\n    }\n\n    /* c8 ignore next 3 */\n    markClean() {\n      this[isClean] = true;\n    }\n    markDirty() {\n      if (this[isClean]) {\n        this[isClean] = false;\n        let next = this;\n        while (next = next.parent) {\n          next[isClean] = false;\n        }\n      }\n    }\n    next() {\n      if (!this.parent) return undefined;\n      let index = this.parent.index(this);\n      return this.parent.nodes[index + 1];\n    }\n    positionBy(opts) {\n      let pos = this.source.start;\n      if (opts.index) {\n        pos = this.positionInside(opts.index);\n      } else if (opts.word) {\n        let inputString = 'document' in this.source.input ? this.source.input.document : this.source.input.css;\n        let stringRepresentation = inputString.slice(sourceOffset(inputString, this.source.start), sourceOffset(inputString, this.source.end));\n        let index = stringRepresentation.indexOf(opts.word);\n        if (index !== -1) pos = this.positionInside(index);\n      }\n      return pos;\n    }\n    positionInside(index) {\n      let column = this.source.start.column;\n      let line = this.source.start.line;\n      let inputString = 'document' in this.source.input ? this.source.input.document : this.source.input.css;\n      let offset = sourceOffset(inputString, this.source.start);\n      let end = offset + index;\n      for (let i = offset; i < end; i++) {\n        if (inputString[i] === '\\n') {\n          column = 1;\n          line += 1;\n        } else {\n          column += 1;\n        }\n      }\n      return {\n        column,\n        line\n      };\n    }\n    prev() {\n      if (!this.parent) return undefined;\n      let index = this.parent.index(this);\n      return this.parent.nodes[index - 1];\n    }\n    rangeBy(opts) {\n      let start = {\n        column: this.source.start.column,\n        line: this.source.start.line\n      };\n      let end = this.source.end ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      } : {\n        column: start.column + 1,\n        line: start.line\n      };\n      if (opts.word) {\n        let inputString = 'document' in this.source.input ? this.source.input.document : this.source.input.css;\n        let stringRepresentation = inputString.slice(sourceOffset(inputString, this.source.start), sourceOffset(inputString, this.source.end));\n        let index = stringRepresentation.indexOf(opts.word);\n        if (index !== -1) {\n          start = this.positionInside(index);\n          end = this.positionInside(index + opts.word.length);\n        }\n      } else {\n        if (opts.start) {\n          start = {\n            column: opts.start.column,\n            line: opts.start.line\n          };\n        } else if (opts.index) {\n          start = this.positionInside(opts.index);\n        }\n        if (opts.end) {\n          end = {\n            column: opts.end.column,\n            line: opts.end.line\n          };\n        } else if (typeof opts.endIndex === 'number') {\n          end = this.positionInside(opts.endIndex);\n        } else if (opts.index) {\n          end = this.positionInside(opts.index + 1);\n        }\n      }\n      if (end.line < start.line || end.line === start.line && end.column <= start.column) {\n        end = {\n          column: start.column + 1,\n          line: start.line\n        };\n      }\n      return {\n        end,\n        start\n      };\n    }\n    raw(prop, defaultType) {\n      let str = new Stringifier();\n      return str.raw(this, prop, defaultType);\n    }\n    remove() {\n      if (this.parent) {\n        this.parent.removeChild(this);\n      }\n      this.parent = undefined;\n      return this;\n    }\n    replaceWith(...nodes) {\n      if (this.parent) {\n        let bookmark = this;\n        let foundSelf = false;\n        for (let node of nodes) {\n          if (node === this) {\n            foundSelf = true;\n          } else if (foundSelf) {\n            this.parent.insertAfter(bookmark, node);\n            bookmark = node;\n          } else {\n            this.parent.insertBefore(bookmark, node);\n          }\n        }\n        if (!foundSelf) {\n          this.remove();\n        }\n      }\n      return this;\n    }\n    root() {\n      let result = this;\n      while (result.parent && result.parent.type !== 'document') {\n        result = result.parent;\n      }\n      return result;\n    }\n    toJSON(_, inputs) {\n      let fixed = {};\n      let emitInputs = inputs == null;\n      inputs = inputs || new Map();\n      let inputsNextIndex = 0;\n      for (let name in this) {\n        if (!Object.prototype.hasOwnProperty.call(this, name)) {\n          /* c8 ignore next 2 */\n          continue;\n        }\n        if (name === 'parent' || name === 'proxyCache') continue;\n        let value = this[name];\n        if (Array.isArray(value)) {\n          fixed[name] = value.map(i => {\n            if (typeof i === 'object' && i.toJSON) {\n              return i.toJSON(null, inputs);\n            } else {\n              return i;\n            }\n          });\n        } else if (typeof value === 'object' && value.toJSON) {\n          fixed[name] = value.toJSON(null, inputs);\n        } else if (name === 'source') {\n          let inputId = inputs.get(value.input);\n          if (inputId == null) {\n            inputId = inputsNextIndex;\n            inputs.set(value.input, inputsNextIndex);\n            inputsNextIndex++;\n          }\n          fixed[name] = {\n            end: value.end,\n            inputId,\n            start: value.start\n          };\n        } else {\n          fixed[name] = value;\n        }\n      }\n      if (emitInputs) {\n        fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\n      }\n      return fixed;\n    }\n    toProxy() {\n      if (!this.proxyCache) {\n        this.proxyCache = new Proxy(this, this.getProxyProcessor());\n      }\n      return this.proxyCache;\n    }\n    toString(stringifier = stringify) {\n      if (stringifier.stringify) stringifier = stringifier.stringify;\n      let result = '';\n      stringifier(this, i => {\n        result += i;\n      });\n      return result;\n    }\n    warn(result, text, opts) {\n      let data = {\n        node: this\n      };\n      for (let i in opts) data[i] = opts[i];\n      return result.warn(text, data);\n    }\n    get proxyOf() {\n      return this;\n    }\n  }\n  node = Node;\n  Node.default = Node;\n  return node;\n}\nvar comment;\nvar hasRequiredComment;\nfunction requireComment() {\n  if (hasRequiredComment) return comment;\n  hasRequiredComment = 1;\n  let Node = requireNode$1();\n  class Comment extends Node {\n    constructor(defaults) {\n      super(defaults);\n      this.type = 'comment';\n    }\n  }\n  comment = Comment;\n  Comment.default = Comment;\n  return comment;\n}\nvar declaration;\nvar hasRequiredDeclaration;\nfunction requireDeclaration() {\n  if (hasRequiredDeclaration) return declaration;\n  hasRequiredDeclaration = 1;\n  let Node = requireNode$1();\n  class Declaration extends Node {\n    constructor(defaults) {\n      if (defaults && typeof defaults.value !== 'undefined' && typeof defaults.value !== 'string') {\n        defaults = {\n          ...defaults,\n          value: String(defaults.value)\n        };\n      }\n      super(defaults);\n      this.type = 'decl';\n    }\n    get variable() {\n      return this.prop.startsWith('--') || this.prop[0] === '$';\n    }\n  }\n  declaration = Declaration;\n  Declaration.default = Declaration;\n  return declaration;\n}\nvar container;\nvar hasRequiredContainer$1;\nfunction requireContainer$1() {\n  if (hasRequiredContainer$1) return container;\n  hasRequiredContainer$1 = 1;\n  let Comment = requireComment();\n  let Declaration = requireDeclaration();\n  let Node = requireNode$1();\n  let {\n    isClean,\n    my\n  } = requireSymbols();\n  let AtRule, parse, Root, Rule;\n  function cleanSource(nodes) {\n    return nodes.map(i => {\n      if (i.nodes) i.nodes = cleanSource(i.nodes);\n      delete i.source;\n      return i;\n    });\n  }\n  function markTreeDirty(node) {\n    node[isClean] = false;\n    if (node.proxyOf.nodes) {\n      for (let i of node.proxyOf.nodes) {\n        markTreeDirty(i);\n      }\n    }\n  }\n  class Container extends Node {\n    append(...children) {\n      for (let child of children) {\n        let nodes = this.normalize(child, this.last);\n        for (let node of nodes) this.proxyOf.nodes.push(node);\n      }\n      this.markDirty();\n      return this;\n    }\n    cleanRaws(keepBetween) {\n      super.cleanRaws(keepBetween);\n      if (this.nodes) {\n        for (let node of this.nodes) node.cleanRaws(keepBetween);\n      }\n    }\n    each(callback) {\n      if (!this.proxyOf.nodes) return undefined;\n      let iterator = this.getIterator();\n      let index, result;\n      while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n        index = this.indexes[iterator];\n        result = callback(this.proxyOf.nodes[index], index);\n        if (result === false) break;\n        this.indexes[iterator] += 1;\n      }\n      delete this.indexes[iterator];\n      return result;\n    }\n    every(condition) {\n      return this.nodes.every(condition);\n    }\n    getIterator() {\n      if (!this.lastEach) this.lastEach = 0;\n      if (!this.indexes) this.indexes = {};\n      this.lastEach += 1;\n      let iterator = this.lastEach;\n      this.indexes[iterator] = 0;\n      return iterator;\n    }\n    getProxyProcessor() {\n      return {\n        get(node, prop) {\n          if (prop === 'proxyOf') {\n            return node;\n          } else if (!node[prop]) {\n            return node[prop];\n          } else if (prop === 'each' || typeof prop === 'string' && prop.startsWith('walk')) {\n            return (...args) => {\n              return node[prop](...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index);\n                } else {\n                  return i;\n                }\n              }));\n            };\n          } else if (prop === 'every' || prop === 'some') {\n            return cb => {\n              return node[prop]((child, ...other) => cb(child.toProxy(), ...other));\n            };\n          } else if (prop === 'root') {\n            return () => node.root().toProxy();\n          } else if (prop === 'nodes') {\n            return node.nodes.map(i => i.toProxy());\n          } else if (prop === 'first' || prop === 'last') {\n            return node[prop].toProxy();\n          } else {\n            return node[prop];\n          }\n        },\n        set(node, prop, value) {\n          if (node[prop] === value) return true;\n          node[prop] = value;\n          if (prop === 'name' || prop === 'params' || prop === 'selector') {\n            node.markDirty();\n          }\n          return true;\n        }\n      };\n    }\n    index(child) {\n      if (typeof child === 'number') return child;\n      if (child.proxyOf) child = child.proxyOf;\n      return this.proxyOf.nodes.indexOf(child);\n    }\n    insertAfter(exist, add) {\n      let existIndex = this.index(exist);\n      let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\n      existIndex = this.index(exist);\n      for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node);\n      let index;\n      for (let id in this.indexes) {\n        index = this.indexes[id];\n        if (existIndex < index) {\n          this.indexes[id] = index + nodes.length;\n        }\n      }\n      this.markDirty();\n      return this;\n    }\n    insertBefore(exist, add) {\n      let existIndex = this.index(exist);\n      let type = existIndex === 0 ? 'prepend' : false;\n      let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse();\n      existIndex = this.index(exist);\n      for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node);\n      let index;\n      for (let id in this.indexes) {\n        index = this.indexes[id];\n        if (existIndex <= index) {\n          this.indexes[id] = index + nodes.length;\n        }\n      }\n      this.markDirty();\n      return this;\n    }\n    normalize(nodes, sample) {\n      if (typeof nodes === 'string') {\n        nodes = cleanSource(parse(nodes).nodes);\n      } else if (typeof nodes === 'undefined') {\n        nodes = [];\n      } else if (Array.isArray(nodes)) {\n        nodes = nodes.slice(0);\n        for (let i of nodes) {\n          if (i.parent) i.parent.removeChild(i, 'ignore');\n        }\n      } else if (nodes.type === 'root' && this.type !== 'document') {\n        nodes = nodes.nodes.slice(0);\n        for (let i of nodes) {\n          if (i.parent) i.parent.removeChild(i, 'ignore');\n        }\n      } else if (nodes.type) {\n        nodes = [nodes];\n      } else if (nodes.prop) {\n        if (typeof nodes.value === 'undefined') {\n          throw new Error('Value field is missed in node creation');\n        } else if (typeof nodes.value !== 'string') {\n          nodes.value = String(nodes.value);\n        }\n        nodes = [new Declaration(nodes)];\n      } else if (nodes.selector || nodes.selectors) {\n        nodes = [new Rule(nodes)];\n      } else if (nodes.name) {\n        nodes = [new AtRule(nodes)];\n      } else if (nodes.text) {\n        nodes = [new Comment(nodes)];\n      } else {\n        throw new Error('Unknown node type in node creation');\n      }\n      let processed = nodes.map(i => {\n        /* c8 ignore next */\n        if (!i[my]) Container.rebuild(i);\n        i = i.proxyOf;\n        if (i.parent) i.parent.removeChild(i);\n        if (i[isClean]) markTreeDirty(i);\n        if (!i.raws) i.raws = {};\n        if (typeof i.raws.before === 'undefined') {\n          if (sample && typeof sample.raws.before !== 'undefined') {\n            i.raws.before = sample.raws.before.replace(/\\S/g, '');\n          }\n        }\n        i.parent = this.proxyOf;\n        return i;\n      });\n      return processed;\n    }\n    prepend(...children) {\n      children = children.reverse();\n      for (let child of children) {\n        let nodes = this.normalize(child, this.first, 'prepend').reverse();\n        for (let node of nodes) this.proxyOf.nodes.unshift(node);\n        for (let id in this.indexes) {\n          this.indexes[id] = this.indexes[id] + nodes.length;\n        }\n      }\n      this.markDirty();\n      return this;\n    }\n    push(child) {\n      child.parent = this;\n      this.proxyOf.nodes.push(child);\n      return this;\n    }\n    removeAll() {\n      for (let node of this.proxyOf.nodes) node.parent = undefined;\n      this.proxyOf.nodes = [];\n      this.markDirty();\n      return this;\n    }\n    removeChild(child) {\n      child = this.index(child);\n      this.proxyOf.nodes[child].parent = undefined;\n      this.proxyOf.nodes.splice(child, 1);\n      let index;\n      for (let id in this.indexes) {\n        index = this.indexes[id];\n        if (index >= child) {\n          this.indexes[id] = index - 1;\n        }\n      }\n      this.markDirty();\n      return this;\n    }\n    replaceValues(pattern, opts, callback) {\n      if (!callback) {\n        callback = opts;\n        opts = {};\n      }\n      this.walkDecls(decl => {\n        if (opts.props && !opts.props.includes(decl.prop)) return;\n        if (opts.fast && !decl.value.includes(opts.fast)) return;\n        decl.value = decl.value.replace(pattern, callback);\n      });\n      this.markDirty();\n      return this;\n    }\n    some(condition) {\n      return this.nodes.some(condition);\n    }\n    walk(callback) {\n      return this.each((child, i) => {\n        let result;\n        try {\n          result = callback(child, i);\n        } catch (e) {\n          throw child.addToError(e);\n        }\n        if (result !== false && child.walk) {\n          result = child.walk(callback);\n        }\n        return result;\n      });\n    }\n    walkAtRules(name, callback) {\n      if (!callback) {\n        callback = name;\n        return this.walk((child, i) => {\n          if (child.type === 'atrule') {\n            return callback(child, i);\n          }\n        });\n      }\n      if (name instanceof RegExp) {\n        return this.walk((child, i) => {\n          if (child.type === 'atrule' && name.test(child.name)) {\n            return callback(child, i);\n          }\n        });\n      }\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && child.name === name) {\n          return callback(child, i);\n        }\n      });\n    }\n    walkComments(callback) {\n      return this.walk((child, i) => {\n        if (child.type === 'comment') {\n          return callback(child, i);\n        }\n      });\n    }\n    walkDecls(prop, callback) {\n      if (!callback) {\n        callback = prop;\n        return this.walk((child, i) => {\n          if (child.type === 'decl') {\n            return callback(child, i);\n          }\n        });\n      }\n      if (prop instanceof RegExp) {\n        return this.walk((child, i) => {\n          if (child.type === 'decl' && prop.test(child.prop)) {\n            return callback(child, i);\n          }\n        });\n      }\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && child.prop === prop) {\n          return callback(child, i);\n        }\n      });\n    }\n    walkRules(selector, callback) {\n      if (!callback) {\n        callback = selector;\n        return this.walk((child, i) => {\n          if (child.type === 'rule') {\n            return callback(child, i);\n          }\n        });\n      }\n      if (selector instanceof RegExp) {\n        return this.walk((child, i) => {\n          if (child.type === 'rule' && selector.test(child.selector)) {\n            return callback(child, i);\n          }\n        });\n      }\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && child.selector === selector) {\n          return callback(child, i);\n        }\n      });\n    }\n    get first() {\n      if (!this.proxyOf.nodes) return undefined;\n      return this.proxyOf.nodes[0];\n    }\n    get last() {\n      if (!this.proxyOf.nodes) return undefined;\n      return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];\n    }\n  }\n  Container.registerParse = dependant => {\n    parse = dependant;\n  };\n  Container.registerRule = dependant => {\n    Rule = dependant;\n  };\n  Container.registerAtRule = dependant => {\n    AtRule = dependant;\n  };\n  Container.registerRoot = dependant => {\n    Root = dependant;\n  };\n  container = Container;\n  Container.default = Container;\n\n  /* c8 ignore start */\n  Container.rebuild = node => {\n    if (node.type === 'atrule') {\n      Object.setPrototypeOf(node, AtRule.prototype);\n    } else if (node.type === 'rule') {\n      Object.setPrototypeOf(node, Rule.prototype);\n    } else if (node.type === 'decl') {\n      Object.setPrototypeOf(node, Declaration.prototype);\n    } else if (node.type === 'comment') {\n      Object.setPrototypeOf(node, Comment.prototype);\n    } else if (node.type === 'root') {\n      Object.setPrototypeOf(node, Root.prototype);\n    }\n    node[my] = true;\n    if (node.nodes) {\n      node.nodes.forEach(child => {\n        Container.rebuild(child);\n      });\n    }\n  };\n  /* c8 ignore stop */\n  return container;\n}\nvar atRule;\nvar hasRequiredAtRule;\nfunction requireAtRule() {\n  if (hasRequiredAtRule) return atRule;\n  hasRequiredAtRule = 1;\n  let Container = requireContainer$1();\n  class AtRule extends Container {\n    constructor(defaults) {\n      super(defaults);\n      this.type = 'atrule';\n    }\n    append(...children) {\n      if (!this.proxyOf.nodes) this.nodes = [];\n      return super.append(...children);\n    }\n    prepend(...children) {\n      if (!this.proxyOf.nodes) this.nodes = [];\n      return super.prepend(...children);\n    }\n  }\n  atRule = AtRule;\n  AtRule.default = AtRule;\n  Container.registerAtRule(AtRule);\n  return atRule;\n}\nvar document;\nvar hasRequiredDocument;\nfunction requireDocument() {\n  if (hasRequiredDocument) return document;\n  hasRequiredDocument = 1;\n  let Container = requireContainer$1();\n  let LazyResult, Processor;\n  class Document extends Container {\n    constructor(defaults) {\n      // type needs to be passed to super, otherwise child roots won't be normalized correctly\n      super({\n        type: 'document',\n        ...defaults\n      });\n      if (!this.nodes) {\n        this.nodes = [];\n      }\n    }\n    toResult(opts = {}) {\n      let lazy = new LazyResult(new Processor(), this, opts);\n      return lazy.stringify();\n    }\n  }\n  Document.registerLazyResult = dependant => {\n    LazyResult = dependant;\n  };\n  Document.registerProcessor = dependant => {\n    Processor = dependant;\n  };\n  document = Document;\n  Document.default = Document;\n  return document;\n}\nvar nonSecure;\nvar hasRequiredNonSecure;\nfunction requireNonSecure() {\n  if (hasRequiredNonSecure) return nonSecure;\n  hasRequiredNonSecure = 1;\n  // This alphabet uses `A-Za-z0-9_-` symbols.\n  // The order of characters is optimized for better gzip and brotli compression.\n  // References to the same file (works both for gzip and brotli):\n  // `'use`, `andom`, and `rict'`\n  // References to the brotli default dictionary:\n  // `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\n  let urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\n  let customAlphabet = (alphabet, defaultSize = 21) => {\n    return (size = defaultSize) => {\n      let id = '';\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let i = size | 0;\n      while (i--) {\n        // `| 0` is more compact and faster than `Math.floor()`.\n        id += alphabet[Math.random() * alphabet.length | 0];\n      }\n      return id;\n    };\n  };\n  let nanoid = (size = 21) => {\n    let id = '';\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size | 0;\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += urlAlphabet[Math.random() * 64 | 0];\n    }\n    return id;\n  };\n  nonSecure = {\n    nanoid,\n    customAlphabet\n  };\n  return nonSecure;\n}\nvar previousMap;\nvar hasRequiredPreviousMap;\nfunction requirePreviousMap() {\n  if (hasRequiredPreviousMap) return previousMap;\n  hasRequiredPreviousMap = 1;\n  let {\n    existsSync,\n    readFileSync\n  } = require$$2;\n  let {\n    dirname,\n    join\n  } = require$$2;\n  let {\n    SourceMapConsumer,\n    SourceMapGenerator\n  } = require$$2;\n  function fromBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str, 'base64').toString();\n    } else {\n      /* c8 ignore next 2 */\n      return window.atob(str);\n    }\n  }\n  class PreviousMap {\n    constructor(css, opts) {\n      if (opts.map === false) return;\n      this.loadAnnotation(css);\n      this.inline = this.startWith(this.annotation, 'data:');\n      let prev = opts.map ? opts.map.prev : undefined;\n      let text = this.loadMap(opts.from, prev);\n      if (!this.mapFile && opts.from) {\n        this.mapFile = opts.from;\n      }\n      if (this.mapFile) this.root = dirname(this.mapFile);\n      if (text) this.text = text;\n    }\n    consumer() {\n      if (!this.consumerCache) {\n        this.consumerCache = new SourceMapConsumer(this.text);\n      }\n      return this.consumerCache;\n    }\n    decodeInline(text) {\n      let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n      let baseUri = /^data:application\\/json;base64,/;\n      let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n      let uri = /^data:application\\/json,/;\n      let uriMatch = text.match(charsetUri) || text.match(uri);\n      if (uriMatch) {\n        return decodeURIComponent(text.substr(uriMatch[0].length));\n      }\n      let baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri);\n      if (baseUriMatch) {\n        return fromBase64(text.substr(baseUriMatch[0].length));\n      }\n      let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n      throw new Error('Unsupported source map encoding ' + encoding);\n    }\n    getAnnotationURL(sourceMapString) {\n      return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim();\n    }\n    isMap(map) {\n      if (typeof map !== 'object') return false;\n      return typeof map.mappings === 'string' || typeof map._mappings === 'string' || Array.isArray(map.sections);\n    }\n    loadAnnotation(css) {\n      let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g);\n      if (!comments) return;\n\n      // sourceMappingURLs from comments, strings, etc.\n      let start = css.lastIndexOf(comments.pop());\n      let end = css.indexOf('*/', start);\n      if (start > -1 && end > -1) {\n        // Locate the last sourceMappingURL to avoid pickin\n        this.annotation = this.getAnnotationURL(css.substring(start, end));\n      }\n    }\n    loadFile(path) {\n      this.root = dirname(path);\n      if (existsSync(path)) {\n        this.mapFile = path;\n        return readFileSync(path, 'utf-8').toString().trim();\n      }\n    }\n    loadMap(file, prev) {\n      if (prev === false) return false;\n      if (prev) {\n        if (typeof prev === 'string') {\n          return prev;\n        } else if (typeof prev === 'function') {\n          let prevPath = prev(file);\n          if (prevPath) {\n            let map = this.loadFile(prevPath);\n            if (!map) {\n              throw new Error('Unable to load previous source map: ' + prevPath.toString());\n            }\n            return map;\n          }\n        } else if (prev instanceof SourceMapConsumer) {\n          return SourceMapGenerator.fromSourceMap(prev).toString();\n        } else if (prev instanceof SourceMapGenerator) {\n          return prev.toString();\n        } else if (this.isMap(prev)) {\n          return JSON.stringify(prev);\n        } else {\n          throw new Error('Unsupported previous source map format: ' + prev.toString());\n        }\n      } else if (this.inline) {\n        return this.decodeInline(this.annotation);\n      } else if (this.annotation) {\n        let map = this.annotation;\n        if (file) map = join(dirname(file), map);\n        return this.loadFile(map);\n      }\n    }\n    startWith(string, start) {\n      if (!string) return false;\n      return string.substr(0, start.length) === start;\n    }\n    withContent() {\n      return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n    }\n  }\n  previousMap = PreviousMap;\n  PreviousMap.default = PreviousMap;\n  return previousMap;\n}\nvar input;\nvar hasRequiredInput;\nfunction requireInput() {\n  if (hasRequiredInput) return input;\n  hasRequiredInput = 1;\n  let {\n    nanoid\n  } = /*@__PURE__*/requireNonSecure();\n  let {\n    isAbsolute,\n    resolve\n  } = require$$2;\n  let {\n    SourceMapConsumer,\n    SourceMapGenerator\n  } = require$$2;\n  let {\n    fileURLToPath,\n    pathToFileURL\n  } = require$$2;\n  let CssSyntaxError = requireCssSyntaxError();\n  let PreviousMap = requirePreviousMap();\n  let terminalHighlight = require$$2;\n  let fromOffsetCache = Symbol('fromOffsetCache');\n  let sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\n  let pathAvailable = Boolean(resolve && isAbsolute);\n  class Input {\n    constructor(css, opts = {}) {\n      if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {\n        throw new Error(`PostCSS received ${css} instead of CSS string`);\n      }\n      this.css = css.toString();\n      if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n        this.hasBOM = true;\n        this.css = this.css.slice(1);\n      } else {\n        this.hasBOM = false;\n      }\n      this.document = this.css;\n      if (opts.document) this.document = opts.document.toString();\n      if (opts.from) {\n        if (!pathAvailable || /^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n          this.file = opts.from;\n        } else {\n          this.file = resolve(opts.from);\n        }\n      }\n      if (pathAvailable && sourceMapAvailable) {\n        let map = new PreviousMap(this.css, opts);\n        if (map.text) {\n          this.map = map;\n          let file = map.consumer().file;\n          if (!this.file && file) this.file = this.mapResolve(file);\n        }\n      }\n      if (!this.file) {\n        this.id = '<input css ' + nanoid(6) + '>';\n      }\n      if (this.map) this.map.file = this.from;\n    }\n    error(message, line, column, opts = {}) {\n      let endColumn, endLine, result;\n      if (line && typeof line === 'object') {\n        let start = line;\n        let end = column;\n        if (typeof start.offset === 'number') {\n          let pos = this.fromOffset(start.offset);\n          line = pos.line;\n          column = pos.col;\n        } else {\n          line = start.line;\n          column = start.column;\n        }\n        if (typeof end.offset === 'number') {\n          let pos = this.fromOffset(end.offset);\n          endLine = pos.line;\n          endColumn = pos.col;\n        } else {\n          endLine = end.line;\n          endColumn = end.column;\n        }\n      } else if (!column) {\n        let pos = this.fromOffset(line);\n        line = pos.line;\n        column = pos.col;\n      }\n      let origin = this.origin(line, column, endLine, endColumn);\n      if (origin) {\n        result = new CssSyntaxError(message, origin.endLine === undefined ? origin.line : {\n          column: origin.column,\n          line: origin.line\n        }, origin.endLine === undefined ? origin.column : {\n          column: origin.endColumn,\n          line: origin.endLine\n        }, origin.source, origin.file, opts.plugin);\n      } else {\n        result = new CssSyntaxError(message, endLine === undefined ? line : {\n          column,\n          line\n        }, endLine === undefined ? column : {\n          column: endColumn,\n          line: endLine\n        }, this.css, this.file, opts.plugin);\n      }\n      result.input = {\n        column,\n        endColumn,\n        endLine,\n        line,\n        source: this.css\n      };\n      if (this.file) {\n        if (pathToFileURL) {\n          result.input.url = pathToFileURL(this.file).toString();\n        }\n        result.input.file = this.file;\n      }\n      return result;\n    }\n    fromOffset(offset) {\n      let lastLine, lineToIndex;\n      if (!this[fromOffsetCache]) {\n        let lines = this.css.split('\\n');\n        lineToIndex = new Array(lines.length);\n        let prevIndex = 0;\n        for (let i = 0, l = lines.length; i < l; i++) {\n          lineToIndex[i] = prevIndex;\n          prevIndex += lines[i].length + 1;\n        }\n        this[fromOffsetCache] = lineToIndex;\n      } else {\n        lineToIndex = this[fromOffsetCache];\n      }\n      lastLine = lineToIndex[lineToIndex.length - 1];\n      let min = 0;\n      if (offset >= lastLine) {\n        min = lineToIndex.length - 1;\n      } else {\n        let max = lineToIndex.length - 2;\n        let mid;\n        while (min < max) {\n          mid = min + (max - min >> 1);\n          if (offset < lineToIndex[mid]) {\n            max = mid - 1;\n          } else if (offset >= lineToIndex[mid + 1]) {\n            min = mid + 1;\n          } else {\n            min = mid;\n            break;\n          }\n        }\n      }\n      return {\n        col: offset - lineToIndex[min] + 1,\n        line: min + 1\n      };\n    }\n    mapResolve(file) {\n      if (/^\\w+:\\/\\//.test(file)) {\n        return file;\n      }\n      return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file);\n    }\n    origin(line, column, endLine, endColumn) {\n      if (!this.map) return false;\n      let consumer = this.map.consumer();\n      let from = consumer.originalPositionFor({\n        column,\n        line\n      });\n      if (!from.source) return false;\n      let to;\n      if (typeof endLine === 'number') {\n        to = consumer.originalPositionFor({\n          column: endColumn,\n          line: endLine\n        });\n      }\n      let fromUrl;\n      if (isAbsolute(from.source)) {\n        fromUrl = pathToFileURL(from.source);\n      } else {\n        fromUrl = new URL(from.source, this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile));\n      }\n      let result = {\n        column: from.column,\n        endColumn: to && to.column,\n        endLine: to && to.line,\n        line: from.line,\n        url: fromUrl.toString()\n      };\n      if (fromUrl.protocol === 'file:') {\n        if (fileURLToPath) {\n          result.file = fileURLToPath(fromUrl);\n        } else {\n          /* c8 ignore next 2 */\n          throw new Error(`file: protocol is not available in this PostCSS build`);\n        }\n      }\n      let source = consumer.sourceContentFor(from.source);\n      if (source) result.source = source;\n      return result;\n    }\n    toJSON() {\n      let json = {};\n      for (let name of ['hasBOM', 'css', 'file', 'id']) {\n        if (this[name] != null) {\n          json[name] = this[name];\n        }\n      }\n      if (this.map) {\n        json.map = {\n          ...this.map\n        };\n        if (json.map.consumerCache) {\n          json.map.consumerCache = undefined;\n        }\n      }\n      return json;\n    }\n    get from() {\n      return this.file || this.id;\n    }\n  }\n  input = Input;\n  Input.default = Input;\n  if (terminalHighlight && terminalHighlight.registerInput) {\n    terminalHighlight.registerInput(Input);\n  }\n  return input;\n}\nvar root;\nvar hasRequiredRoot;\nfunction requireRoot() {\n  if (hasRequiredRoot) return root;\n  hasRequiredRoot = 1;\n  let Container = requireContainer$1();\n  let LazyResult, Processor;\n  class Root extends Container {\n    constructor(defaults) {\n      super(defaults);\n      this.type = 'root';\n      if (!this.nodes) this.nodes = [];\n    }\n    normalize(child, sample, type) {\n      let nodes = super.normalize(child);\n      if (sample) {\n        if (type === 'prepend') {\n          if (this.nodes.length > 1) {\n            sample.raws.before = this.nodes[1].raws.before;\n          } else {\n            delete sample.raws.before;\n          }\n        } else if (this.first !== sample) {\n          for (let node of nodes) {\n            node.raws.before = sample.raws.before;\n          }\n        }\n      }\n      return nodes;\n    }\n    removeChild(child, ignore) {\n      let index = this.index(child);\n      if (!ignore && index === 0 && this.nodes.length > 1) {\n        this.nodes[1].raws.before = this.nodes[index].raws.before;\n      }\n      return super.removeChild(child);\n    }\n    toResult(opts = {}) {\n      let lazy = new LazyResult(new Processor(), this, opts);\n      return lazy.stringify();\n    }\n  }\n  Root.registerLazyResult = dependant => {\n    LazyResult = dependant;\n  };\n  Root.registerProcessor = dependant => {\n    Processor = dependant;\n  };\n  root = Root;\n  Root.default = Root;\n  Container.registerRoot(Root);\n  return root;\n}\nvar list_1;\nvar hasRequiredList;\nfunction requireList() {\n  if (hasRequiredList) return list_1;\n  hasRequiredList = 1;\n  let list = {\n    comma(string) {\n      return list.split(string, [','], true);\n    },\n    space(string) {\n      let spaces = [' ', '\\n', '\\t'];\n      return list.split(string, spaces);\n    },\n    split(string, separators, last) {\n      let array = [];\n      let current = '';\n      let split = false;\n      let func = 0;\n      let inQuote = false;\n      let prevQuote = '';\n      let escape = false;\n      for (let letter of string) {\n        if (escape) {\n          escape = false;\n        } else if (letter === '\\\\') {\n          escape = true;\n        } else if (inQuote) {\n          if (letter === prevQuote) {\n            inQuote = false;\n          }\n        } else if (letter === '\"' || letter === \"'\") {\n          inQuote = true;\n          prevQuote = letter;\n        } else if (letter === '(') {\n          func += 1;\n        } else if (letter === ')') {\n          if (func > 0) func -= 1;\n        } else if (func === 0) {\n          if (separators.includes(letter)) split = true;\n        }\n        if (split) {\n          if (current !== '') array.push(current.trim());\n          current = '';\n          split = false;\n        } else {\n          current += letter;\n        }\n      }\n      if (last || current !== '') array.push(current.trim());\n      return array;\n    }\n  };\n  list_1 = list;\n  list.default = list;\n  return list_1;\n}\nvar rule;\nvar hasRequiredRule;\nfunction requireRule() {\n  if (hasRequiredRule) return rule;\n  hasRequiredRule = 1;\n  let Container = requireContainer$1();\n  let list = requireList();\n  class Rule extends Container {\n    constructor(defaults) {\n      super(defaults);\n      this.type = 'rule';\n      if (!this.nodes) this.nodes = [];\n    }\n    get selectors() {\n      return list.comma(this.selector);\n    }\n    set selectors(values) {\n      let match = this.selector ? this.selector.match(/,\\s*/) : null;\n      let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n      this.selector = values.join(sep);\n    }\n  }\n  rule = Rule;\n  Rule.default = Rule;\n  Container.registerRule(Rule);\n  return rule;\n}\nvar fromJSON_1;\nvar hasRequiredFromJSON;\nfunction requireFromJSON() {\n  if (hasRequiredFromJSON) return fromJSON_1;\n  hasRequiredFromJSON = 1;\n  let AtRule = requireAtRule();\n  let Comment = requireComment();\n  let Declaration = requireDeclaration();\n  let Input = requireInput();\n  let PreviousMap = requirePreviousMap();\n  let Root = requireRoot();\n  let Rule = requireRule();\n  function fromJSON(json, inputs) {\n    if (Array.isArray(json)) return json.map(n => fromJSON(n));\n    let {\n      inputs: ownInputs,\n      ...defaults\n    } = json;\n    if (ownInputs) {\n      inputs = [];\n      for (let input of ownInputs) {\n        let inputHydrated = {\n          ...input,\n          __proto__: Input.prototype\n        };\n        if (inputHydrated.map) {\n          inputHydrated.map = {\n            ...inputHydrated.map,\n            __proto__: PreviousMap.prototype\n          };\n        }\n        inputs.push(inputHydrated);\n      }\n    }\n    if (defaults.nodes) {\n      defaults.nodes = json.nodes.map(n => fromJSON(n, inputs));\n    }\n    if (defaults.source) {\n      let {\n        inputId,\n        ...source\n      } = defaults.source;\n      defaults.source = source;\n      if (inputId != null) {\n        defaults.source.input = inputs[inputId];\n      }\n    }\n    if (defaults.type === 'root') {\n      return new Root(defaults);\n    } else if (defaults.type === 'decl') {\n      return new Declaration(defaults);\n    } else if (defaults.type === 'rule') {\n      return new Rule(defaults);\n    } else if (defaults.type === 'comment') {\n      return new Comment(defaults);\n    } else if (defaults.type === 'atrule') {\n      return new AtRule(defaults);\n    } else {\n      throw new Error('Unknown node type: ' + json.type);\n    }\n  }\n  fromJSON_1 = fromJSON;\n  fromJSON.default = fromJSON;\n  return fromJSON_1;\n}\nvar mapGenerator;\nvar hasRequiredMapGenerator;\nfunction requireMapGenerator() {\n  if (hasRequiredMapGenerator) return mapGenerator;\n  hasRequiredMapGenerator = 1;\n  let {\n    dirname,\n    relative,\n    resolve,\n    sep\n  } = require$$2;\n  let {\n    SourceMapConsumer,\n    SourceMapGenerator\n  } = require$$2;\n  let {\n    pathToFileURL\n  } = require$$2;\n  let Input = requireInput();\n  let sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\n  let pathAvailable = Boolean(dirname && resolve && relative && sep);\n  class MapGenerator {\n    constructor(stringify, root, opts, cssString) {\n      this.stringify = stringify;\n      this.mapOpts = opts.map || {};\n      this.root = root;\n      this.opts = opts;\n      this.css = cssString;\n      this.originalCSS = cssString;\n      this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n      this.memoizedFileURLs = new Map();\n      this.memoizedPaths = new Map();\n      this.memoizedURLs = new Map();\n    }\n    addAnnotation() {\n      let content;\n      if (this.isInline()) {\n        content = 'data:application/json;base64,' + this.toBase64(this.map.toString());\n      } else if (typeof this.mapOpts.annotation === 'string') {\n        content = this.mapOpts.annotation;\n      } else if (typeof this.mapOpts.annotation === 'function') {\n        content = this.mapOpts.annotation(this.opts.to, this.root);\n      } else {\n        content = this.outputFile() + '.map';\n      }\n      let eol = '\\n';\n      if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n      this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n    }\n    applyPrevMaps() {\n      for (let prev of this.previous()) {\n        let from = this.toUrl(this.path(prev.file));\n        let root = prev.root || dirname(prev.file);\n        let map;\n        if (this.mapOpts.sourcesContent === false) {\n          map = new SourceMapConsumer(prev.text);\n          if (map.sourcesContent) {\n            map.sourcesContent = null;\n          }\n        } else {\n          map = prev.consumer();\n        }\n        this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n      }\n    }\n    clearAnnotation() {\n      if (this.mapOpts.annotation === false) return;\n      if (this.root) {\n        let node;\n        for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n          node = this.root.nodes[i];\n          if (node.type !== 'comment') continue;\n          if (node.text.startsWith('# sourceMappingURL=')) {\n            this.root.removeChild(i);\n          }\n        }\n      } else if (this.css) {\n        this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n      }\n    }\n    generate() {\n      this.clearAnnotation();\n      if (pathAvailable && sourceMapAvailable && this.isMap()) {\n        return this.generateMap();\n      } else {\n        let result = '';\n        this.stringify(this.root, i => {\n          result += i;\n        });\n        return [result];\n      }\n    }\n    generateMap() {\n      if (this.root) {\n        this.generateString();\n      } else if (this.previous().length === 1) {\n        let prev = this.previous()[0].consumer();\n        prev.file = this.outputFile();\n        this.map = SourceMapGenerator.fromSourceMap(prev, {\n          ignoreInvalidMapping: true\n        });\n      } else {\n        this.map = new SourceMapGenerator({\n          file: this.outputFile(),\n          ignoreInvalidMapping: true\n        });\n        this.map.addMapping({\n          generated: {\n            column: 0,\n            line: 1\n          },\n          original: {\n            column: 0,\n            line: 1\n          },\n          source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>'\n        });\n      }\n      if (this.isSourcesContent()) this.setSourcesContent();\n      if (this.root && this.previous().length > 0) this.applyPrevMaps();\n      if (this.isAnnotation()) this.addAnnotation();\n      if (this.isInline()) {\n        return [this.css];\n      } else {\n        return [this.css, this.map];\n      }\n    }\n    generateString() {\n      this.css = '';\n      this.map = new SourceMapGenerator({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      });\n      let line = 1;\n      let column = 1;\n      let noSource = '<no source>';\n      let mapping = {\n        generated: {\n          column: 0,\n          line: 0\n        },\n        original: {\n          column: 0,\n          line: 0\n        },\n        source: ''\n      };\n      let last, lines;\n      this.stringify(this.root, (str, node, type) => {\n        this.css += str;\n        if (node && type !== 'end') {\n          mapping.generated.line = line;\n          mapping.generated.column = column - 1;\n          if (node.source && node.source.start) {\n            mapping.source = this.sourcePath(node);\n            mapping.original.line = node.source.start.line;\n            mapping.original.column = node.source.start.column - 1;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            this.map.addMapping(mapping);\n          }\n        }\n        lines = str.match(/\\n/g);\n        if (lines) {\n          line += lines.length;\n          last = str.lastIndexOf('\\n');\n          column = str.length - last;\n        } else {\n          column += str.length;\n        }\n        if (node && type !== 'start') {\n          let p = node.parent || {\n            raws: {}\n          };\n          let childless = node.type === 'decl' || node.type === 'atrule' && !node.nodes;\n          if (!childless || node !== p.last || p.raws.semicolon) {\n            if (node.source && node.source.end) {\n              mapping.source = this.sourcePath(node);\n              mapping.original.line = node.source.end.line;\n              mapping.original.column = node.source.end.column - 1;\n              mapping.generated.line = line;\n              mapping.generated.column = column - 2;\n              this.map.addMapping(mapping);\n            } else {\n              mapping.source = noSource;\n              mapping.original.line = 1;\n              mapping.original.column = 0;\n              mapping.generated.line = line;\n              mapping.generated.column = column - 1;\n              this.map.addMapping(mapping);\n            }\n          }\n        }\n      });\n    }\n    isAnnotation() {\n      if (this.isInline()) {\n        return true;\n      }\n      if (typeof this.mapOpts.annotation !== 'undefined') {\n        return this.mapOpts.annotation;\n      }\n      if (this.previous().length) {\n        return this.previous().some(i => i.annotation);\n      }\n      return true;\n    }\n    isInline() {\n      if (typeof this.mapOpts.inline !== 'undefined') {\n        return this.mapOpts.inline;\n      }\n      let annotation = this.mapOpts.annotation;\n      if (typeof annotation !== 'undefined' && annotation !== true) {\n        return false;\n      }\n      if (this.previous().length) {\n        return this.previous().some(i => i.inline);\n      }\n      return true;\n    }\n    isMap() {\n      if (typeof this.opts.map !== 'undefined') {\n        return !!this.opts.map;\n      }\n      return this.previous().length > 0;\n    }\n    isSourcesContent() {\n      if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n        return this.mapOpts.sourcesContent;\n      }\n      if (this.previous().length) {\n        return this.previous().some(i => i.withContent());\n      }\n      return true;\n    }\n    outputFile() {\n      if (this.opts.to) {\n        return this.path(this.opts.to);\n      } else if (this.opts.from) {\n        return this.path(this.opts.from);\n      } else {\n        return 'to.css';\n      }\n    }\n    path(file) {\n      if (this.mapOpts.absolute) return file;\n      if (file.charCodeAt(0) === 60 /* `<` */) return file;\n      if (/^\\w+:\\/\\//.test(file)) return file;\n      let cached = this.memoizedPaths.get(file);\n      if (cached) return cached;\n      let from = this.opts.to ? dirname(this.opts.to) : '.';\n      if (typeof this.mapOpts.annotation === 'string') {\n        from = dirname(resolve(from, this.mapOpts.annotation));\n      }\n      let path = relative(from, file);\n      this.memoizedPaths.set(file, path);\n      return path;\n    }\n    previous() {\n      if (!this.previousMaps) {\n        this.previousMaps = [];\n        if (this.root) {\n          this.root.walk(node => {\n            if (node.source && node.source.input.map) {\n              let map = node.source.input.map;\n              if (!this.previousMaps.includes(map)) {\n                this.previousMaps.push(map);\n              }\n            }\n          });\n        } else {\n          let input = new Input(this.originalCSS, this.opts);\n          if (input.map) this.previousMaps.push(input.map);\n        }\n      }\n      return this.previousMaps;\n    }\n    setSourcesContent() {\n      let already = {};\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source) {\n            let from = node.source.input.from;\n            if (from && !already[from]) {\n              already[from] = true;\n              let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));\n              this.map.setSourceContent(fromUrl, node.source.input.css);\n            }\n          }\n        });\n      } else if (this.css) {\n        let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : '<no source>';\n        this.map.setSourceContent(from, this.css);\n      }\n    }\n    sourcePath(node) {\n      if (this.mapOpts.from) {\n        return this.toUrl(this.mapOpts.from);\n      } else if (this.usesFileUrls) {\n        return this.toFileUrl(node.source.input.from);\n      } else {\n        return this.toUrl(this.path(node.source.input.from));\n      }\n    }\n    toBase64(str) {\n      if (Buffer) {\n        return Buffer.from(str).toString('base64');\n      } else {\n        return window.btoa(unescape(encodeURIComponent(str)));\n      }\n    }\n    toFileUrl(path) {\n      let cached = this.memoizedFileURLs.get(path);\n      if (cached) return cached;\n      if (pathToFileURL) {\n        let fileURL = pathToFileURL(path).toString();\n        this.memoizedFileURLs.set(path, fileURL);\n        return fileURL;\n      } else {\n        throw new Error('`map.absolute` option is not available in this PostCSS build');\n      }\n    }\n    toUrl(path) {\n      let cached = this.memoizedURLs.get(path);\n      if (cached) return cached;\n      if (sep === '\\\\') {\n        path = path.replace(/\\\\/g, '/');\n      }\n      let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n      this.memoizedURLs.set(path, url);\n      return url;\n    }\n  }\n  mapGenerator = MapGenerator;\n  return mapGenerator;\n}\nvar tokenize;\nvar hasRequiredTokenize;\nfunction requireTokenize() {\n  if (hasRequiredTokenize) return tokenize;\n  hasRequiredTokenize = 1;\n  const SINGLE_QUOTE = \"'\".charCodeAt(0);\n  const DOUBLE_QUOTE = '\"'.charCodeAt(0);\n  const BACKSLASH = '\\\\'.charCodeAt(0);\n  const SLASH = '/'.charCodeAt(0);\n  const NEWLINE = '\\n'.charCodeAt(0);\n  const SPACE = ' '.charCodeAt(0);\n  const FEED = '\\f'.charCodeAt(0);\n  const TAB = '\\t'.charCodeAt(0);\n  const CR = '\\r'.charCodeAt(0);\n  const OPEN_SQUARE = '['.charCodeAt(0);\n  const CLOSE_SQUARE = ']'.charCodeAt(0);\n  const OPEN_PARENTHESES = '('.charCodeAt(0);\n  const CLOSE_PARENTHESES = ')'.charCodeAt(0);\n  const OPEN_CURLY = '{'.charCodeAt(0);\n  const CLOSE_CURLY = '}'.charCodeAt(0);\n  const SEMICOLON = ';'.charCodeAt(0);\n  const ASTERISK = '*'.charCodeAt(0);\n  const COLON = ':'.charCodeAt(0);\n  const AT = '@'.charCodeAt(0);\n  const RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\n  const RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\n  const RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/;\n  const RE_HEX_ESCAPE = /[\\da-f]/i;\n  tokenize = function tokenizer(input, options = {}) {\n    let css = input.css.valueOf();\n    let ignore = options.ignoreErrors;\n    let code, content, escape, next, quote;\n    let currentToken, escaped, escapePos, n, prev;\n    let length = css.length;\n    let pos = 0;\n    let buffer = [];\n    let returned = [];\n    function position() {\n      return pos;\n    }\n    function unclosed(what) {\n      throw input.error('Unclosed ' + what, pos);\n    }\n    function endOfFile() {\n      return returned.length === 0 && pos >= length;\n    }\n    function nextToken(opts) {\n      if (returned.length) return returned.pop();\n      if (pos >= length) return;\n      let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n      code = css.charCodeAt(pos);\n      switch (code) {\n        case NEWLINE:\n        case SPACE:\n        case TAB:\n        case CR:\n        case FEED:\n          {\n            next = pos;\n            do {\n              next += 1;\n              code = css.charCodeAt(next);\n            } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);\n            currentToken = ['space', css.slice(pos, next)];\n            pos = next - 1;\n            break;\n          }\n        case OPEN_SQUARE:\n        case CLOSE_SQUARE:\n        case OPEN_CURLY:\n        case CLOSE_CURLY:\n        case COLON:\n        case SEMICOLON:\n        case CLOSE_PARENTHESES:\n          {\n            let controlChar = String.fromCharCode(code);\n            currentToken = [controlChar, controlChar, pos];\n            break;\n          }\n        case OPEN_PARENTHESES:\n          {\n            prev = buffer.length ? buffer.pop()[1] : '';\n            n = css.charCodeAt(pos + 1);\n            if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {\n              next = pos;\n              do {\n                escaped = false;\n                next = css.indexOf(')', next + 1);\n                if (next === -1) {\n                  if (ignore || ignoreUnclosed) {\n                    next = pos;\n                    break;\n                  } else {\n                    unclosed('bracket');\n                  }\n                }\n                escapePos = next;\n                while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n                  escapePos -= 1;\n                  escaped = !escaped;\n                }\n              } while (escaped);\n              currentToken = ['brackets', css.slice(pos, next + 1), pos, next];\n              pos = next;\n            } else {\n              next = css.indexOf(')', pos + 1);\n              content = css.slice(pos, next + 1);\n              if (next === -1 || RE_BAD_BRACKET.test(content)) {\n                currentToken = ['(', '(', pos];\n              } else {\n                currentToken = ['brackets', content, pos, next];\n                pos = next;\n              }\n            }\n            break;\n          }\n        case SINGLE_QUOTE:\n        case DOUBLE_QUOTE:\n          {\n            quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n            next = pos;\n            do {\n              escaped = false;\n              next = css.indexOf(quote, next + 1);\n              if (next === -1) {\n                if (ignore || ignoreUnclosed) {\n                  next = pos + 1;\n                  break;\n                } else {\n                  unclosed('string');\n                }\n              }\n              escapePos = next;\n              while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n                escapePos -= 1;\n                escaped = !escaped;\n              }\n            } while (escaped);\n            currentToken = ['string', css.slice(pos, next + 1), pos, next];\n            pos = next;\n            break;\n          }\n        case AT:\n          {\n            RE_AT_END.lastIndex = pos + 1;\n            RE_AT_END.test(css);\n            if (RE_AT_END.lastIndex === 0) {\n              next = css.length - 1;\n            } else {\n              next = RE_AT_END.lastIndex - 2;\n            }\n            currentToken = ['at-word', css.slice(pos, next + 1), pos, next];\n            pos = next;\n            break;\n          }\n        case BACKSLASH:\n          {\n            next = pos;\n            escape = true;\n            while (css.charCodeAt(next + 1) === BACKSLASH) {\n              next += 1;\n              escape = !escape;\n            }\n            code = css.charCodeAt(next + 1);\n            if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {\n              next += 1;\n              if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n                while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n                  next += 1;\n                }\n                if (css.charCodeAt(next + 1) === SPACE) {\n                  next += 1;\n                }\n              }\n            }\n            currentToken = ['word', css.slice(pos, next + 1), pos, next];\n            pos = next;\n            break;\n          }\n        default:\n          {\n            if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n              next = css.indexOf('*/', pos + 2) + 1;\n              if (next === 0) {\n                if (ignore || ignoreUnclosed) {\n                  next = css.length;\n                } else {\n                  unclosed('comment');\n                }\n              }\n              currentToken = ['comment', css.slice(pos, next + 1), pos, next];\n              pos = next;\n            } else {\n              RE_WORD_END.lastIndex = pos + 1;\n              RE_WORD_END.test(css);\n              if (RE_WORD_END.lastIndex === 0) {\n                next = css.length - 1;\n              } else {\n                next = RE_WORD_END.lastIndex - 2;\n              }\n              currentToken = ['word', css.slice(pos, next + 1), pos, next];\n              buffer.push(currentToken);\n              pos = next;\n            }\n            break;\n          }\n      }\n      pos++;\n      return currentToken;\n    }\n    function back(token) {\n      returned.push(token);\n    }\n    return {\n      back,\n      endOfFile,\n      nextToken,\n      position\n    };\n  };\n  return tokenize;\n}\nvar parser;\nvar hasRequiredParser;\nfunction requireParser() {\n  if (hasRequiredParser) return parser;\n  hasRequiredParser = 1;\n  let AtRule = requireAtRule();\n  let Comment = requireComment();\n  let Declaration = requireDeclaration();\n  let Root = requireRoot();\n  let Rule = requireRule();\n  let tokenizer = requireTokenize();\n  const SAFE_COMMENT_NEIGHBOR = {\n    empty: true,\n    space: true\n  };\n  function findLastWithPosition(tokens) {\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      let token = tokens[i];\n      let pos = token[3] || token[2];\n      if (pos) return pos;\n    }\n  }\n  class Parser {\n    constructor(input) {\n      this.input = input;\n      this.root = new Root();\n      this.current = this.root;\n      this.spaces = '';\n      this.semicolon = false;\n      this.createTokenizer();\n      this.root.source = {\n        input,\n        start: {\n          column: 1,\n          line: 1,\n          offset: 0\n        }\n      };\n    }\n    atrule(token) {\n      let node = new AtRule();\n      node.name = token[1].slice(1);\n      if (node.name === '') {\n        this.unnamedAtrule(node, token);\n      }\n      this.init(node, token[2]);\n      let type;\n      let prev;\n      let shift;\n      let last = false;\n      let open = false;\n      let params = [];\n      let brackets = [];\n      while (!this.tokenizer.endOfFile()) {\n        token = this.tokenizer.nextToken();\n        type = token[0];\n        if (type === '(' || type === '[') {\n          brackets.push(type === '(' ? ')' : ']');\n        } else if (type === '{' && brackets.length > 0) {\n          brackets.push('}');\n        } else if (type === brackets[brackets.length - 1]) {\n          brackets.pop();\n        }\n        if (brackets.length === 0) {\n          if (type === ';') {\n            node.source.end = this.getPosition(token[2]);\n            node.source.end.offset++;\n            this.semicolon = true;\n            break;\n          } else if (type === '{') {\n            open = true;\n            break;\n          } else if (type === '}') {\n            if (params.length > 0) {\n              shift = params.length - 1;\n              prev = params[shift];\n              while (prev && prev[0] === 'space') {\n                prev = params[--shift];\n              }\n              if (prev) {\n                node.source.end = this.getPosition(prev[3] || prev[2]);\n                node.source.end.offset++;\n              }\n            }\n            this.end(token);\n            break;\n          } else {\n            params.push(token);\n          }\n        } else {\n          params.push(token);\n        }\n        if (this.tokenizer.endOfFile()) {\n          last = true;\n          break;\n        }\n      }\n      node.raws.between = this.spacesAndCommentsFromEnd(params);\n      if (params.length) {\n        node.raws.afterName = this.spacesAndCommentsFromStart(params);\n        this.raw(node, 'params', params);\n        if (last) {\n          token = params[params.length - 1];\n          node.source.end = this.getPosition(token[3] || token[2]);\n          node.source.end.offset++;\n          this.spaces = node.raws.between;\n          node.raws.between = '';\n        }\n      } else {\n        node.raws.afterName = '';\n        node.params = '';\n      }\n      if (open) {\n        node.nodes = [];\n        this.current = node;\n      }\n    }\n    checkMissedSemicolon(tokens) {\n      let colon = this.colon(tokens);\n      if (colon === false) return;\n      let founded = 0;\n      let token;\n      for (let j = colon - 1; j >= 0; j--) {\n        token = tokens[j];\n        if (token[0] !== 'space') {\n          founded += 1;\n          if (founded === 2) break;\n        }\n      }\n      // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n      // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n      // And because we need it after that one we do +1 to get the next one.\n      throw this.input.error('Missed semicolon', token[0] === 'word' ? token[3] + 1 : token[2]);\n    }\n    colon(tokens) {\n      let brackets = 0;\n      let prev, token, type;\n      for (let [i, element] of tokens.entries()) {\n        token = element;\n        type = token[0];\n        if (type === '(') {\n          brackets += 1;\n        }\n        if (type === ')') {\n          brackets -= 1;\n        }\n        if (brackets === 0 && type === ':') {\n          if (!prev) {\n            this.doubleColon(token);\n          } else if (prev[0] === 'word' && prev[1] === 'progid') {\n            continue;\n          } else {\n            return i;\n          }\n        }\n        prev = token;\n      }\n      return false;\n    }\n    comment(token) {\n      let node = new Comment();\n      this.init(node, token[2]);\n      node.source.end = this.getPosition(token[3] || token[2]);\n      node.source.end.offset++;\n      let text = token[1].slice(2, -2);\n      if (/^\\s*$/.test(text)) {\n        node.text = '';\n        node.raws.left = text;\n        node.raws.right = '';\n      } else {\n        let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n        node.text = match[2];\n        node.raws.left = match[1];\n        node.raws.right = match[3];\n      }\n    }\n    createTokenizer() {\n      this.tokenizer = tokenizer(this.input);\n    }\n    decl(tokens, customProperty) {\n      let node = new Declaration();\n      this.init(node, tokens[0][2]);\n      let last = tokens[tokens.length - 1];\n      if (last[0] === ';') {\n        this.semicolon = true;\n        tokens.pop();\n      }\n      node.source.end = this.getPosition(last[3] || last[2] || findLastWithPosition(tokens));\n      node.source.end.offset++;\n      while (tokens[0][0] !== 'word') {\n        if (tokens.length === 1) this.unknownWord(tokens);\n        node.raws.before += tokens.shift()[1];\n      }\n      node.source.start = this.getPosition(tokens[0][2]);\n      node.prop = '';\n      while (tokens.length) {\n        let type = tokens[0][0];\n        if (type === ':' || type === 'space' || type === 'comment') {\n          break;\n        }\n        node.prop += tokens.shift()[1];\n      }\n      node.raws.between = '';\n      let token;\n      while (tokens.length) {\n        token = tokens.shift();\n        if (token[0] === ':') {\n          node.raws.between += token[1];\n          break;\n        } else {\n          if (token[0] === 'word' && /\\w/.test(token[1])) {\n            this.unknownWord([token]);\n          }\n          node.raws.between += token[1];\n        }\n      }\n      if (node.prop[0] === '_' || node.prop[0] === '*') {\n        node.raws.before += node.prop[0];\n        node.prop = node.prop.slice(1);\n      }\n      let firstSpaces = [];\n      let next;\n      while (tokens.length) {\n        next = tokens[0][0];\n        if (next !== 'space' && next !== 'comment') break;\n        firstSpaces.push(tokens.shift());\n      }\n      this.precheckMissedSemicolon(tokens);\n      for (let i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n        if (token[1].toLowerCase() === '!important') {\n          node.important = true;\n          let string = this.stringFrom(tokens, i);\n          string = this.spacesFromEnd(tokens) + string;\n          if (string !== ' !important') node.raws.important = string;\n          break;\n        } else if (token[1].toLowerCase() === 'important') {\n          let cache = tokens.slice(0);\n          let str = '';\n          for (let j = i; j > 0; j--) {\n            let type = cache[j][0];\n            if (str.trim().startsWith('!') && type !== 'space') {\n              break;\n            }\n            str = cache.pop()[1] + str;\n          }\n          if (str.trim().startsWith('!')) {\n            node.important = true;\n            node.raws.important = str;\n            tokens = cache;\n          }\n        }\n        if (token[0] !== 'space' && token[0] !== 'comment') {\n          break;\n        }\n      }\n      let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');\n      if (hasWord) {\n        node.raws.between += firstSpaces.map(i => i[1]).join('');\n        firstSpaces = [];\n      }\n      this.raw(node, 'value', firstSpaces.concat(tokens), customProperty);\n      if (node.value.includes(':') && !customProperty) {\n        this.checkMissedSemicolon(tokens);\n      }\n    }\n    doubleColon(token) {\n      throw this.input.error('Double colon', {\n        offset: token[2]\n      }, {\n        offset: token[2] + token[1].length\n      });\n    }\n    emptyRule(token) {\n      let node = new Rule();\n      this.init(node, token[2]);\n      node.selector = '';\n      node.raws.between = '';\n      this.current = node;\n    }\n    end(token) {\n      if (this.current.nodes && this.current.nodes.length) {\n        this.current.raws.semicolon = this.semicolon;\n      }\n      this.semicolon = false;\n      this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n      this.spaces = '';\n      if (this.current.parent) {\n        this.current.source.end = this.getPosition(token[2]);\n        this.current.source.end.offset++;\n        this.current = this.current.parent;\n      } else {\n        this.unexpectedClose(token);\n      }\n    }\n    endFile() {\n      if (this.current.parent) this.unclosedBlock();\n      if (this.current.nodes && this.current.nodes.length) {\n        this.current.raws.semicolon = this.semicolon;\n      }\n      this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n      this.root.source.end = this.getPosition(this.tokenizer.position());\n    }\n    freeSemicolon(token) {\n      this.spaces += token[1];\n      if (this.current.nodes) {\n        let prev = this.current.nodes[this.current.nodes.length - 1];\n        if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n          prev.raws.ownSemicolon = this.spaces;\n          this.spaces = '';\n          prev.source.end = this.getPosition(token[2]);\n          prev.source.end.offset += prev.raws.ownSemicolon.length;\n        }\n      }\n    }\n\n    // Helpers\n\n    getPosition(offset) {\n      let pos = this.input.fromOffset(offset);\n      return {\n        column: pos.col,\n        line: pos.line,\n        offset\n      };\n    }\n    init(node, offset) {\n      this.current.push(node);\n      node.source = {\n        input: this.input,\n        start: this.getPosition(offset)\n      };\n      node.raws.before = this.spaces;\n      this.spaces = '';\n      if (node.type !== 'comment') this.semicolon = false;\n    }\n    other(start) {\n      let end = false;\n      let type = null;\n      let colon = false;\n      let bracket = null;\n      let brackets = [];\n      let customProperty = start[1].startsWith('--');\n      let tokens = [];\n      let token = start;\n      while (token) {\n        type = token[0];\n        tokens.push(token);\n        if (type === '(' || type === '[') {\n          if (!bracket) bracket = token;\n          brackets.push(type === '(' ? ')' : ']');\n        } else if (customProperty && colon && type === '{') {\n          if (!bracket) bracket = token;\n          brackets.push('}');\n        } else if (brackets.length === 0) {\n          if (type === ';') {\n            if (colon) {\n              this.decl(tokens, customProperty);\n              return;\n            } else {\n              break;\n            }\n          } else if (type === '{') {\n            this.rule(tokens);\n            return;\n          } else if (type === '}') {\n            this.tokenizer.back(tokens.pop());\n            end = true;\n            break;\n          } else if (type === ':') {\n            colon = true;\n          }\n        } else if (type === brackets[brackets.length - 1]) {\n          brackets.pop();\n          if (brackets.length === 0) bracket = null;\n        }\n        token = this.tokenizer.nextToken();\n      }\n      if (this.tokenizer.endOfFile()) end = true;\n      if (brackets.length > 0) this.unclosedBracket(bracket);\n      if (end && colon) {\n        if (!customProperty) {\n          while (tokens.length) {\n            token = tokens[tokens.length - 1][0];\n            if (token !== 'space' && token !== 'comment') break;\n            this.tokenizer.back(tokens.pop());\n          }\n        }\n        this.decl(tokens, customProperty);\n      } else {\n        this.unknownWord(tokens);\n      }\n    }\n    parse() {\n      let token;\n      while (!this.tokenizer.endOfFile()) {\n        token = this.tokenizer.nextToken();\n        switch (token[0]) {\n          case 'space':\n            this.spaces += token[1];\n            break;\n          case ';':\n            this.freeSemicolon(token);\n            break;\n          case '}':\n            this.end(token);\n            break;\n          case 'comment':\n            this.comment(token);\n            break;\n          case 'at-word':\n            this.atrule(token);\n            break;\n          case '{':\n            this.emptyRule(token);\n            break;\n          default:\n            this.other(token);\n            break;\n        }\n      }\n      this.endFile();\n    }\n    precheckMissedSemicolon(/* tokens */\n    ) {\n      // Hook for Safe Parser\n    }\n    raw(node, prop, tokens, customProperty) {\n      let token, type;\n      let length = tokens.length;\n      let value = '';\n      let clean = true;\n      let next, prev;\n      for (let i = 0; i < length; i += 1) {\n        token = tokens[i];\n        type = token[0];\n        if (type === 'space' && i === length - 1 && !customProperty) {\n          clean = false;\n        } else if (type === 'comment') {\n          prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty';\n          next = tokens[i + 1] ? tokens[i + 1][0] : 'empty';\n          if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n            if (value.slice(-1) === ',') {\n              clean = false;\n            } else {\n              value += token[1];\n            }\n          } else {\n            clean = false;\n          }\n        } else {\n          value += token[1];\n        }\n      }\n      if (!clean) {\n        let raw = tokens.reduce((all, i) => all + i[1], '');\n        node.raws[prop] = {\n          raw,\n          value\n        };\n      }\n      node[prop] = value;\n    }\n    rule(tokens) {\n      tokens.pop();\n      let node = new Rule();\n      this.init(node, tokens[0][2]);\n      node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n      this.raw(node, 'selector', tokens);\n      this.current = node;\n    }\n    spacesAndCommentsFromEnd(tokens) {\n      let lastTokenType;\n      let spaces = '';\n      while (tokens.length) {\n        lastTokenType = tokens[tokens.length - 1][0];\n        if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;\n        spaces = tokens.pop()[1] + spaces;\n      }\n      return spaces;\n    }\n\n    // Errors\n\n    spacesAndCommentsFromStart(tokens) {\n      let next;\n      let spaces = '';\n      while (tokens.length) {\n        next = tokens[0][0];\n        if (next !== 'space' && next !== 'comment') break;\n        spaces += tokens.shift()[1];\n      }\n      return spaces;\n    }\n    spacesFromEnd(tokens) {\n      let lastTokenType;\n      let spaces = '';\n      while (tokens.length) {\n        lastTokenType = tokens[tokens.length - 1][0];\n        if (lastTokenType !== 'space') break;\n        spaces = tokens.pop()[1] + spaces;\n      }\n      return spaces;\n    }\n    stringFrom(tokens, from) {\n      let result = '';\n      for (let i = from; i < tokens.length; i++) {\n        result += tokens[i][1];\n      }\n      tokens.splice(from, tokens.length - from);\n      return result;\n    }\n    unclosedBlock() {\n      let pos = this.current.source.start;\n      throw this.input.error('Unclosed block', pos.line, pos.column);\n    }\n    unclosedBracket(bracket) {\n      throw this.input.error('Unclosed bracket', {\n        offset: bracket[2]\n      }, {\n        offset: bracket[2] + 1\n      });\n    }\n    unexpectedClose(token) {\n      throw this.input.error('Unexpected }', {\n        offset: token[2]\n      }, {\n        offset: token[2] + 1\n      });\n    }\n    unknownWord(tokens) {\n      throw this.input.error('Unknown word', {\n        offset: tokens[0][2]\n      }, {\n        offset: tokens[0][2] + tokens[0][1].length\n      });\n    }\n    unnamedAtrule(node, token) {\n      throw this.input.error('At-rule without name', {\n        offset: token[2]\n      }, {\n        offset: token[2] + token[1].length\n      });\n    }\n  }\n  parser = Parser;\n  return parser;\n}\nvar parse_1;\nvar hasRequiredParse;\nfunction requireParse() {\n  if (hasRequiredParse) return parse_1;\n  hasRequiredParse = 1;\n  let Container = requireContainer$1();\n  let Input = requireInput();\n  let Parser = requireParser();\n  function parse(css, opts) {\n    let input = new Input(css, opts);\n    let parser = new Parser(input);\n    try {\n      parser.parse();\n    } catch (e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (e.name === 'CssSyntaxError' && opts && opts.from) {\n          if (/\\.scss$/i.test(opts.from)) {\n            e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n          } else if (/\\.sass/i.test(opts.from)) {\n            e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n          } else if (/\\.less$/i.test(opts.from)) {\n            e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n          }\n        }\n      }\n      throw e;\n    }\n    return parser.root;\n  }\n  parse_1 = parse;\n  parse.default = parse;\n  Container.registerParse(parse);\n  return parse_1;\n}\nvar warning;\nvar hasRequiredWarning;\nfunction requireWarning() {\n  if (hasRequiredWarning) return warning;\n  hasRequiredWarning = 1;\n  class Warning {\n    constructor(text, opts = {}) {\n      this.type = 'warning';\n      this.text = text;\n      if (opts.node && opts.node.source) {\n        let range = opts.node.rangeBy(opts);\n        this.line = range.start.line;\n        this.column = range.start.column;\n        this.endLine = range.end.line;\n        this.endColumn = range.end.column;\n      }\n      for (let opt in opts) this[opt] = opts[opt];\n    }\n    toString() {\n      if (this.node) {\n        return this.node.error(this.text, {\n          index: this.index,\n          plugin: this.plugin,\n          word: this.word\n        }).message;\n      }\n      if (this.plugin) {\n        return this.plugin + ': ' + this.text;\n      }\n      return this.text;\n    }\n  }\n  warning = Warning;\n  Warning.default = Warning;\n  return warning;\n}\nvar result;\nvar hasRequiredResult;\nfunction requireResult() {\n  if (hasRequiredResult) return result;\n  hasRequiredResult = 1;\n  let Warning = requireWarning();\n  class Result {\n    constructor(processor, root, opts) {\n      this.processor = processor;\n      this.messages = [];\n      this.root = root;\n      this.opts = opts;\n      this.css = undefined;\n      this.map = undefined;\n    }\n    toString() {\n      return this.css;\n    }\n    warn(text, opts = {}) {\n      if (!opts.plugin) {\n        if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n          opts.plugin = this.lastPlugin.postcssPlugin;\n        }\n      }\n      let warning = new Warning(text, opts);\n      this.messages.push(warning);\n      return warning;\n    }\n    warnings() {\n      return this.messages.filter(i => i.type === 'warning');\n    }\n    get content() {\n      return this.css;\n    }\n  }\n  result = Result;\n  Result.default = Result;\n  return result;\n}\n\n/* eslint-disable no-console */\n\nvar warnOnce;\nvar hasRequiredWarnOnce;\nfunction requireWarnOnce() {\n  if (hasRequiredWarnOnce) return warnOnce;\n  hasRequiredWarnOnce = 1;\n  let printed = {};\n  warnOnce = function warnOnce(message) {\n    if (printed[message]) return;\n    printed[message] = true;\n    if (typeof console !== 'undefined' && console.warn) {\n      console.warn(message);\n    }\n  };\n  return warnOnce;\n}\nvar lazyResult;\nvar hasRequiredLazyResult;\nfunction requireLazyResult() {\n  if (hasRequiredLazyResult) return lazyResult;\n  hasRequiredLazyResult = 1;\n  let Container = requireContainer$1();\n  let Document = requireDocument();\n  let MapGenerator = requireMapGenerator();\n  let parse = requireParse();\n  let Result = requireResult();\n  let Root = requireRoot();\n  let stringify = requireStringify();\n  let {\n    isClean,\n    my\n  } = requireSymbols();\n  let warnOnce = requireWarnOnce();\n  const TYPE_TO_CLASS_NAME = {\n    atrule: 'AtRule',\n    comment: 'Comment',\n    decl: 'Declaration',\n    document: 'Document',\n    root: 'Root',\n    rule: 'Rule'\n  };\n  const PLUGIN_PROPS = {\n    AtRule: true,\n    AtRuleExit: true,\n    Comment: true,\n    CommentExit: true,\n    Declaration: true,\n    DeclarationExit: true,\n    Document: true,\n    DocumentExit: true,\n    Once: true,\n    OnceExit: true,\n    postcssPlugin: true,\n    prepare: true,\n    Root: true,\n    RootExit: true,\n    Rule: true,\n    RuleExit: true\n  };\n  const NOT_VISITORS = {\n    Once: true,\n    postcssPlugin: true,\n    prepare: true\n  };\n  const CHILDREN = 0;\n  function isPromise(obj) {\n    return typeof obj === 'object' && typeof obj.then === 'function';\n  }\n  function getEvents(node) {\n    let key = false;\n    let type = TYPE_TO_CLASS_NAME[node.type];\n    if (node.type === 'decl') {\n      key = node.prop.toLowerCase();\n    } else if (node.type === 'atrule') {\n      key = node.name.toLowerCase();\n    }\n    if (key && node.append) {\n      return [type, type + '-' + key, CHILDREN, type + 'Exit', type + 'Exit-' + key];\n    } else if (key) {\n      return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key];\n    } else if (node.append) {\n      return [type, CHILDREN, type + 'Exit'];\n    } else {\n      return [type, type + 'Exit'];\n    }\n  }\n  function toStack(node) {\n    let events;\n    if (node.type === 'document') {\n      events = ['Document', CHILDREN, 'DocumentExit'];\n    } else if (node.type === 'root') {\n      events = ['Root', CHILDREN, 'RootExit'];\n    } else {\n      events = getEvents(node);\n    }\n    return {\n      eventIndex: 0,\n      events,\n      iterator: 0,\n      node,\n      visitorIndex: 0,\n      visitors: []\n    };\n  }\n  function cleanMarks(node) {\n    node[isClean] = false;\n    if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n    return node;\n  }\n  let postcss = {};\n  class LazyResult {\n    constructor(processor, css, opts) {\n      this.stringified = false;\n      this.processed = false;\n      let root;\n      if (typeof css === 'object' && css !== null && (css.type === 'root' || css.type === 'document')) {\n        root = cleanMarks(css);\n      } else if (css instanceof LazyResult || css instanceof Result) {\n        root = cleanMarks(css.root);\n        if (css.map) {\n          if (typeof opts.map === 'undefined') opts.map = {};\n          if (!opts.map.inline) opts.map.inline = false;\n          opts.map.prev = css.map;\n        }\n      } else {\n        let parser = parse;\n        if (opts.syntax) parser = opts.syntax.parse;\n        if (opts.parser) parser = opts.parser;\n        if (parser.parse) parser = parser.parse;\n        try {\n          root = parser(css, opts);\n        } catch (error) {\n          this.processed = true;\n          this.error = error;\n        }\n        if (root && !root[my]) {\n          /* c8 ignore next 2 */\n          Container.rebuild(root);\n        }\n      }\n      this.result = new Result(processor, root, opts);\n      this.helpers = {\n        ...postcss,\n        postcss,\n        result: this.result\n      };\n      this.plugins = this.processor.plugins.map(plugin => {\n        if (typeof plugin === 'object' && plugin.prepare) {\n          return {\n            ...plugin,\n            ...plugin.prepare(this.result)\n          };\n        } else {\n          return plugin;\n        }\n      });\n    }\n    async() {\n      if (this.error) return Promise.reject(this.error);\n      if (this.processed) return Promise.resolve(this.result);\n      if (!this.processing) {\n        this.processing = this.runAsync();\n      }\n      return this.processing;\n    }\n    catch(onRejected) {\n      return this.async().catch(onRejected);\n    }\n    finally(onFinally) {\n      return this.async().then(onFinally, onFinally);\n    }\n    getAsyncError() {\n      throw new Error('Use process(css).then(cb) to work with async plugins');\n    }\n    handleError(error, node) {\n      let plugin = this.result.lastPlugin;\n      try {\n        if (node) node.addToError(error);\n        this.error = error;\n        if (error.name === 'CssSyntaxError' && !error.plugin) {\n          error.plugin = plugin.postcssPlugin;\n          error.setMessage();\n        } else if (plugin.postcssVersion) {\n          if (process.env.NODE_ENV !== 'production') {\n            let pluginName = plugin.postcssPlugin;\n            let pluginVer = plugin.postcssVersion;\n            let runtimeVer = this.result.processor.version;\n            let a = pluginVer.split('.');\n            let b = runtimeVer.split('.');\n            if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n              // eslint-disable-next-line no-console\n              console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n            }\n          }\n        }\n      } catch (err) {\n        /* c8 ignore next 3 */\n        // eslint-disable-next-line no-console\n        if (console && console.error) console.error(err);\n      }\n      return error;\n    }\n    prepareVisitors() {\n      this.listeners = {};\n      let add = (plugin, type, cb) => {\n        if (!this.listeners[type]) this.listeners[type] = [];\n        this.listeners[type].push([plugin, cb]);\n      };\n      for (let plugin of this.plugins) {\n        if (typeof plugin === 'object') {\n          for (let event in plugin) {\n            if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n              throw new Error(`Unknown event ${event} in ${plugin.postcssPlugin}. ` + `Try to update PostCSS (${this.processor.version} now).`);\n            }\n            if (!NOT_VISITORS[event]) {\n              if (typeof plugin[event] === 'object') {\n                for (let filter in plugin[event]) {\n                  if (filter === '*') {\n                    add(plugin, event, plugin[event][filter]);\n                  } else {\n                    add(plugin, event + '-' + filter.toLowerCase(), plugin[event][filter]);\n                  }\n                }\n              } else if (typeof plugin[event] === 'function') {\n                add(plugin, event, plugin[event]);\n              }\n            }\n          }\n        }\n      }\n      this.hasListener = Object.keys(this.listeners).length > 0;\n    }\n    async runAsync() {\n      this.plugin = 0;\n      for (let i = 0; i < this.plugins.length; i++) {\n        let plugin = this.plugins[i];\n        let promise = this.runOnRoot(plugin);\n        if (isPromise(promise)) {\n          try {\n            await promise;\n          } catch (error) {\n            throw this.handleError(error);\n          }\n        }\n      }\n      this.prepareVisitors();\n      if (this.hasListener) {\n        let root = this.result.root;\n        while (!root[isClean]) {\n          root[isClean] = true;\n          let stack = [toStack(root)];\n          while (stack.length > 0) {\n            let promise = this.visitTick(stack);\n            if (isPromise(promise)) {\n              try {\n                await promise;\n              } catch (e) {\n                let node = stack[stack.length - 1].node;\n                throw this.handleError(e, node);\n              }\n            }\n          }\n        }\n        if (this.listeners.OnceExit) {\n          for (let [plugin, visitor] of this.listeners.OnceExit) {\n            this.result.lastPlugin = plugin;\n            try {\n              if (root.type === 'document') {\n                let roots = root.nodes.map(subRoot => visitor(subRoot, this.helpers));\n                await Promise.all(roots);\n              } else {\n                await visitor(root, this.helpers);\n              }\n            } catch (e) {\n              throw this.handleError(e);\n            }\n          }\n        }\n      }\n      this.processed = true;\n      return this.stringify();\n    }\n    runOnRoot(plugin) {\n      this.result.lastPlugin = plugin;\n      try {\n        if (typeof plugin === 'object' && plugin.Once) {\n          if (this.result.root.type === 'document') {\n            let roots = this.result.root.nodes.map(root => plugin.Once(root, this.helpers));\n            if (isPromise(roots[0])) {\n              return Promise.all(roots);\n            }\n            return roots;\n          }\n          return plugin.Once(this.result.root, this.helpers);\n        } else if (typeof plugin === 'function') {\n          return plugin(this.result.root, this.result);\n        }\n      } catch (error) {\n        throw this.handleError(error);\n      }\n    }\n    stringify() {\n      if (this.error) throw this.error;\n      if (this.stringified) return this.result;\n      this.stringified = true;\n      this.sync();\n      let opts = this.result.opts;\n      let str = stringify;\n      if (opts.syntax) str = opts.syntax.stringify;\n      if (opts.stringifier) str = opts.stringifier;\n      if (str.stringify) str = str.stringify;\n      let map = new MapGenerator(str, this.result.root, this.result.opts);\n      let data = map.generate();\n      this.result.css = data[0];\n      this.result.map = data[1];\n      return this.result;\n    }\n    sync() {\n      if (this.error) throw this.error;\n      if (this.processed) return this.result;\n      this.processed = true;\n      if (this.processing) {\n        throw this.getAsyncError();\n      }\n      for (let plugin of this.plugins) {\n        let promise = this.runOnRoot(plugin);\n        if (isPromise(promise)) {\n          throw this.getAsyncError();\n        }\n      }\n      this.prepareVisitors();\n      if (this.hasListener) {\n        let root = this.result.root;\n        while (!root[isClean]) {\n          root[isClean] = true;\n          this.walkSync(root);\n        }\n        if (this.listeners.OnceExit) {\n          if (root.type === 'document') {\n            for (let subRoot of root.nodes) {\n              this.visitSync(this.listeners.OnceExit, subRoot);\n            }\n          } else {\n            this.visitSync(this.listeners.OnceExit, root);\n          }\n        }\n      }\n      return this.result;\n    }\n    then(onFulfilled, onRejected) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!('from' in this.opts)) {\n          warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n        }\n      }\n      return this.async().then(onFulfilled, onRejected);\n    }\n    toString() {\n      return this.css;\n    }\n    visitSync(visitors, node) {\n      for (let [plugin, visitor] of visitors) {\n        this.result.lastPlugin = plugin;\n        let promise;\n        try {\n          promise = visitor(node, this.helpers);\n        } catch (e) {\n          throw this.handleError(e, node.proxyOf);\n        }\n        if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n          return true;\n        }\n        if (isPromise(promise)) {\n          throw this.getAsyncError();\n        }\n      }\n    }\n    visitTick(stack) {\n      let visit = stack[stack.length - 1];\n      let {\n        node,\n        visitors\n      } = visit;\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        stack.pop();\n        return;\n      }\n      if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n        let [plugin, visitor] = visitors[visit.visitorIndex];\n        visit.visitorIndex += 1;\n        if (visit.visitorIndex === visitors.length) {\n          visit.visitors = [];\n          visit.visitorIndex = 0;\n        }\n        this.result.lastPlugin = plugin;\n        try {\n          return visitor(node.toProxy(), this.helpers);\n        } catch (e) {\n          throw this.handleError(e, node);\n        }\n      }\n      if (visit.iterator !== 0) {\n        let iterator = visit.iterator;\n        let child;\n        while (child = node.nodes[node.indexes[iterator]]) {\n          node.indexes[iterator] += 1;\n          if (!child[isClean]) {\n            child[isClean] = true;\n            stack.push(toStack(child));\n            return;\n          }\n        }\n        visit.iterator = 0;\n        delete node.indexes[iterator];\n      }\n      let events = visit.events;\n      while (visit.eventIndex < events.length) {\n        let event = events[visit.eventIndex];\n        visit.eventIndex += 1;\n        if (event === CHILDREN) {\n          if (node.nodes && node.nodes.length) {\n            node[isClean] = true;\n            visit.iterator = node.getIterator();\n          }\n          return;\n        } else if (this.listeners[event]) {\n          visit.visitors = this.listeners[event];\n          return;\n        }\n      }\n      stack.pop();\n    }\n    walkSync(node) {\n      node[isClean] = true;\n      let events = getEvents(node);\n      for (let event of events) {\n        if (event === CHILDREN) {\n          if (node.nodes) {\n            node.each(child => {\n              if (!child[isClean]) this.walkSync(child);\n            });\n          }\n        } else {\n          let visitors = this.listeners[event];\n          if (visitors) {\n            if (this.visitSync(visitors, node.toProxy())) return;\n          }\n        }\n      }\n    }\n    warnings() {\n      return this.sync().warnings();\n    }\n    get content() {\n      return this.stringify().content;\n    }\n    get css() {\n      return this.stringify().css;\n    }\n    get map() {\n      return this.stringify().map;\n    }\n    get messages() {\n      return this.sync().messages;\n    }\n    get opts() {\n      return this.result.opts;\n    }\n    get processor() {\n      return this.result.processor;\n    }\n    get root() {\n      return this.sync().root;\n    }\n    get [Symbol.toStringTag]() {\n      return 'LazyResult';\n    }\n  }\n  LazyResult.registerPostcss = dependant => {\n    postcss = dependant;\n  };\n  lazyResult = LazyResult;\n  LazyResult.default = LazyResult;\n  Root.registerLazyResult(LazyResult);\n  Document.registerLazyResult(LazyResult);\n  return lazyResult;\n}\nvar noWorkResult;\nvar hasRequiredNoWorkResult;\nfunction requireNoWorkResult() {\n  if (hasRequiredNoWorkResult) return noWorkResult;\n  hasRequiredNoWorkResult = 1;\n  let MapGenerator = requireMapGenerator();\n  let parse = requireParse();\n  const Result = requireResult();\n  let stringify = requireStringify();\n  let warnOnce = requireWarnOnce();\n  class NoWorkResult {\n    constructor(processor, css, opts) {\n      css = css.toString();\n      this.stringified = false;\n      this._processor = processor;\n      this._css = css;\n      this._opts = opts;\n      this._map = undefined;\n      let root;\n      let str = stringify;\n      this.result = new Result(this._processor, root, this._opts);\n      this.result.css = css;\n      let self = this;\n      Object.defineProperty(this.result, 'root', {\n        get() {\n          return self.root;\n        }\n      });\n      let map = new MapGenerator(str, root, this._opts, css);\n      if (map.isMap()) {\n        let [generatedCSS, generatedMap] = map.generate();\n        if (generatedCSS) {\n          this.result.css = generatedCSS;\n        }\n        if (generatedMap) {\n          this.result.map = generatedMap;\n        }\n      } else {\n        map.clearAnnotation();\n        this.result.css = map.css;\n      }\n    }\n    async() {\n      if (this.error) return Promise.reject(this.error);\n      return Promise.resolve(this.result);\n    }\n    catch(onRejected) {\n      return this.async().catch(onRejected);\n    }\n    finally(onFinally) {\n      return this.async().then(onFinally, onFinally);\n    }\n    sync() {\n      if (this.error) throw this.error;\n      return this.result;\n    }\n    then(onFulfilled, onRejected) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!('from' in this._opts)) {\n          warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n        }\n      }\n      return this.async().then(onFulfilled, onRejected);\n    }\n    toString() {\n      return this._css;\n    }\n    warnings() {\n      return [];\n    }\n    get content() {\n      return this.result.css;\n    }\n    get css() {\n      return this.result.css;\n    }\n    get map() {\n      return this.result.map;\n    }\n    get messages() {\n      return [];\n    }\n    get opts() {\n      return this.result.opts;\n    }\n    get processor() {\n      return this.result.processor;\n    }\n    get root() {\n      if (this._root) {\n        return this._root;\n      }\n      let root;\n      let parser = parse;\n      try {\n        root = parser(this._css, this._opts);\n      } catch (error) {\n        this.error = error;\n      }\n      if (this.error) {\n        throw this.error;\n      } else {\n        this._root = root;\n        return root;\n      }\n    }\n    get [Symbol.toStringTag]() {\n      return 'NoWorkResult';\n    }\n  }\n  noWorkResult = NoWorkResult;\n  NoWorkResult.default = NoWorkResult;\n  return noWorkResult;\n}\nvar processor;\nvar hasRequiredProcessor;\nfunction requireProcessor() {\n  if (hasRequiredProcessor) return processor;\n  hasRequiredProcessor = 1;\n  let Document = requireDocument();\n  let LazyResult = requireLazyResult();\n  let NoWorkResult = requireNoWorkResult();\n  let Root = requireRoot();\n  class Processor {\n    constructor(plugins = []) {\n      this.version = '8.5.2';\n      this.plugins = this.normalize(plugins);\n    }\n    normalize(plugins) {\n      let normalized = [];\n      for (let i of plugins) {\n        if (i.postcss === true) {\n          i = i();\n        } else if (i.postcss) {\n          i = i.postcss;\n        }\n        if (typeof i === 'object' && Array.isArray(i.plugins)) {\n          normalized = normalized.concat(i.plugins);\n        } else if (typeof i === 'object' && i.postcssPlugin) {\n          normalized.push(i);\n        } else if (typeof i === 'function') {\n          normalized.push(i);\n        } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');\n          }\n        } else {\n          throw new Error(i + ' is not a PostCSS plugin');\n        }\n      }\n      return normalized;\n    }\n    process(css, opts = {}) {\n      if (!this.plugins.length && !opts.parser && !opts.stringifier && !opts.syntax) {\n        return new NoWorkResult(this, css, opts);\n      } else {\n        return new LazyResult(this, css, opts);\n      }\n    }\n    use(plugin) {\n      this.plugins = this.plugins.concat(this.normalize([plugin]));\n      return this;\n    }\n  }\n  processor = Processor;\n  Processor.default = Processor;\n  Root.registerProcessor(Processor);\n  Document.registerProcessor(Processor);\n  return processor;\n}\nvar postcss_1;\nvar hasRequiredPostcss;\nfunction requirePostcss() {\n  if (hasRequiredPostcss) return postcss_1;\n  hasRequiredPostcss = 1;\n  let AtRule = requireAtRule();\n  let Comment = requireComment();\n  let Container = requireContainer$1();\n  let CssSyntaxError = requireCssSyntaxError();\n  let Declaration = requireDeclaration();\n  let Document = requireDocument();\n  let fromJSON = requireFromJSON();\n  let Input = requireInput();\n  let LazyResult = requireLazyResult();\n  let list = requireList();\n  let Node = requireNode$1();\n  let parse = requireParse();\n  let Processor = requireProcessor();\n  let Result = requireResult();\n  let Root = requireRoot();\n  let Rule = requireRule();\n  let stringify = requireStringify();\n  let Warning = requireWarning();\n  function postcss(...plugins) {\n    if (plugins.length === 1 && Array.isArray(plugins[0])) {\n      plugins = plugins[0];\n    }\n    return new Processor(plugins);\n  }\n  postcss.plugin = function plugin(name, initializer) {\n    let warningPrinted = false;\n    function creator(...args) {\n      // eslint-disable-next-line no-console\n      if (console && console.warn && !warningPrinted) {\n        warningPrinted = true;\n        // eslint-disable-next-line no-console\n        console.warn(name + ': postcss.plugin was deprecated. Migration guide:\\n' + 'https://evilmartians.com/chronicles/postcss-8-plugin-migration');\n        if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n          /* c8 ignore next 7 */\n          // eslint-disable-next-line no-console\n          console.warn(name + ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' + 'https://www.w3ctech.com/topic/2226');\n        }\n      }\n      let transformer = initializer(...args);\n      transformer.postcssPlugin = name;\n      transformer.postcssVersion = new Processor().version;\n      return transformer;\n    }\n    let cache;\n    Object.defineProperty(creator, 'postcss', {\n      get() {\n        if (!cache) cache = creator();\n        return cache;\n      }\n    });\n    creator.process = function (css, processOpts, pluginOpts) {\n      return postcss([creator(pluginOpts)]).process(css, processOpts);\n    };\n    return creator;\n  };\n  postcss.stringify = stringify;\n  postcss.parse = parse;\n  postcss.fromJSON = fromJSON;\n  postcss.list = list;\n  postcss.comment = defaults => new Comment(defaults);\n  postcss.atRule = defaults => new AtRule(defaults);\n  postcss.decl = defaults => new Declaration(defaults);\n  postcss.rule = defaults => new Rule(defaults);\n  postcss.root = defaults => new Root(defaults);\n  postcss.document = defaults => new Document(defaults);\n  postcss.CssSyntaxError = CssSyntaxError;\n  postcss.Declaration = Declaration;\n  postcss.Container = Container;\n  postcss.Processor = Processor;\n  postcss.Document = Document;\n  postcss.Comment = Comment;\n  postcss.Warning = Warning;\n  postcss.AtRule = AtRule;\n  postcss.Result = Result;\n  postcss.Input = Input;\n  postcss.Rule = Rule;\n  postcss.Root = Root;\n  postcss.Node = Node;\n  LazyResult.registerPostcss(postcss);\n  postcss_1 = postcss;\n  postcss.default = postcss;\n  return postcss_1;\n}\nvar postcssExports = requirePostcss();\nvar postcss = /*@__PURE__*/getDefaultExportFromCjs(postcssExports);\nconst stringify = postcss.stringify;\npostcss.fromJSON;\npostcss.plugin;\nconst parse$2 = postcss.parse;\npostcss.list;\npostcss.document;\npostcss.comment;\npostcss.atRule;\npostcss.rule;\npostcss.decl;\npostcss.root;\npostcss.CssSyntaxError;\npostcss.Declaration;\npostcss.Container;\npostcss.Processor;\npostcss.Document;\npostcss.Comment;\npostcss.Warning;\npostcss.AtRule;\npostcss.Result;\npostcss.Input;\npostcss.Rule;\npostcss.Root;\npostcss.Node;\nvar dist = {};\nvar Container = {};\nvar Node$1 = {};\nvar hasRequiredNode;\nfunction requireNode() {\n  if (hasRequiredNode) return Node$1;\n  hasRequiredNode = 1;\n  Object.defineProperty(Node$1, \"__esModule\", {\n    value: true\n  });\n  /**\r\n   * A very generic node. Pretty much any element of a media query\r\n   */\n\n  function Node(opts) {\n    this.after = opts.after;\n    this.before = opts.before;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.sourceIndex = opts.sourceIndex;\n  }\n  Node$1.default = Node;\n  return Node$1;\n}\nvar hasRequiredContainer;\nfunction requireContainer() {\n  if (hasRequiredContainer) return Container;\n  hasRequiredContainer = 1;\n  Object.defineProperty(Container, \"__esModule\", {\n    value: true\n  });\n  var _Node = requireNode();\n  var _Node2 = _interopRequireDefault(_Node);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function Container$1(opts) {\n    var _this = this;\n    this.constructor(opts);\n    this.nodes = opts.nodes;\n    if (this.after === undefined) {\n      this.after = this.nodes.length > 0 ? this.nodes[this.nodes.length - 1].after : '';\n    }\n    if (this.before === undefined) {\n      this.before = this.nodes.length > 0 ? this.nodes[0].before : '';\n    }\n    if (this.sourceIndex === undefined) {\n      this.sourceIndex = this.before.length;\n    }\n    this.nodes.forEach(function (node) {\n      node.parent = _this; // eslint-disable-line no-param-reassign\n    });\n  } /**\r\n     * A node that contains other nodes and support traversing over them\r\n     */\n\n  Container$1.prototype = Object.create(_Node2.default.prototype);\n  Container$1.constructor = _Node2.default;\n\n  /**\r\n   * Iterate over descendant nodes of the node\r\n   *\r\n   * @param {RegExp|string} filter - Optional. Only nodes with node.type that\r\n   *    satisfies the filter will be traversed over\r\n   * @param {function} cb - callback to call on each node. Takes theese params:\r\n   *    node - the node being processed, i - it's index, nodes - the array\r\n   *    of all nodes\r\n   *    If false is returned, the iteration breaks\r\n   *\r\n   * @return (boolean) false, if the iteration was broken\r\n   */\n  Container$1.prototype.walk = function walk(filter, cb) {\n    var hasFilter = typeof filter === 'string' || filter instanceof RegExp;\n    var callback = hasFilter ? cb : filter;\n    var filterReg = typeof filter === 'string' ? new RegExp(filter) : filter;\n    for (var i = 0; i < this.nodes.length; i++) {\n      var node = this.nodes[i];\n      var filtered = hasFilter ? filterReg.test(node.type) : true;\n      if (filtered && callback && callback(node, i, this.nodes) === false) {\n        return false;\n      }\n      if (node.nodes && node.walk(filter, cb) === false) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\r\n   * Iterate over immediate children of the node\r\n   *\r\n   * @param {function} cb - callback to call on each node. Takes theese params:\r\n   *    node - the node being processed, i - it's index, nodes - the array\r\n   *    of all nodes\r\n   *    If false is returned, the iteration breaks\r\n   *\r\n   * @return (boolean) false, if the iteration was broken\r\n   */\n  Container$1.prototype.each = function each() {\n    var cb = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n    for (var i = 0; i < this.nodes.length; i++) {\n      var node = this.nodes[i];\n      if (cb(node, i, this.nodes) === false) {\n        return false;\n      }\n    }\n    return true;\n  };\n  Container.default = Container$1;\n  return Container;\n}\nvar parsers = {};\nvar hasRequiredParsers;\nfunction requireParsers() {\n  if (hasRequiredParsers) return parsers;\n  hasRequiredParsers = 1;\n  Object.defineProperty(parsers, \"__esModule\", {\n    value: true\n  });\n  parsers.parseMediaFeature = parseMediaFeature;\n  parsers.parseMediaQuery = parseMediaQuery;\n  parsers.parseMediaList = parseMediaList;\n  var _Node = requireNode();\n  var _Node2 = _interopRequireDefault(_Node);\n  var _Container = requireContainer();\n  var _Container2 = _interopRequireDefault(_Container);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\r\n   * Parses a media feature expression, e.g. `max-width: 10px`, `(color)`\r\n   *\r\n   * @param {string} string - the source expression string, can be inside parens\r\n   * @param {Number} index - the index of `string` in the overall input\r\n   *\r\n   * @return {Array} an array of Nodes, the first element being a media feature,\r\n   *    the secont - its value (may be missing)\r\n   */\n\n  function parseMediaFeature(string) {\n    var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n    var modesEntered = [{\n      mode: 'normal',\n      character: null\n    }];\n    var result = [];\n    var lastModeIndex = 0;\n    var mediaFeature = '';\n    var colon = null;\n    var mediaFeatureValue = null;\n    var indexLocal = index;\n    var stringNormalized = string;\n    // Strip trailing parens (if any), and correct the starting index\n    if (string[0] === '(' && string[string.length - 1] === ')') {\n      stringNormalized = string.substring(1, string.length - 1);\n      indexLocal++;\n    }\n    for (var i = 0; i < stringNormalized.length; i++) {\n      var character = stringNormalized[i];\n\n      // If entering/exiting a string\n      if (character === '\\'' || character === '\"') {\n        if (modesEntered[lastModeIndex].isCalculationEnabled === true) {\n          modesEntered.push({\n            mode: 'string',\n            isCalculationEnabled: false,\n            character: character\n          });\n          lastModeIndex++;\n        } else if (modesEntered[lastModeIndex].mode === 'string' && modesEntered[lastModeIndex].character === character && stringNormalized[i - 1] !== '\\\\') {\n          modesEntered.pop();\n          lastModeIndex--;\n        }\n      }\n\n      // If entering/exiting interpolation\n      if (character === '{') {\n        modesEntered.push({\n          mode: 'interpolation',\n          isCalculationEnabled: true\n        });\n        lastModeIndex++;\n      } else if (character === '}') {\n        modesEntered.pop();\n        lastModeIndex--;\n      }\n\n      // If a : is met outside of a string, function call or interpolation, than\n      // this : separates a media feature and a value\n      if (modesEntered[lastModeIndex].mode === 'normal' && character === ':') {\n        var mediaFeatureValueStr = stringNormalized.substring(i + 1);\n        mediaFeatureValue = {\n          type: 'value',\n          before: /^(\\s*)/.exec(mediaFeatureValueStr)[1],\n          after: /(\\s*)$/.exec(mediaFeatureValueStr)[1],\n          value: mediaFeatureValueStr.trim()\n        };\n        // +1 for the colon\n        mediaFeatureValue.sourceIndex = mediaFeatureValue.before.length + i + 1 + indexLocal;\n        colon = {\n          type: 'colon',\n          sourceIndex: i + indexLocal,\n          after: mediaFeatureValue.before,\n          value: ':'\n        };\n        break;\n      }\n      mediaFeature += character;\n    }\n\n    // Forming a media feature node\n    mediaFeature = {\n      type: 'media-feature',\n      before: /^(\\s*)/.exec(mediaFeature)[1],\n      after: /(\\s*)$/.exec(mediaFeature)[1],\n      value: mediaFeature.trim()\n    };\n    mediaFeature.sourceIndex = mediaFeature.before.length + indexLocal;\n    result.push(mediaFeature);\n    if (colon !== null) {\n      colon.before = mediaFeature.after;\n      result.push(colon);\n    }\n    if (mediaFeatureValue !== null) {\n      result.push(mediaFeatureValue);\n    }\n    return result;\n  }\n\n  /**\r\n   * Parses a media query, e.g. `screen and (color)`, `only tv`\r\n   *\r\n   * @param {string} string - the source media query string\r\n   * @param {Number} index - the index of `string` in the overall input\r\n   *\r\n   * @return {Array} an array of Nodes and Containers\r\n   */\n\n  function parseMediaQuery(string) {\n    var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n    var result = [];\n\n    // How many timies the parser entered parens/curly braces\n    var localLevel = 0;\n    // Has any keyword, media type, media feature expression or interpolation\n    // ('element' hereafter) started\n    var insideSomeValue = false;\n    var node = void 0;\n    function resetNode() {\n      return {\n        before: '',\n        after: '',\n        value: ''\n      };\n    }\n    node = resetNode();\n    for (var i = 0; i < string.length; i++) {\n      var character = string[i];\n      // If not yet entered any element\n      if (!insideSomeValue) {\n        if (character.search(/\\s/) !== -1) {\n          // A whitespace\n          // Don't form 'after' yet; will do it later\n          node.before += character;\n        } else {\n          // Not a whitespace - entering an element\n          // Expression start\n          if (character === '(') {\n            node.type = 'media-feature-expression';\n            localLevel++;\n          }\n          node.value = character;\n          node.sourceIndex = index + i;\n          insideSomeValue = true;\n        }\n      } else {\n        // Already in the middle of some alement\n        node.value += character;\n\n        // Here parens just increase localLevel and don't trigger a start of\n        // a media feature expression (since they can't be nested)\n        // Interpolation start\n        if (character === '{' || character === '(') {\n          localLevel++;\n        }\n        // Interpolation/function call/media feature expression end\n        if (character === ')' || character === '}') {\n          localLevel--;\n        }\n      }\n\n      // If exited all parens/curlies and the next symbol\n      if (insideSomeValue && localLevel === 0 && (character === ')' || i === string.length - 1 || string[i + 1].search(/\\s/) !== -1)) {\n        if (['not', 'only', 'and'].indexOf(node.value) !== -1) {\n          node.type = 'keyword';\n        }\n        // if it's an expression, parse its contents\n        if (node.type === 'media-feature-expression') {\n          node.nodes = parseMediaFeature(node.value, node.sourceIndex);\n        }\n        result.push(Array.isArray(node.nodes) ? new _Container2.default(node) : new _Node2.default(node));\n        node = resetNode();\n        insideSomeValue = false;\n      }\n    }\n\n    // Now process the result array - to specify undefined types of the nodes\n    // and specify the `after` prop\n    for (var _i = 0; _i < result.length; _i++) {\n      node = result[_i];\n      if (_i > 0) {\n        result[_i - 1].after = node.before;\n      }\n\n      // Node types. Might not be set because contains interpolation/function\n      // calls or fully consists of them\n      if (node.type === undefined) {\n        if (_i > 0) {\n          // only `and` can follow an expression\n          if (result[_i - 1].type === 'media-feature-expression') {\n            node.type = 'keyword';\n            continue;\n          }\n          // Anything after 'only|not' is a media type\n          if (result[_i - 1].value === 'not' || result[_i - 1].value === 'only') {\n            node.type = 'media-type';\n            continue;\n          }\n          // Anything after 'and' is an expression\n          if (result[_i - 1].value === 'and') {\n            node.type = 'media-feature-expression';\n            continue;\n          }\n          if (result[_i - 1].type === 'media-type') {\n            // if it is the last element - it might be an expression\n            // or 'and' depending on what is after it\n            if (!result[_i + 1]) {\n              node.type = 'media-feature-expression';\n            } else {\n              node.type = result[_i + 1].type === 'media-feature-expression' ? 'keyword' : 'media-feature-expression';\n            }\n          }\n        }\n        if (_i === 0) {\n          // `screen`, `fn( ... )`, `#{ ... }`. Not an expression, since then\n          // its type would have been set by now\n          if (!result[_i + 1]) {\n            node.type = 'media-type';\n            continue;\n          }\n\n          // `screen and` or `#{...} (max-width: 10px)`\n          if (result[_i + 1] && (result[_i + 1].type === 'media-feature-expression' || result[_i + 1].type === 'keyword')) {\n            node.type = 'media-type';\n            continue;\n          }\n          if (result[_i + 2]) {\n            // `screen and (color) ...`\n            if (result[_i + 2].type === 'media-feature-expression') {\n              node.type = 'media-type';\n              result[_i + 1].type = 'keyword';\n              continue;\n            }\n            // `only screen and ...`\n            if (result[_i + 2].type === 'keyword') {\n              node.type = 'keyword';\n              result[_i + 1].type = 'media-type';\n              continue;\n            }\n          }\n          if (result[_i + 3]) {\n            // `screen and (color) ...`\n            if (result[_i + 3].type === 'media-feature-expression') {\n              node.type = 'keyword';\n              result[_i + 1].type = 'media-type';\n              result[_i + 2].type = 'keyword';\n              continue;\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\r\n   * Parses a media query list. Takes a possible `url()` at the start into\r\n   * account, and divides the list into media queries that are parsed separately\r\n   *\r\n   * @param {string} string - the source media query list string\r\n   *\r\n   * @return {Array} an array of Nodes/Containers\r\n   */\n\n  function parseMediaList(string) {\n    var result = [];\n    var interimIndex = 0;\n    var levelLocal = 0;\n\n    // Check for a `url(...)` part (if it is contents of an @import rule)\n    var doesHaveUrl = /^(\\s*)url\\s*\\(/.exec(string);\n    if (doesHaveUrl !== null) {\n      var i = doesHaveUrl[0].length;\n      var parenthesesLv = 1;\n      while (parenthesesLv > 0) {\n        var character = string[i];\n        if (character === '(') {\n          parenthesesLv++;\n        }\n        if (character === ')') {\n          parenthesesLv--;\n        }\n        i++;\n      }\n      result.unshift(new _Node2.default({\n        type: 'url',\n        value: string.substring(0, i).trim(),\n        sourceIndex: doesHaveUrl[1].length,\n        before: doesHaveUrl[1],\n        after: /^(\\s*)/.exec(string.substring(i))[1]\n      }));\n      interimIndex = i;\n    }\n\n    // Start processing the media query list\n    for (var _i2 = interimIndex; _i2 < string.length; _i2++) {\n      var _character = string[_i2];\n\n      // Dividing the media query list into comma-separated media queries\n      // Only count commas that are outside of any parens\n      // (i.e., not part of function call params list, etc.)\n      if (_character === '(') {\n        levelLocal++;\n      }\n      if (_character === ')') {\n        levelLocal--;\n      }\n      if (levelLocal === 0 && _character === ',') {\n        var _mediaQueryString = string.substring(interimIndex, _i2);\n        var _spaceBefore = /^(\\s*)/.exec(_mediaQueryString)[1];\n        result.push(new _Container2.default({\n          type: 'media-query',\n          value: _mediaQueryString.trim(),\n          sourceIndex: interimIndex + _spaceBefore.length,\n          nodes: parseMediaQuery(_mediaQueryString, interimIndex),\n          before: _spaceBefore,\n          after: /(\\s*)$/.exec(_mediaQueryString)[1]\n        }));\n        interimIndex = _i2 + 1;\n      }\n    }\n    var mediaQueryString = string.substring(interimIndex);\n    var spaceBefore = /^(\\s*)/.exec(mediaQueryString)[1];\n    result.push(new _Container2.default({\n      type: 'media-query',\n      value: mediaQueryString.trim(),\n      sourceIndex: interimIndex + spaceBefore.length,\n      nodes: parseMediaQuery(mediaQueryString, interimIndex),\n      before: spaceBefore,\n      after: /(\\s*)$/.exec(mediaQueryString)[1]\n    }));\n    return result;\n  }\n  return parsers;\n}\nvar hasRequiredDist;\nfunction requireDist() {\n  if (hasRequiredDist) return dist;\n  hasRequiredDist = 1;\n  Object.defineProperty(dist, \"__esModule\", {\n    value: true\n  });\n  dist.default = parseMedia;\n  var _Container = requireContainer();\n  var _Container2 = _interopRequireDefault(_Container);\n  var _parsers = requireParsers();\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\r\n   * Parses a media query list into an array of nodes. A typical node signature:\r\n   *  {string} node.type -- one of: 'media-query', 'media-type', 'keyword',\r\n   *    'media-feature-expression', 'media-feature', 'colon', 'value'\r\n   *  {string} node.value -- the contents of a particular element, trimmed\r\n   *    e.g.: `screen`, `max-width`, `1024px`\r\n   *  {string} node.after -- whitespaces that follow the element\r\n   *  {string} node.before -- whitespaces that precede the element\r\n   *  {string} node.sourceIndex -- the index of the element in a source media\r\n   *    query list, 0-based\r\n   *  {object} node.parent -- a link to the parent node (a container)\r\n   *\r\n   * Some nodes (media queries, media feature expressions) contain other nodes.\r\n   * They additionally have:\r\n   *  {array} node.nodes -- an array of nodes of the type described here\r\n   *  {funciton} node.each -- traverses direct children of the node, calling\r\n   *    a callback for each one\r\n   *  {funciton} node.walk -- traverses ALL descendants of the node, calling\r\n   *    a callback for each one\r\n   */\n\n  function parseMedia(value) {\n    return new _Container2.default({\n      nodes: (0, _parsers.parseMediaList)(value),\n      type: 'media-query-list',\n      value: value.trim()\n    });\n  }\n  return dist;\n}\nvar distExports = requireDist();\nvar mediaParser = /*@__PURE__*/getDefaultExportFromCjs(distExports);\n\n/** Types of elements found in htmlparser2's DOM */\nvar ElementType;\n(function (ElementType) {\n  /** Type for the root element of a document */\n  ElementType[\"Root\"] = \"root\";\n  /** Type for Text */\n  ElementType[\"Text\"] = \"text\";\n  /** Type for <? ... ?> */\n  ElementType[\"Directive\"] = \"directive\";\n  /** Type for <!-- ... --> */\n  ElementType[\"Comment\"] = \"comment\";\n  /** Type for <script> tags */\n  ElementType[\"Script\"] = \"script\";\n  /** Type for <style> tags */\n  ElementType[\"Style\"] = \"style\";\n  /** Type for Any tag */\n  ElementType[\"Tag\"] = \"tag\";\n  /** Type for <![CDATA[ ... ]]> */\n  ElementType[\"CDATA\"] = \"cdata\";\n  /** Type for <!doctype ...> */\n  ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag$1(elem) {\n  return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nconst Root = ElementType.Root;\n/** Type for Text */\nconst Text$1 = ElementType.Text;\n/** Type for <? ... ?> */\nconst Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nconst Comment$1 = ElementType.Comment;\n/** Type for <script> tags */\nconst Script = ElementType.Script;\n/** Type for <style> tags */\nconst Style = ElementType.Style;\n/** Type for Any tag */\nconst Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nconst CDATA$1 = ElementType.CDATA;\n/** Type for <!doctype ...> */\nconst Doctype = ElementType.Doctype;\n\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nclass Node {\n  constructor() {\n    /** Parent of the node */\n    this.parent = null;\n    /** Previous sibling */\n    this.prev = null;\n    /** Next sibling */\n    this.next = null;\n    /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n    this.startIndex = null;\n    /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n    this.endIndex = null;\n  }\n  // Read-write aliases for properties\n  /**\n   * Same as {@link parent}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get parentNode() {\n    return this.parent;\n  }\n  set parentNode(parent) {\n    this.parent = parent;\n  }\n  /**\n   * Same as {@link prev}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get previousSibling() {\n    return this.prev;\n  }\n  set previousSibling(prev) {\n    this.prev = prev;\n  }\n  /**\n   * Same as {@link next}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get nextSibling() {\n    return this.next;\n  }\n  set nextSibling(next) {\n    this.next = next;\n  }\n  /**\n   * Clone this node, and optionally its children.\n   *\n   * @param recursive Clone child nodes as well.\n   * @returns A clone of the node.\n   */\n  cloneNode(recursive = false) {\n    return cloneNode(this, recursive);\n  }\n}\n/**\n * A node that contains some data.\n */\nclass DataNode extends Node {\n  /**\n   * @param data The content of the data node\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n  }\n  /**\n   * Same as {@link data}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get nodeValue() {\n    return this.data;\n  }\n  set nodeValue(data) {\n    this.data = data;\n  }\n}\n/**\n * Text within the document.\n */\nclass Text extends DataNode {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Text;\n  }\n  get nodeType() {\n    return 3;\n  }\n}\n/**\n * Comments within the document.\n */\nclass Comment extends DataNode {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Comment;\n  }\n  get nodeType() {\n    return 8;\n  }\n}\n/**\n * Processing instructions, including doc types.\n */\nclass ProcessingInstruction extends DataNode {\n  constructor(name, data) {\n    super(data);\n    this.name = name;\n    this.type = ElementType.Directive;\n  }\n  get nodeType() {\n    return 1;\n  }\n}\n/**\n * A `Node` that can have children.\n */\nclass NodeWithChildren extends Node {\n  /**\n   * @param children Children of the node. Only certain node types can have children.\n   */\n  constructor(children) {\n    super();\n    this.children = children;\n  }\n  // Aliases\n  /** First child of the node. */\n  get firstChild() {\n    var _a;\n    return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n  }\n  /** Last child of the node. */\n  get lastChild() {\n    return this.children.length > 0 ? this.children[this.children.length - 1] : null;\n  }\n  /**\n   * Same as {@link children}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get childNodes() {\n    return this.children;\n  }\n  set childNodes(children) {\n    this.children = children;\n  }\n}\nclass CDATA extends NodeWithChildren {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.CDATA;\n  }\n  get nodeType() {\n    return 4;\n  }\n}\n/**\n * The root node of the document.\n */\nclass Document extends NodeWithChildren {\n  constructor() {\n    super(...arguments);\n    this.type = ElementType.Root;\n  }\n  get nodeType() {\n    return 9;\n  }\n}\n/**\n * An element within the DOM.\n */\nclass Element extends NodeWithChildren {\n  /**\n   * @param name Name of the tag, eg. `div`, `span`.\n   * @param attribs Object mapping attribute names to attribute values.\n   * @param children Children of the node.\n   */\n  constructor(name, attribs, children = [], type = name === \"script\" ? ElementType.Script : name === \"style\" ? ElementType.Style : ElementType.Tag) {\n    super(children);\n    this.name = name;\n    this.attribs = attribs;\n    this.type = type;\n  }\n  get nodeType() {\n    return 1;\n  }\n  // DOM Level 1 aliases\n  /**\n   * Same as {@link name}.\n   * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n   */\n  get tagName() {\n    return this.name;\n  }\n  set tagName(name) {\n    this.name = name;\n  }\n  get attributes() {\n    return Object.keys(this.attribs).map(name => {\n      var _a, _b;\n      return {\n        name,\n        value: this.attribs[name],\n        namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n        prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name]\n      };\n    });\n  }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nfunction isTag(node) {\n  return isTag$1(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nfunction isCDATA(node) {\n  return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nfunction isText(node) {\n  return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nfunction isComment(node) {\n  return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDirective(node) {\n  return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDocument(node) {\n  return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nfunction hasChildren(node) {\n  return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive = false) {\n  let result;\n  if (isText(node)) {\n    result = new Text(node.data);\n  } else if (isComment(node)) {\n    result = new Comment(node.data);\n  } else if (isTag(node)) {\n    const children = recursive ? cloneChildren(node.children) : [];\n    const clone = new Element(node.name, {\n      ...node.attribs\n    }, children);\n    children.forEach(child => child.parent = clone);\n    if (node.namespace != null) {\n      clone.namespace = node.namespace;\n    }\n    if (node[\"x-attribsNamespace\"]) {\n      clone[\"x-attribsNamespace\"] = {\n        ...node[\"x-attribsNamespace\"]\n      };\n    }\n    if (node[\"x-attribsPrefix\"]) {\n      clone[\"x-attribsPrefix\"] = {\n        ...node[\"x-attribsPrefix\"]\n      };\n    }\n    result = clone;\n  } else if (isCDATA(node)) {\n    const children = recursive ? cloneChildren(node.children) : [];\n    const clone = new CDATA(children);\n    children.forEach(child => child.parent = clone);\n    result = clone;\n  } else if (isDocument(node)) {\n    const children = recursive ? cloneChildren(node.children) : [];\n    const clone = new Document(children);\n    children.forEach(child => child.parent = clone);\n    if (node[\"x-mode\"]) {\n      clone[\"x-mode\"] = node[\"x-mode\"];\n    }\n    result = clone;\n  } else if (isDirective(node)) {\n    const instruction = new ProcessingInstruction(node.name, node.data);\n    if (node[\"x-name\"] != null) {\n      instruction[\"x-name\"] = node[\"x-name\"];\n      instruction[\"x-publicId\"] = node[\"x-publicId\"];\n      instruction[\"x-systemId\"] = node[\"x-systemId\"];\n    }\n    result = instruction;\n  } else {\n    throw new Error(`Not implemented yet: ${node.type}`);\n  }\n  result.startIndex = node.startIndex;\n  result.endIndex = node.endIndex;\n  if (node.sourceCodeLocation != null) {\n    result.sourceCodeLocation = node.sourceCodeLocation;\n  }\n  return result;\n}\nfunction cloneChildren(childs) {\n  const children = childs.map(child => cloneNode(child, true));\n  for (let i = 1; i < children.length; i++) {\n    children[i].prev = children[i - 1];\n    children[i - 1].next = children[i];\n  }\n  return children;\n}\n\n// Default options\nconst defaultOpts = {\n  withStartIndices: false,\n  withEndIndices: false,\n  xmlMode: false\n};\nclass DomHandler {\n  /**\n   * @param callback Called once parsing has completed.\n   * @param options Settings for the handler.\n   * @param elementCB Callback whenever a tag is closed.\n   */\n  constructor(callback, options, elementCB) {\n    /** The elements of the DOM */\n    this.dom = [];\n    /** The root element for the DOM */\n    this.root = new Document(this.dom);\n    /** Indicated whether parsing has been completed. */\n    this.done = false;\n    /** Stack of open tags. */\n    this.tagStack = [this.root];\n    /** A data node that is still being written to. */\n    this.lastNode = null;\n    /** Reference to the parser instance. Used for location information. */\n    this.parser = null;\n    // Make it possible to skip arguments, for backwards-compatibility\n    if (typeof options === \"function\") {\n      elementCB = options;\n      options = defaultOpts;\n    }\n    if (typeof callback === \"object\") {\n      options = callback;\n      callback = undefined;\n    }\n    this.callback = callback !== null && callback !== void 0 ? callback : null;\n    this.options = options !== null && options !== void 0 ? options : defaultOpts;\n    this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n  }\n  onparserinit(parser) {\n    this.parser = parser;\n  }\n  // Resets the handler back to starting state\n  onreset() {\n    this.dom = [];\n    this.root = new Document(this.dom);\n    this.done = false;\n    this.tagStack = [this.root];\n    this.lastNode = null;\n    this.parser = null;\n  }\n  // Signals the handler that parsing is done\n  onend() {\n    if (this.done) return;\n    this.done = true;\n    this.parser = null;\n    this.handleCallback(null);\n  }\n  onerror(error) {\n    this.handleCallback(error);\n  }\n  onclosetag() {\n    this.lastNode = null;\n    const elem = this.tagStack.pop();\n    if (this.options.withEndIndices) {\n      elem.endIndex = this.parser.endIndex;\n    }\n    if (this.elementCB) this.elementCB(elem);\n  }\n  onopentag(name, attribs) {\n    const type = this.options.xmlMode ? ElementType.Tag : undefined;\n    const element = new Element(name, attribs, undefined, type);\n    this.addNode(element);\n    this.tagStack.push(element);\n  }\n  ontext(data) {\n    const {\n      lastNode\n    } = this;\n    if (lastNode && lastNode.type === ElementType.Text) {\n      lastNode.data += data;\n      if (this.options.withEndIndices) {\n        lastNode.endIndex = this.parser.endIndex;\n      }\n    } else {\n      const node = new Text(data);\n      this.addNode(node);\n      this.lastNode = node;\n    }\n  }\n  oncomment(data) {\n    if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n      this.lastNode.data += data;\n      return;\n    }\n    const node = new Comment(data);\n    this.addNode(node);\n    this.lastNode = node;\n  }\n  oncommentend() {\n    this.lastNode = null;\n  }\n  oncdatastart() {\n    const text = new Text(\"\");\n    const node = new CDATA([text]);\n    this.addNode(node);\n    text.parent = node;\n    this.lastNode = text;\n  }\n  oncdataend() {\n    this.lastNode = null;\n  }\n  onprocessinginstruction(name, data) {\n    const node = new ProcessingInstruction(name, data);\n    this.addNode(node);\n  }\n  handleCallback(error) {\n    if (typeof this.callback === \"function\") {\n      this.callback(error, this.dom);\n    } else if (error) {\n      throw error;\n    }\n  }\n  addNode(node) {\n    const parent = this.tagStack[this.tagStack.length - 1];\n    const previousSibling = parent.children[parent.children.length - 1];\n    if (this.options.withStartIndices) {\n      node.startIndex = this.parser.startIndex;\n    }\n    if (this.options.withEndIndices) {\n      node.endIndex = this.parser.endIndex;\n    }\n    parent.children.push(node);\n    if (previousSibling) {\n      node.prev = previousSibling;\n      previousSibling.next = node;\n    }\n    node.parent = parent;\n    this.lastNode = null;\n  }\n}\n\n// Generated using scripts/write-decode-map.ts\nvar htmlDecodeTree$1 = new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\".split(\"\").map(c => c.charCodeAt(0)));\n\n// Generated using scripts/write-decode-map.ts\nvar xmlDecodeTree$1 = new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\".split(\"\").map(c => c.charCodeAt(0)));\n\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a$1;\nconst decodeMap$1 = new Map([[0, 65533],\n// C1 Unicode control character reference replacements\n[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nconst fromCodePoint$1 =\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a$1 = String.fromCodePoint) !== null && _a$1 !== void 0 ? _a$1 : function (codePoint) {\n  let output = \"\";\n  if (codePoint > 0xffff) {\n    codePoint -= 0x10000;\n    output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n    codePoint = 0xdc00 | codePoint & 0x3ff;\n  }\n  output += String.fromCharCode(codePoint);\n  return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nfunction replaceCodePoint$1(codePoint) {\n  var _a;\n  if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {\n    return 0xfffd;\n  }\n  return (_a = decodeMap$1.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\nvar CharCodes$2;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n  CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n  CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n  CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n  CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n  CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n  CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n  CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n  CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n  CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n  CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n  CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes$2 || (CharCodes$2 = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT$1 = 0b100000;\nvar BinTrieFlags$1;\n(function (BinTrieFlags) {\n  BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags$1 || (BinTrieFlags$1 = {}));\nfunction isNumber$1(code) {\n  return code >= CharCodes$2.ZERO && code <= CharCodes$2.NINE;\n}\nfunction isHexadecimalCharacter$1(code) {\n  return code >= CharCodes$2.UPPER_A && code <= CharCodes$2.UPPER_F || code >= CharCodes$2.LOWER_A && code <= CharCodes$2.LOWER_F;\n}\nfunction isAsciiAlphaNumeric$1(code) {\n  return code >= CharCodes$2.UPPER_A && code <= CharCodes$2.UPPER_Z || code >= CharCodes$2.LOWER_A && code <= CharCodes$2.LOWER_Z || isNumber$1(code);\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd$1(code) {\n  return code === CharCodes$2.EQUALS || isAsciiAlphaNumeric$1(code);\n}\nvar EntityDecoderState$1;\n(function (EntityDecoderState) {\n  EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n  EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n  EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n  EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n  EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState$1 || (EntityDecoderState$1 = {}));\nvar DecodingMode$1;\n(function (DecodingMode) {\n  /** Entities in text nodes that can end with any character. */\n  DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n  /** Only allow entities terminated with a semicolon. */\n  DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n  /** Entities in attributes have limitations on ending characters. */\n  DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode$1 || (DecodingMode$1 = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nlet EntityDecoder$1 = class EntityDecoder {\n  constructor(/** The tree used to decode entities. */\n  decodeTree,\n  /**\n   * The function that is called when a codepoint is decoded.\n   *\n   * For multi-byte named entities, this will be called multiple times,\n   * with the second codepoint, and the same `consumed` value.\n   *\n   * @param codepoint The decoded codepoint.\n   * @param consumed The number of bytes consumed by the decoder.\n   */\n  emitCodePoint, /** An object that is used to produce errors. */\n  errors) {\n    this.decodeTree = decodeTree;\n    this.emitCodePoint = emitCodePoint;\n    this.errors = errors;\n    /** The current state of the decoder. */\n    this.state = EntityDecoderState$1.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    this.consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    this.result = 0;\n    /** The current index in the decode tree. */\n    this.treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    this.excess = 1;\n    /** The mode in which the decoder is operating. */\n    this.decodeMode = DecodingMode$1.Strict;\n  }\n  /** Resets the instance to make it reusable. */\n  startEntity(decodeMode) {\n    this.decodeMode = decodeMode;\n    this.state = EntityDecoderState$1.EntityStart;\n    this.result = 0;\n    this.treeIndex = 0;\n    this.excess = 1;\n    this.consumed = 1;\n  }\n  /**\n   * Write an entity to the decoder. This can be called multiple times with partial entities.\n   * If the entity is incomplete, the decoder will return -1.\n   *\n   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n   * entity is incomplete, and resume when the next string is written.\n   *\n   * @param string The string containing the entity (or a continuation of the entity).\n   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  write(str, offset) {\n    switch (this.state) {\n      case EntityDecoderState$1.EntityStart:\n        {\n          if (str.charCodeAt(offset) === CharCodes$2.NUM) {\n            this.state = EntityDecoderState$1.NumericStart;\n            this.consumed += 1;\n            return this.stateNumericStart(str, offset + 1);\n          }\n          this.state = EntityDecoderState$1.NamedEntity;\n          return this.stateNamedEntity(str, offset);\n        }\n      case EntityDecoderState$1.NumericStart:\n        {\n          return this.stateNumericStart(str, offset);\n        }\n      case EntityDecoderState$1.NumericDecimal:\n        {\n          return this.stateNumericDecimal(str, offset);\n        }\n      case EntityDecoderState$1.NumericHex:\n        {\n          return this.stateNumericHex(str, offset);\n        }\n      case EntityDecoderState$1.NamedEntity:\n        {\n          return this.stateNamedEntity(str, offset);\n        }\n    }\n  }\n  /**\n   * Switches between the numeric decimal and hexadecimal states.\n   *\n   * Equivalent to the `Numeric character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericStart(str, offset) {\n    if (offset >= str.length) {\n      return -1;\n    }\n    if ((str.charCodeAt(offset) | TO_LOWER_BIT$1) === CharCodes$2.LOWER_X) {\n      this.state = EntityDecoderState$1.NumericHex;\n      this.consumed += 1;\n      return this.stateNumericHex(str, offset + 1);\n    }\n    this.state = EntityDecoderState$1.NumericDecimal;\n    return this.stateNumericDecimal(str, offset);\n  }\n  addToNumericResult(str, start, end, base) {\n    if (start !== end) {\n      const digitCount = end - start;\n      this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);\n      this.consumed += digitCount;\n    }\n  }\n  /**\n   * Parses a hexadecimal numeric entity.\n   *\n   * Equivalent to the `Hexademical character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericHex(str, offset) {\n    const startIdx = offset;\n    while (offset < str.length) {\n      const char = str.charCodeAt(offset);\n      if (isNumber$1(char) || isHexadecimalCharacter$1(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return this.emitNumericEntity(char, 3);\n      }\n    }\n    this.addToNumericResult(str, startIdx, offset, 16);\n    return -1;\n  }\n  /**\n   * Parses a decimal numeric entity.\n   *\n   * Equivalent to the `Decimal character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericDecimal(str, offset) {\n    const startIdx = offset;\n    while (offset < str.length) {\n      const char = str.charCodeAt(offset);\n      if (isNumber$1(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return this.emitNumericEntity(char, 2);\n      }\n    }\n    this.addToNumericResult(str, startIdx, offset, 10);\n    return -1;\n  }\n  /**\n   * Validate and emit a numeric entity.\n   *\n   * Implements the logic from the `Hexademical character reference start\n   * state` and `Numeric character reference end state` in the HTML spec.\n   *\n   * @param lastCp The last code point of the entity. Used to see if the\n   *               entity was terminated with a semicolon.\n   * @param expectedLength The minimum number of characters that should be\n   *                       consumed. Used to validate that at least one digit\n   *                       was consumed.\n   * @returns The number of characters that were consumed.\n   */\n  emitNumericEntity(lastCp, expectedLength) {\n    var _a;\n    // Ensure we consumed at least one digit.\n    if (this.consumed <= expectedLength) {\n      (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n      return 0;\n    }\n    // Figure out if this is a legit end of the entity\n    if (lastCp === CharCodes$2.SEMI) {\n      this.consumed += 1;\n    } else if (this.decodeMode === DecodingMode$1.Strict) {\n      return 0;\n    }\n    this.emitCodePoint(replaceCodePoint$1(this.result), this.consumed);\n    if (this.errors) {\n      if (lastCp !== CharCodes$2.SEMI) {\n        this.errors.missingSemicolonAfterCharacterReference();\n      }\n      this.errors.validateNumericCharacterReference(this.result);\n    }\n    return this.consumed;\n  }\n  /**\n   * Parses a named entity.\n   *\n   * Equivalent to the `Named character reference state` in the HTML spec.\n   *\n   * @param str The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNamedEntity(str, offset) {\n    const {\n      decodeTree\n    } = this;\n    let current = decodeTree[this.treeIndex];\n    // The mask is the number of bytes of the value, including the current byte.\n    let valueLength = (current & BinTrieFlags$1.VALUE_LENGTH) >> 14;\n    for (; offset < str.length; offset++, this.excess++) {\n      const char = str.charCodeAt(offset);\n      this.treeIndex = determineBranch$1(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n      if (this.treeIndex < 0) {\n        return this.result === 0 ||\n        // If we are parsing an attribute\n        this.decodeMode === DecodingMode$1.Attribute && (\n        // We shouldn't have consumed any characters after the entity,\n        valueLength === 0 ||\n        // And there should be no invalid characters.\n        isEntityInAttributeInvalidEnd$1(char)) ? 0 : this.emitNotTerminatedNamedEntity();\n      }\n      current = decodeTree[this.treeIndex];\n      valueLength = (current & BinTrieFlags$1.VALUE_LENGTH) >> 14;\n      // If the branch is a value, store it and continue\n      if (valueLength !== 0) {\n        // If the entity is terminated by a semicolon, we are done.\n        if (char === CharCodes$2.SEMI) {\n          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n        }\n        // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n        if (this.decodeMode !== DecodingMode$1.Strict) {\n          this.result = this.treeIndex;\n          this.consumed += this.excess;\n          this.excess = 0;\n        }\n      }\n    }\n    return -1;\n  }\n  /**\n   * Emit a named entity that was not terminated with a semicolon.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNotTerminatedNamedEntity() {\n    var _a;\n    const {\n      result,\n      decodeTree\n    } = this;\n    const valueLength = (decodeTree[result] & BinTrieFlags$1.VALUE_LENGTH) >> 14;\n    this.emitNamedEntityData(result, valueLength, this.consumed);\n    (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n    return this.consumed;\n  }\n  /**\n   * Emit a named entity.\n   *\n   * @param result The index of the entity in the decode tree.\n   * @param valueLength The number of bytes in the entity.\n   * @param consumed The number of characters consumed.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNamedEntityData(result, valueLength, consumed) {\n    const {\n      decodeTree\n    } = this;\n    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags$1.VALUE_LENGTH : decodeTree[result + 1], consumed);\n    if (valueLength === 3) {\n      // For multi-byte values, we need to emit the second byte.\n      this.emitCodePoint(decodeTree[result + 2], consumed);\n    }\n    return consumed;\n  }\n  /**\n   * Signal to the parser that the end of the input was reached.\n   *\n   * Remaining data will be emitted and relevant errors will be produced.\n   *\n   * @returns The number of characters consumed.\n   */\n  end() {\n    var _a;\n    switch (this.state) {\n      case EntityDecoderState$1.NamedEntity:\n        {\n          // Emit a named entity if we have one.\n          return this.result !== 0 && (this.decodeMode !== DecodingMode$1.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;\n        }\n      // Otherwise, emit a numeric entity if we have one.\n      case EntityDecoderState$1.NumericDecimal:\n        {\n          return this.emitNumericEntity(0, 2);\n        }\n      case EntityDecoderState$1.NumericHex:\n        {\n          return this.emitNumericEntity(0, 3);\n        }\n      case EntityDecoderState$1.NumericStart:\n        {\n          (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n          return 0;\n        }\n      case EntityDecoderState$1.EntityStart:\n        {\n          // Return 0 if we have no entity.\n          return 0;\n        }\n    }\n  }\n};\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n  let ret = \"\";\n  const decoder = new EntityDecoder$1(decodeTree, str => ret += fromCodePoint$1(str));\n  return function decodeWithTrie(str, decodeMode) {\n    let lastIndex = 0;\n    let offset = 0;\n    while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n      ret += str.slice(lastIndex, offset);\n      decoder.startEntity(decodeMode);\n      const len = decoder.write(str,\n      // Skip the \"&\"\n      offset + 1);\n      if (len < 0) {\n        lastIndex = offset + decoder.end();\n        break;\n      }\n      lastIndex = offset + len;\n      // If `len` is 0, skip the current `&` and continue.\n      offset = len === 0 ? lastIndex + 1 : lastIndex;\n    }\n    const result = ret + str.slice(lastIndex);\n    // Make sure we don't keep a reference to the final string.\n    ret = \"\";\n    return result;\n  };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nfunction determineBranch$1(decodeTree, current, nodeIdx, char) {\n  const branchCount = (current & BinTrieFlags$1.BRANCH_LENGTH) >> 7;\n  const jumpOffset = current & BinTrieFlags$1.JUMP_TABLE;\n  // Case 1: Single branch encoded in jump offset\n  if (branchCount === 0) {\n    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n  }\n  // Case 2: Multiple branches encoded in jump table\n  if (jumpOffset) {\n    const value = char - jumpOffset;\n    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;\n  }\n  // Case 3: Multiple branches encoded in dictionary\n  // Binary search for the character.\n  let lo = nodeIdx;\n  let hi = lo + branchCount - 1;\n  while (lo <= hi) {\n    const mid = lo + hi >>> 1;\n    const midVal = decodeTree[mid];\n    if (midVal < char) {\n      lo = mid + 1;\n    } else if (midVal > char) {\n      hi = mid - 1;\n    } else {\n      return decodeTree[mid + branchCount];\n    }\n  }\n  return -1;\n}\ngetDecoder(htmlDecodeTree$1);\ngetDecoder(xmlDecodeTree$1);\n\n// Generated using scripts/write-encode-map.ts\nfunction restoreDiff(arr) {\n  for (let i = 1; i < arr.length; i++) {\n    arr[i][0] += arr[i - 1][0] + 1;\n  }\n  return arr;\n}\n// prettier-ignore\nnew Map(/* #__PURE__ */restoreDiff([[9, \"&Tab;\"], [0, \"&NewLine;\"], [22, \"&excl;\"], [0, \"&quot;\"], [0, \"&num;\"], [0, \"&dollar;\"], [0, \"&percnt;\"], [0, \"&amp;\"], [0, \"&apos;\"], [0, \"&lpar;\"], [0, \"&rpar;\"], [0, \"&ast;\"], [0, \"&plus;\"], [0, \"&comma;\"], [1, \"&period;\"], [0, \"&sol;\"], [10, \"&colon;\"], [0, \"&semi;\"], [0, {\n  v: \"&lt;\",\n  n: 8402,\n  o: \"&nvlt;\"\n}], [0, {\n  v: \"&equals;\",\n  n: 8421,\n  o: \"&bne;\"\n}], [0, {\n  v: \"&gt;\",\n  n: 8402,\n  o: \"&nvgt;\"\n}], [0, \"&quest;\"], [0, \"&commat;\"], [26, \"&lbrack;\"], [0, \"&bsol;\"], [0, \"&rbrack;\"], [0, \"&Hat;\"], [0, \"&lowbar;\"], [0, \"&DiacriticalGrave;\"], [5, {\n  n: 106,\n  o: \"&fjlig;\"\n}], [20, \"&lbrace;\"], [0, \"&verbar;\"], [0, \"&rbrace;\"], [34, \"&nbsp;\"], [0, \"&iexcl;\"], [0, \"&cent;\"], [0, \"&pound;\"], [0, \"&curren;\"], [0, \"&yen;\"], [0, \"&brvbar;\"], [0, \"&sect;\"], [0, \"&die;\"], [0, \"&copy;\"], [0, \"&ordf;\"], [0, \"&laquo;\"], [0, \"&not;\"], [0, \"&shy;\"], [0, \"&circledR;\"], [0, \"&macr;\"], [0, \"&deg;\"], [0, \"&PlusMinus;\"], [0, \"&sup2;\"], [0, \"&sup3;\"], [0, \"&acute;\"], [0, \"&micro;\"], [0, \"&para;\"], [0, \"&centerdot;\"], [0, \"&cedil;\"], [0, \"&sup1;\"], [0, \"&ordm;\"], [0, \"&raquo;\"], [0, \"&frac14;\"], [0, \"&frac12;\"], [0, \"&frac34;\"], [0, \"&iquest;\"], [0, \"&Agrave;\"], [0, \"&Aacute;\"], [0, \"&Acirc;\"], [0, \"&Atilde;\"], [0, \"&Auml;\"], [0, \"&angst;\"], [0, \"&AElig;\"], [0, \"&Ccedil;\"], [0, \"&Egrave;\"], [0, \"&Eacute;\"], [0, \"&Ecirc;\"], [0, \"&Euml;\"], [0, \"&Igrave;\"], [0, \"&Iacute;\"], [0, \"&Icirc;\"], [0, \"&Iuml;\"], [0, \"&ETH;\"], [0, \"&Ntilde;\"], [0, \"&Ograve;\"], [0, \"&Oacute;\"], [0, \"&Ocirc;\"], [0, \"&Otilde;\"], [0, \"&Ouml;\"], [0, \"&times;\"], [0, \"&Oslash;\"], [0, \"&Ugrave;\"], [0, \"&Uacute;\"], [0, \"&Ucirc;\"], [0, \"&Uuml;\"], [0, \"&Yacute;\"], [0, \"&THORN;\"], [0, \"&szlig;\"], [0, \"&agrave;\"], [0, \"&aacute;\"], [0, \"&acirc;\"], [0, \"&atilde;\"], [0, \"&auml;\"], [0, \"&aring;\"], [0, \"&aelig;\"], [0, \"&ccedil;\"], [0, \"&egrave;\"], [0, \"&eacute;\"], [0, \"&ecirc;\"], [0, \"&euml;\"], [0, \"&igrave;\"], [0, \"&iacute;\"], [0, \"&icirc;\"], [0, \"&iuml;\"], [0, \"&eth;\"], [0, \"&ntilde;\"], [0, \"&ograve;\"], [0, \"&oacute;\"], [0, \"&ocirc;\"], [0, \"&otilde;\"], [0, \"&ouml;\"], [0, \"&div;\"], [0, \"&oslash;\"], [0, \"&ugrave;\"], [0, \"&uacute;\"], [0, \"&ucirc;\"], [0, \"&uuml;\"], [0, \"&yacute;\"], [0, \"&thorn;\"], [0, \"&yuml;\"], [0, \"&Amacr;\"], [0, \"&amacr;\"], [0, \"&Abreve;\"], [0, \"&abreve;\"], [0, \"&Aogon;\"], [0, \"&aogon;\"], [0, \"&Cacute;\"], [0, \"&cacute;\"], [0, \"&Ccirc;\"], [0, \"&ccirc;\"], [0, \"&Cdot;\"], [0, \"&cdot;\"], [0, \"&Ccaron;\"], [0, \"&ccaron;\"], [0, \"&Dcaron;\"], [0, \"&dcaron;\"], [0, \"&Dstrok;\"], [0, \"&dstrok;\"], [0, \"&Emacr;\"], [0, \"&emacr;\"], [2, \"&Edot;\"], [0, \"&edot;\"], [0, \"&Eogon;\"], [0, \"&eogon;\"], [0, \"&Ecaron;\"], [0, \"&ecaron;\"], [0, \"&Gcirc;\"], [0, \"&gcirc;\"], [0, \"&Gbreve;\"], [0, \"&gbreve;\"], [0, \"&Gdot;\"], [0, \"&gdot;\"], [0, \"&Gcedil;\"], [1, \"&Hcirc;\"], [0, \"&hcirc;\"], [0, \"&Hstrok;\"], [0, \"&hstrok;\"], [0, \"&Itilde;\"], [0, \"&itilde;\"], [0, \"&Imacr;\"], [0, \"&imacr;\"], [2, \"&Iogon;\"], [0, \"&iogon;\"], [0, \"&Idot;\"], [0, \"&imath;\"], [0, \"&IJlig;\"], [0, \"&ijlig;\"], [0, \"&Jcirc;\"], [0, \"&jcirc;\"], [0, \"&Kcedil;\"], [0, \"&kcedil;\"], [0, \"&kgreen;\"], [0, \"&Lacute;\"], [0, \"&lacute;\"], [0, \"&Lcedil;\"], [0, \"&lcedil;\"], [0, \"&Lcaron;\"], [0, \"&lcaron;\"], [0, \"&Lmidot;\"], [0, \"&lmidot;\"], [0, \"&Lstrok;\"], [0, \"&lstrok;\"], [0, \"&Nacute;\"], [0, \"&nacute;\"], [0, \"&Ncedil;\"], [0, \"&ncedil;\"], [0, \"&Ncaron;\"], [0, \"&ncaron;\"], [0, \"&napos;\"], [0, \"&ENG;\"], [0, \"&eng;\"], [0, \"&Omacr;\"], [0, \"&omacr;\"], [2, \"&Odblac;\"], [0, \"&odblac;\"], [0, \"&OElig;\"], [0, \"&oelig;\"], [0, \"&Racute;\"], [0, \"&racute;\"], [0, \"&Rcedil;\"], [0, \"&rcedil;\"], [0, \"&Rcaron;\"], [0, \"&rcaron;\"], [0, \"&Sacute;\"], [0, \"&sacute;\"], [0, \"&Scirc;\"], [0, \"&scirc;\"], [0, \"&Scedil;\"], [0, \"&scedil;\"], [0, \"&Scaron;\"], [0, \"&scaron;\"], [0, \"&Tcedil;\"], [0, \"&tcedil;\"], [0, \"&Tcaron;\"], [0, \"&tcaron;\"], [0, \"&Tstrok;\"], [0, \"&tstrok;\"], [0, \"&Utilde;\"], [0, \"&utilde;\"], [0, \"&Umacr;\"], [0, \"&umacr;\"], [0, \"&Ubreve;\"], [0, \"&ubreve;\"], [0, \"&Uring;\"], [0, \"&uring;\"], [0, \"&Udblac;\"], [0, \"&udblac;\"], [0, \"&Uogon;\"], [0, \"&uogon;\"], [0, \"&Wcirc;\"], [0, \"&wcirc;\"], [0, \"&Ycirc;\"], [0, \"&ycirc;\"], [0, \"&Yuml;\"], [0, \"&Zacute;\"], [0, \"&zacute;\"], [0, \"&Zdot;\"], [0, \"&zdot;\"], [0, \"&Zcaron;\"], [0, \"&zcaron;\"], [19, \"&fnof;\"], [34, \"&imped;\"], [63, \"&gacute;\"], [65, \"&jmath;\"], [142, \"&circ;\"], [0, \"&caron;\"], [16, \"&breve;\"], [0, \"&DiacriticalDot;\"], [0, \"&ring;\"], [0, \"&ogon;\"], [0, \"&DiacriticalTilde;\"], [0, \"&dblac;\"], [51, \"&DownBreve;\"], [127, \"&Alpha;\"], [0, \"&Beta;\"], [0, \"&Gamma;\"], [0, \"&Delta;\"], [0, \"&Epsilon;\"], [0, \"&Zeta;\"], [0, \"&Eta;\"], [0, \"&Theta;\"], [0, \"&Iota;\"], [0, \"&Kappa;\"], [0, \"&Lambda;\"], [0, \"&Mu;\"], [0, \"&Nu;\"], [0, \"&Xi;\"], [0, \"&Omicron;\"], [0, \"&Pi;\"], [0, \"&Rho;\"], [1, \"&Sigma;\"], [0, \"&Tau;\"], [0, \"&Upsilon;\"], [0, \"&Phi;\"], [0, \"&Chi;\"], [0, \"&Psi;\"], [0, \"&ohm;\"], [7, \"&alpha;\"], [0, \"&beta;\"], [0, \"&gamma;\"], [0, \"&delta;\"], [0, \"&epsi;\"], [0, \"&zeta;\"], [0, \"&eta;\"], [0, \"&theta;\"], [0, \"&iota;\"], [0, \"&kappa;\"], [0, \"&lambda;\"], [0, \"&mu;\"], [0, \"&nu;\"], [0, \"&xi;\"], [0, \"&omicron;\"], [0, \"&pi;\"], [0, \"&rho;\"], [0, \"&sigmaf;\"], [0, \"&sigma;\"], [0, \"&tau;\"], [0, \"&upsi;\"], [0, \"&phi;\"], [0, \"&chi;\"], [0, \"&psi;\"], [0, \"&omega;\"], [7, \"&thetasym;\"], [0, \"&Upsi;\"], [2, \"&phiv;\"], [0, \"&piv;\"], [5, \"&Gammad;\"], [0, \"&digamma;\"], [18, \"&kappav;\"], [0, \"&rhov;\"], [3, \"&epsiv;\"], [0, \"&backepsilon;\"], [10, \"&IOcy;\"], [0, \"&DJcy;\"], [0, \"&GJcy;\"], [0, \"&Jukcy;\"], [0, \"&DScy;\"], [0, \"&Iukcy;\"], [0, \"&YIcy;\"], [0, \"&Jsercy;\"], [0, \"&LJcy;\"], [0, \"&NJcy;\"], [0, \"&TSHcy;\"], [0, \"&KJcy;\"], [1, \"&Ubrcy;\"], [0, \"&DZcy;\"], [0, \"&Acy;\"], [0, \"&Bcy;\"], [0, \"&Vcy;\"], [0, \"&Gcy;\"], [0, \"&Dcy;\"], [0, \"&IEcy;\"], [0, \"&ZHcy;\"], [0, \"&Zcy;\"], [0, \"&Icy;\"], [0, \"&Jcy;\"], [0, \"&Kcy;\"], [0, \"&Lcy;\"], [0, \"&Mcy;\"], [0, \"&Ncy;\"], [0, \"&Ocy;\"], [0, \"&Pcy;\"], [0, \"&Rcy;\"], [0, \"&Scy;\"], [0, \"&Tcy;\"], [0, \"&Ucy;\"], [0, \"&Fcy;\"], [0, \"&KHcy;\"], [0, \"&TScy;\"], [0, \"&CHcy;\"], [0, \"&SHcy;\"], [0, \"&SHCHcy;\"], [0, \"&HARDcy;\"], [0, \"&Ycy;\"], [0, \"&SOFTcy;\"], [0, \"&Ecy;\"], [0, \"&YUcy;\"], [0, \"&YAcy;\"], [0, \"&acy;\"], [0, \"&bcy;\"], [0, \"&vcy;\"], [0, \"&gcy;\"], [0, \"&dcy;\"], [0, \"&iecy;\"], [0, \"&zhcy;\"], [0, \"&zcy;\"], [0, \"&icy;\"], [0, \"&jcy;\"], [0, \"&kcy;\"], [0, \"&lcy;\"], [0, \"&mcy;\"], [0, \"&ncy;\"], [0, \"&ocy;\"], [0, \"&pcy;\"], [0, \"&rcy;\"], [0, \"&scy;\"], [0, \"&tcy;\"], [0, \"&ucy;\"], [0, \"&fcy;\"], [0, \"&khcy;\"], [0, \"&tscy;\"], [0, \"&chcy;\"], [0, \"&shcy;\"], [0, \"&shchcy;\"], [0, \"&hardcy;\"], [0, \"&ycy;\"], [0, \"&softcy;\"], [0, \"&ecy;\"], [0, \"&yucy;\"], [0, \"&yacy;\"], [1, \"&iocy;\"], [0, \"&djcy;\"], [0, \"&gjcy;\"], [0, \"&jukcy;\"], [0, \"&dscy;\"], [0, \"&iukcy;\"], [0, \"&yicy;\"], [0, \"&jsercy;\"], [0, \"&ljcy;\"], [0, \"&njcy;\"], [0, \"&tshcy;\"], [0, \"&kjcy;\"], [1, \"&ubrcy;\"], [0, \"&dzcy;\"], [7074, \"&ensp;\"], [0, \"&emsp;\"], [0, \"&emsp13;\"], [0, \"&emsp14;\"], [1, \"&numsp;\"], [0, \"&puncsp;\"], [0, \"&ThinSpace;\"], [0, \"&hairsp;\"], [0, \"&NegativeMediumSpace;\"], [0, \"&zwnj;\"], [0, \"&zwj;\"], [0, \"&lrm;\"], [0, \"&rlm;\"], [0, \"&dash;\"], [2, \"&ndash;\"], [0, \"&mdash;\"], [0, \"&horbar;\"], [0, \"&Verbar;\"], [1, \"&lsquo;\"], [0, \"&CloseCurlyQuote;\"], [0, \"&lsquor;\"], [1, \"&ldquo;\"], [0, \"&CloseCurlyDoubleQuote;\"], [0, \"&bdquo;\"], [1, \"&dagger;\"], [0, \"&Dagger;\"], [0, \"&bull;\"], [2, \"&nldr;\"], [0, \"&hellip;\"], [9, \"&permil;\"], [0, \"&pertenk;\"], [0, \"&prime;\"], [0, \"&Prime;\"], [0, \"&tprime;\"], [0, \"&backprime;\"], [3, \"&lsaquo;\"], [0, \"&rsaquo;\"], [3, \"&oline;\"], [2, \"&caret;\"], [1, \"&hybull;\"], [0, \"&frasl;\"], [10, \"&bsemi;\"], [7, \"&qprime;\"], [7, {\n  v: \"&MediumSpace;\",\n  n: 8202,\n  o: \"&ThickSpace;\"\n}], [0, \"&NoBreak;\"], [0, \"&af;\"], [0, \"&InvisibleTimes;\"], [0, \"&ic;\"], [72, \"&euro;\"], [46, \"&tdot;\"], [0, \"&DotDot;\"], [37, \"&complexes;\"], [2, \"&incare;\"], [4, \"&gscr;\"], [0, \"&hamilt;\"], [0, \"&Hfr;\"], [0, \"&Hopf;\"], [0, \"&planckh;\"], [0, \"&hbar;\"], [0, \"&imagline;\"], [0, \"&Ifr;\"], [0, \"&lagran;\"], [0, \"&ell;\"], [1, \"&naturals;\"], [0, \"&numero;\"], [0, \"&copysr;\"], [0, \"&weierp;\"], [0, \"&Popf;\"], [0, \"&Qopf;\"], [0, \"&realine;\"], [0, \"&real;\"], [0, \"&reals;\"], [0, \"&rx;\"], [3, \"&trade;\"], [1, \"&integers;\"], [2, \"&mho;\"], [0, \"&zeetrf;\"], [0, \"&iiota;\"], [2, \"&bernou;\"], [0, \"&Cayleys;\"], [1, \"&escr;\"], [0, \"&Escr;\"], [0, \"&Fouriertrf;\"], [1, \"&Mellintrf;\"], [0, \"&order;\"], [0, \"&alefsym;\"], [0, \"&beth;\"], [0, \"&gimel;\"], [0, \"&daleth;\"], [12, \"&CapitalDifferentialD;\"], [0, \"&dd;\"], [0, \"&ee;\"], [0, \"&ii;\"], [10, \"&frac13;\"], [0, \"&frac23;\"], [0, \"&frac15;\"], [0, \"&frac25;\"], [0, \"&frac35;\"], [0, \"&frac45;\"], [0, \"&frac16;\"], [0, \"&frac56;\"], [0, \"&frac18;\"], [0, \"&frac38;\"], [0, \"&frac58;\"], [0, \"&frac78;\"], [49, \"&larr;\"], [0, \"&ShortUpArrow;\"], [0, \"&rarr;\"], [0, \"&darr;\"], [0, \"&harr;\"], [0, \"&updownarrow;\"], [0, \"&nwarr;\"], [0, \"&nearr;\"], [0, \"&LowerRightArrow;\"], [0, \"&LowerLeftArrow;\"], [0, \"&nlarr;\"], [0, \"&nrarr;\"], [1, {\n  v: \"&rarrw;\",\n  n: 824,\n  o: \"&nrarrw;\"\n}], [0, \"&Larr;\"], [0, \"&Uarr;\"], [0, \"&Rarr;\"], [0, \"&Darr;\"], [0, \"&larrtl;\"], [0, \"&rarrtl;\"], [0, \"&LeftTeeArrow;\"], [0, \"&mapstoup;\"], [0, \"&map;\"], [0, \"&DownTeeArrow;\"], [1, \"&hookleftarrow;\"], [0, \"&hookrightarrow;\"], [0, \"&larrlp;\"], [0, \"&looparrowright;\"], [0, \"&harrw;\"], [0, \"&nharr;\"], [1, \"&lsh;\"], [0, \"&rsh;\"], [0, \"&ldsh;\"], [0, \"&rdsh;\"], [1, \"&crarr;\"], [0, \"&cularr;\"], [0, \"&curarr;\"], [2, \"&circlearrowleft;\"], [0, \"&circlearrowright;\"], [0, \"&leftharpoonup;\"], [0, \"&DownLeftVector;\"], [0, \"&RightUpVector;\"], [0, \"&LeftUpVector;\"], [0, \"&rharu;\"], [0, \"&DownRightVector;\"], [0, \"&dharr;\"], [0, \"&dharl;\"], [0, \"&RightArrowLeftArrow;\"], [0, \"&udarr;\"], [0, \"&LeftArrowRightArrow;\"], [0, \"&leftleftarrows;\"], [0, \"&upuparrows;\"], [0, \"&rightrightarrows;\"], [0, \"&ddarr;\"], [0, \"&leftrightharpoons;\"], [0, \"&Equilibrium;\"], [0, \"&nlArr;\"], [0, \"&nhArr;\"], [0, \"&nrArr;\"], [0, \"&DoubleLeftArrow;\"], [0, \"&DoubleUpArrow;\"], [0, \"&DoubleRightArrow;\"], [0, \"&dArr;\"], [0, \"&DoubleLeftRightArrow;\"], [0, \"&DoubleUpDownArrow;\"], [0, \"&nwArr;\"], [0, \"&neArr;\"], [0, \"&seArr;\"], [0, \"&swArr;\"], [0, \"&lAarr;\"], [0, \"&rAarr;\"], [1, \"&zigrarr;\"], [6, \"&larrb;\"], [0, \"&rarrb;\"], [15, \"&DownArrowUpArrow;\"], [7, \"&loarr;\"], [0, \"&roarr;\"], [0, \"&hoarr;\"], [0, \"&forall;\"], [0, \"&comp;\"], [0, {\n  v: \"&part;\",\n  n: 824,\n  o: \"&npart;\"\n}], [0, \"&exist;\"], [0, \"&nexist;\"], [0, \"&empty;\"], [1, \"&Del;\"], [0, \"&Element;\"], [0, \"&NotElement;\"], [1, \"&ni;\"], [0, \"&notni;\"], [2, \"&prod;\"], [0, \"&coprod;\"], [0, \"&sum;\"], [0, \"&minus;\"], [0, \"&MinusPlus;\"], [0, \"&dotplus;\"], [1, \"&Backslash;\"], [0, \"&lowast;\"], [0, \"&compfn;\"], [1, \"&radic;\"], [2, \"&prop;\"], [0, \"&infin;\"], [0, \"&angrt;\"], [0, {\n  v: \"&ang;\",\n  n: 8402,\n  o: \"&nang;\"\n}], [0, \"&angmsd;\"], [0, \"&angsph;\"], [0, \"&mid;\"], [0, \"&nmid;\"], [0, \"&DoubleVerticalBar;\"], [0, \"&NotDoubleVerticalBar;\"], [0, \"&and;\"], [0, \"&or;\"], [0, {\n  v: \"&cap;\",\n  n: 65024,\n  o: \"&caps;\"\n}], [0, {\n  v: \"&cup;\",\n  n: 65024,\n  o: \"&cups;\"\n}], [0, \"&int;\"], [0, \"&Int;\"], [0, \"&iiint;\"], [0, \"&conint;\"], [0, \"&Conint;\"], [0, \"&Cconint;\"], [0, \"&cwint;\"], [0, \"&ClockwiseContourIntegral;\"], [0, \"&awconint;\"], [0, \"&there4;\"], [0, \"&becaus;\"], [0, \"&ratio;\"], [0, \"&Colon;\"], [0, \"&dotminus;\"], [1, \"&mDDot;\"], [0, \"&homtht;\"], [0, {\n  v: \"&sim;\",\n  n: 8402,\n  o: \"&nvsim;\"\n}], [0, {\n  v: \"&backsim;\",\n  n: 817,\n  o: \"&race;\"\n}], [0, {\n  v: \"&ac;\",\n  n: 819,\n  o: \"&acE;\"\n}], [0, \"&acd;\"], [0, \"&VerticalTilde;\"], [0, \"&NotTilde;\"], [0, {\n  v: \"&eqsim;\",\n  n: 824,\n  o: \"&nesim;\"\n}], [0, \"&sime;\"], [0, \"&NotTildeEqual;\"], [0, \"&cong;\"], [0, \"&simne;\"], [0, \"&ncong;\"], [0, \"&ap;\"], [0, \"&nap;\"], [0, \"&ape;\"], [0, {\n  v: \"&apid;\",\n  n: 824,\n  o: \"&napid;\"\n}], [0, \"&backcong;\"], [0, {\n  v: \"&asympeq;\",\n  n: 8402,\n  o: \"&nvap;\"\n}], [0, {\n  v: \"&bump;\",\n  n: 824,\n  o: \"&nbump;\"\n}], [0, {\n  v: \"&bumpe;\",\n  n: 824,\n  o: \"&nbumpe;\"\n}], [0, {\n  v: \"&doteq;\",\n  n: 824,\n  o: \"&nedot;\"\n}], [0, \"&doteqdot;\"], [0, \"&efDot;\"], [0, \"&erDot;\"], [0, \"&Assign;\"], [0, \"&ecolon;\"], [0, \"&ecir;\"], [0, \"&circeq;\"], [1, \"&wedgeq;\"], [0, \"&veeeq;\"], [1, \"&triangleq;\"], [2, \"&equest;\"], [0, \"&ne;\"], [0, {\n  v: \"&Congruent;\",\n  n: 8421,\n  o: \"&bnequiv;\"\n}], [0, \"&nequiv;\"], [1, {\n  v: \"&le;\",\n  n: 8402,\n  o: \"&nvle;\"\n}], [0, {\n  v: \"&ge;\",\n  n: 8402,\n  o: \"&nvge;\"\n}], [0, {\n  v: \"&lE;\",\n  n: 824,\n  o: \"&nlE;\"\n}], [0, {\n  v: \"&gE;\",\n  n: 824,\n  o: \"&ngE;\"\n}], [0, {\n  v: \"&lnE;\",\n  n: 65024,\n  o: \"&lvertneqq;\"\n}], [0, {\n  v: \"&gnE;\",\n  n: 65024,\n  o: \"&gvertneqq;\"\n}], [0, {\n  v: \"&ll;\",\n  n: new Map(/* #__PURE__ */restoreDiff([[824, \"&nLtv;\"], [7577, \"&nLt;\"]]))\n}], [0, {\n  v: \"&gg;\",\n  n: new Map(/* #__PURE__ */restoreDiff([[824, \"&nGtv;\"], [7577, \"&nGt;\"]]))\n}], [0, \"&between;\"], [0, \"&NotCupCap;\"], [0, \"&nless;\"], [0, \"&ngt;\"], [0, \"&nle;\"], [0, \"&nge;\"], [0, \"&lesssim;\"], [0, \"&GreaterTilde;\"], [0, \"&nlsim;\"], [0, \"&ngsim;\"], [0, \"&LessGreater;\"], [0, \"&gl;\"], [0, \"&NotLessGreater;\"], [0, \"&NotGreaterLess;\"], [0, \"&pr;\"], [0, \"&sc;\"], [0, \"&prcue;\"], [0, \"&sccue;\"], [0, \"&PrecedesTilde;\"], [0, {\n  v: \"&scsim;\",\n  n: 824,\n  o: \"&NotSucceedsTilde;\"\n}], [0, \"&NotPrecedes;\"], [0, \"&NotSucceeds;\"], [0, {\n  v: \"&sub;\",\n  n: 8402,\n  o: \"&NotSubset;\"\n}], [0, {\n  v: \"&sup;\",\n  n: 8402,\n  o: \"&NotSuperset;\"\n}], [0, \"&nsub;\"], [0, \"&nsup;\"], [0, \"&sube;\"], [0, \"&supe;\"], [0, \"&NotSubsetEqual;\"], [0, \"&NotSupersetEqual;\"], [0, {\n  v: \"&subne;\",\n  n: 65024,\n  o: \"&varsubsetneq;\"\n}], [0, {\n  v: \"&supne;\",\n  n: 65024,\n  o: \"&varsupsetneq;\"\n}], [1, \"&cupdot;\"], [0, \"&UnionPlus;\"], [0, {\n  v: \"&sqsub;\",\n  n: 824,\n  o: \"&NotSquareSubset;\"\n}], [0, {\n  v: \"&sqsup;\",\n  n: 824,\n  o: \"&NotSquareSuperset;\"\n}], [0, \"&sqsube;\"], [0, \"&sqsupe;\"], [0, {\n  v: \"&sqcap;\",\n  n: 65024,\n  o: \"&sqcaps;\"\n}], [0, {\n  v: \"&sqcup;\",\n  n: 65024,\n  o: \"&sqcups;\"\n}], [0, \"&CirclePlus;\"], [0, \"&CircleMinus;\"], [0, \"&CircleTimes;\"], [0, \"&osol;\"], [0, \"&CircleDot;\"], [0, \"&circledcirc;\"], [0, \"&circledast;\"], [1, \"&circleddash;\"], [0, \"&boxplus;\"], [0, \"&boxminus;\"], [0, \"&boxtimes;\"], [0, \"&dotsquare;\"], [0, \"&RightTee;\"], [0, \"&dashv;\"], [0, \"&DownTee;\"], [0, \"&bot;\"], [1, \"&models;\"], [0, \"&DoubleRightTee;\"], [0, \"&Vdash;\"], [0, \"&Vvdash;\"], [0, \"&VDash;\"], [0, \"&nvdash;\"], [0, \"&nvDash;\"], [0, \"&nVdash;\"], [0, \"&nVDash;\"], [0, \"&prurel;\"], [1, \"&LeftTriangle;\"], [0, \"&RightTriangle;\"], [0, {\n  v: \"&LeftTriangleEqual;\",\n  n: 8402,\n  o: \"&nvltrie;\"\n}], [0, {\n  v: \"&RightTriangleEqual;\",\n  n: 8402,\n  o: \"&nvrtrie;\"\n}], [0, \"&origof;\"], [0, \"&imof;\"], [0, \"&multimap;\"], [0, \"&hercon;\"], [0, \"&intcal;\"], [0, \"&veebar;\"], [1, \"&barvee;\"], [0, \"&angrtvb;\"], [0, \"&lrtri;\"], [0, \"&bigwedge;\"], [0, \"&bigvee;\"], [0, \"&bigcap;\"], [0, \"&bigcup;\"], [0, \"&diam;\"], [0, \"&sdot;\"], [0, \"&sstarf;\"], [0, \"&divideontimes;\"], [0, \"&bowtie;\"], [0, \"&ltimes;\"], [0, \"&rtimes;\"], [0, \"&leftthreetimes;\"], [0, \"&rightthreetimes;\"], [0, \"&backsimeq;\"], [0, \"&curlyvee;\"], [0, \"&curlywedge;\"], [0, \"&Sub;\"], [0, \"&Sup;\"], [0, \"&Cap;\"], [0, \"&Cup;\"], [0, \"&fork;\"], [0, \"&epar;\"], [0, \"&lessdot;\"], [0, \"&gtdot;\"], [0, {\n  v: \"&Ll;\",\n  n: 824,\n  o: \"&nLl;\"\n}], [0, {\n  v: \"&Gg;\",\n  n: 824,\n  o: \"&nGg;\"\n}], [0, {\n  v: \"&leg;\",\n  n: 65024,\n  o: \"&lesg;\"\n}], [0, {\n  v: \"&gel;\",\n  n: 65024,\n  o: \"&gesl;\"\n}], [2, \"&cuepr;\"], [0, \"&cuesc;\"], [0, \"&NotPrecedesSlantEqual;\"], [0, \"&NotSucceedsSlantEqual;\"], [0, \"&NotSquareSubsetEqual;\"], [0, \"&NotSquareSupersetEqual;\"], [2, \"&lnsim;\"], [0, \"&gnsim;\"], [0, \"&precnsim;\"], [0, \"&scnsim;\"], [0, \"&nltri;\"], [0, \"&NotRightTriangle;\"], [0, \"&nltrie;\"], [0, \"&NotRightTriangleEqual;\"], [0, \"&vellip;\"], [0, \"&ctdot;\"], [0, \"&utdot;\"], [0, \"&dtdot;\"], [0, \"&disin;\"], [0, \"&isinsv;\"], [0, \"&isins;\"], [0, {\n  v: \"&isindot;\",\n  n: 824,\n  o: \"&notindot;\"\n}], [0, \"&notinvc;\"], [0, \"&notinvb;\"], [1, {\n  v: \"&isinE;\",\n  n: 824,\n  o: \"&notinE;\"\n}], [0, \"&nisd;\"], [0, \"&xnis;\"], [0, \"&nis;\"], [0, \"&notnivc;\"], [0, \"&notnivb;\"], [6, \"&barwed;\"], [0, \"&Barwed;\"], [1, \"&lceil;\"], [0, \"&rceil;\"], [0, \"&LeftFloor;\"], [0, \"&rfloor;\"], [0, \"&drcrop;\"], [0, \"&dlcrop;\"], [0, \"&urcrop;\"], [0, \"&ulcrop;\"], [0, \"&bnot;\"], [1, \"&profline;\"], [0, \"&profsurf;\"], [1, \"&telrec;\"], [0, \"&target;\"], [5, \"&ulcorn;\"], [0, \"&urcorn;\"], [0, \"&dlcorn;\"], [0, \"&drcorn;\"], [2, \"&frown;\"], [0, \"&smile;\"], [9, \"&cylcty;\"], [0, \"&profalar;\"], [7, \"&topbot;\"], [6, \"&ovbar;\"], [1, \"&solbar;\"], [60, \"&angzarr;\"], [51, \"&lmoustache;\"], [0, \"&rmoustache;\"], [2, \"&OverBracket;\"], [0, \"&bbrk;\"], [0, \"&bbrktbrk;\"], [37, \"&OverParenthesis;\"], [0, \"&UnderParenthesis;\"], [0, \"&OverBrace;\"], [0, \"&UnderBrace;\"], [2, \"&trpezium;\"], [4, \"&elinters;\"], [59, \"&blank;\"], [164, \"&circledS;\"], [55, \"&boxh;\"], [1, \"&boxv;\"], [9, \"&boxdr;\"], [3, \"&boxdl;\"], [3, \"&boxur;\"], [3, \"&boxul;\"], [3, \"&boxvr;\"], [7, \"&boxvl;\"], [7, \"&boxhd;\"], [7, \"&boxhu;\"], [7, \"&boxvh;\"], [19, \"&boxH;\"], [0, \"&boxV;\"], [0, \"&boxdR;\"], [0, \"&boxDr;\"], [0, \"&boxDR;\"], [0, \"&boxdL;\"], [0, \"&boxDl;\"], [0, \"&boxDL;\"], [0, \"&boxuR;\"], [0, \"&boxUr;\"], [0, \"&boxUR;\"], [0, \"&boxuL;\"], [0, \"&boxUl;\"], [0, \"&boxUL;\"], [0, \"&boxvR;\"], [0, \"&boxVr;\"], [0, \"&boxVR;\"], [0, \"&boxvL;\"], [0, \"&boxVl;\"], [0, \"&boxVL;\"], [0, \"&boxHd;\"], [0, \"&boxhD;\"], [0, \"&boxHD;\"], [0, \"&boxHu;\"], [0, \"&boxhU;\"], [0, \"&boxHU;\"], [0, \"&boxvH;\"], [0, \"&boxVh;\"], [0, \"&boxVH;\"], [19, \"&uhblk;\"], [3, \"&lhblk;\"], [3, \"&block;\"], [8, \"&blk14;\"], [0, \"&blk12;\"], [0, \"&blk34;\"], [13, \"&square;\"], [8, \"&blacksquare;\"], [0, \"&EmptyVerySmallSquare;\"], [1, \"&rect;\"], [0, \"&marker;\"], [2, \"&fltns;\"], [1, \"&bigtriangleup;\"], [0, \"&blacktriangle;\"], [0, \"&triangle;\"], [2, \"&blacktriangleright;\"], [0, \"&rtri;\"], [3, \"&bigtriangledown;\"], [0, \"&blacktriangledown;\"], [0, \"&dtri;\"], [2, \"&blacktriangleleft;\"], [0, \"&ltri;\"], [6, \"&loz;\"], [0, \"&cir;\"], [32, \"&tridot;\"], [2, \"&bigcirc;\"], [8, \"&ultri;\"], [0, \"&urtri;\"], [0, \"&lltri;\"], [0, \"&EmptySmallSquare;\"], [0, \"&FilledSmallSquare;\"], [8, \"&bigstar;\"], [0, \"&star;\"], [7, \"&phone;\"], [49, \"&female;\"], [1, \"&male;\"], [29, \"&spades;\"], [2, \"&clubs;\"], [1, \"&hearts;\"], [0, \"&diamondsuit;\"], [3, \"&sung;\"], [2, \"&flat;\"], [0, \"&natural;\"], [0, \"&sharp;\"], [163, \"&check;\"], [3, \"&cross;\"], [8, \"&malt;\"], [21, \"&sext;\"], [33, \"&VerticalSeparator;\"], [25, \"&lbbrk;\"], [0, \"&rbbrk;\"], [84, \"&bsolhsub;\"], [0, \"&suphsol;\"], [28, \"&LeftDoubleBracket;\"], [0, \"&RightDoubleBracket;\"], [0, \"&lang;\"], [0, \"&rang;\"], [0, \"&Lang;\"], [0, \"&Rang;\"], [0, \"&loang;\"], [0, \"&roang;\"], [7, \"&longleftarrow;\"], [0, \"&longrightarrow;\"], [0, \"&longleftrightarrow;\"], [0, \"&DoubleLongLeftArrow;\"], [0, \"&DoubleLongRightArrow;\"], [0, \"&DoubleLongLeftRightArrow;\"], [1, \"&longmapsto;\"], [2, \"&dzigrarr;\"], [258, \"&nvlArr;\"], [0, \"&nvrArr;\"], [0, \"&nvHarr;\"], [0, \"&Map;\"], [6, \"&lbarr;\"], [0, \"&bkarow;\"], [0, \"&lBarr;\"], [0, \"&dbkarow;\"], [0, \"&drbkarow;\"], [0, \"&DDotrahd;\"], [0, \"&UpArrowBar;\"], [0, \"&DownArrowBar;\"], [2, \"&Rarrtl;\"], [2, \"&latail;\"], [0, \"&ratail;\"], [0, \"&lAtail;\"], [0, \"&rAtail;\"], [0, \"&larrfs;\"], [0, \"&rarrfs;\"], [0, \"&larrbfs;\"], [0, \"&rarrbfs;\"], [2, \"&nwarhk;\"], [0, \"&nearhk;\"], [0, \"&hksearow;\"], [0, \"&hkswarow;\"], [0, \"&nwnear;\"], [0, \"&nesear;\"], [0, \"&seswar;\"], [0, \"&swnwar;\"], [8, {\n  v: \"&rarrc;\",\n  n: 824,\n  o: \"&nrarrc;\"\n}], [1, \"&cudarrr;\"], [0, \"&ldca;\"], [0, \"&rdca;\"], [0, \"&cudarrl;\"], [0, \"&larrpl;\"], [2, \"&curarrm;\"], [0, \"&cularrp;\"], [7, \"&rarrpl;\"], [2, \"&harrcir;\"], [0, \"&Uarrocir;\"], [0, \"&lurdshar;\"], [0, \"&ldrushar;\"], [2, \"&LeftRightVector;\"], [0, \"&RightUpDownVector;\"], [0, \"&DownLeftRightVector;\"], [0, \"&LeftUpDownVector;\"], [0, \"&LeftVectorBar;\"], [0, \"&RightVectorBar;\"], [0, \"&RightUpVectorBar;\"], [0, \"&RightDownVectorBar;\"], [0, \"&DownLeftVectorBar;\"], [0, \"&DownRightVectorBar;\"], [0, \"&LeftUpVectorBar;\"], [0, \"&LeftDownVectorBar;\"], [0, \"&LeftTeeVector;\"], [0, \"&RightTeeVector;\"], [0, \"&RightUpTeeVector;\"], [0, \"&RightDownTeeVector;\"], [0, \"&DownLeftTeeVector;\"], [0, \"&DownRightTeeVector;\"], [0, \"&LeftUpTeeVector;\"], [0, \"&LeftDownTeeVector;\"], [0, \"&lHar;\"], [0, \"&uHar;\"], [0, \"&rHar;\"], [0, \"&dHar;\"], [0, \"&luruhar;\"], [0, \"&ldrdhar;\"], [0, \"&ruluhar;\"], [0, \"&rdldhar;\"], [0, \"&lharul;\"], [0, \"&llhard;\"], [0, \"&rharul;\"], [0, \"&lrhard;\"], [0, \"&udhar;\"], [0, \"&duhar;\"], [0, \"&RoundImplies;\"], [0, \"&erarr;\"], [0, \"&simrarr;\"], [0, \"&larrsim;\"], [0, \"&rarrsim;\"], [0, \"&rarrap;\"], [0, \"&ltlarr;\"], [1, \"&gtrarr;\"], [0, \"&subrarr;\"], [1, \"&suplarr;\"], [0, \"&lfisht;\"], [0, \"&rfisht;\"], [0, \"&ufisht;\"], [0, \"&dfisht;\"], [5, \"&lopar;\"], [0, \"&ropar;\"], [4, \"&lbrke;\"], [0, \"&rbrke;\"], [0, \"&lbrkslu;\"], [0, \"&rbrksld;\"], [0, \"&lbrksld;\"], [0, \"&rbrkslu;\"], [0, \"&langd;\"], [0, \"&rangd;\"], [0, \"&lparlt;\"], [0, \"&rpargt;\"], [0, \"&gtlPar;\"], [0, \"&ltrPar;\"], [3, \"&vzigzag;\"], [1, \"&vangrt;\"], [0, \"&angrtvbd;\"], [6, \"&ange;\"], [0, \"&range;\"], [0, \"&dwangle;\"], [0, \"&uwangle;\"], [0, \"&angmsdaa;\"], [0, \"&angmsdab;\"], [0, \"&angmsdac;\"], [0, \"&angmsdad;\"], [0, \"&angmsdae;\"], [0, \"&angmsdaf;\"], [0, \"&angmsdag;\"], [0, \"&angmsdah;\"], [0, \"&bemptyv;\"], [0, \"&demptyv;\"], [0, \"&cemptyv;\"], [0, \"&raemptyv;\"], [0, \"&laemptyv;\"], [0, \"&ohbar;\"], [0, \"&omid;\"], [0, \"&opar;\"], [1, \"&operp;\"], [1, \"&olcross;\"], [0, \"&odsold;\"], [1, \"&olcir;\"], [0, \"&ofcir;\"], [0, \"&olt;\"], [0, \"&ogt;\"], [0, \"&cirscir;\"], [0, \"&cirE;\"], [0, \"&solb;\"], [0, \"&bsolb;\"], [3, \"&boxbox;\"], [3, \"&trisb;\"], [0, \"&rtriltri;\"], [0, {\n  v: \"&LeftTriangleBar;\",\n  n: 824,\n  o: \"&NotLeftTriangleBar;\"\n}], [0, {\n  v: \"&RightTriangleBar;\",\n  n: 824,\n  o: \"&NotRightTriangleBar;\"\n}], [11, \"&iinfin;\"], [0, \"&infintie;\"], [0, \"&nvinfin;\"], [4, \"&eparsl;\"], [0, \"&smeparsl;\"], [0, \"&eqvparsl;\"], [5, \"&blacklozenge;\"], [8, \"&RuleDelayed;\"], [1, \"&dsol;\"], [9, \"&bigodot;\"], [0, \"&bigoplus;\"], [0, \"&bigotimes;\"], [1, \"&biguplus;\"], [1, \"&bigsqcup;\"], [5, \"&iiiint;\"], [0, \"&fpartint;\"], [2, \"&cirfnint;\"], [0, \"&awint;\"], [0, \"&rppolint;\"], [0, \"&scpolint;\"], [0, \"&npolint;\"], [0, \"&pointint;\"], [0, \"&quatint;\"], [0, \"&intlarhk;\"], [10, \"&pluscir;\"], [0, \"&plusacir;\"], [0, \"&simplus;\"], [0, \"&plusdu;\"], [0, \"&plussim;\"], [0, \"&plustwo;\"], [1, \"&mcomma;\"], [0, \"&minusdu;\"], [2, \"&loplus;\"], [0, \"&roplus;\"], [0, \"&Cross;\"], [0, \"&timesd;\"], [0, \"&timesbar;\"], [1, \"&smashp;\"], [0, \"&lotimes;\"], [0, \"&rotimes;\"], [0, \"&otimesas;\"], [0, \"&Otimes;\"], [0, \"&odiv;\"], [0, \"&triplus;\"], [0, \"&triminus;\"], [0, \"&tritime;\"], [0, \"&intprod;\"], [2, \"&amalg;\"], [0, \"&capdot;\"], [1, \"&ncup;\"], [0, \"&ncap;\"], [0, \"&capand;\"], [0, \"&cupor;\"], [0, \"&cupcap;\"], [0, \"&capcup;\"], [0, \"&cupbrcap;\"], [0, \"&capbrcup;\"], [0, \"&cupcup;\"], [0, \"&capcap;\"], [0, \"&ccups;\"], [0, \"&ccaps;\"], [2, \"&ccupssm;\"], [2, \"&And;\"], [0, \"&Or;\"], [0, \"&andand;\"], [0, \"&oror;\"], [0, \"&orslope;\"], [0, \"&andslope;\"], [1, \"&andv;\"], [0, \"&orv;\"], [0, \"&andd;\"], [0, \"&ord;\"], [1, \"&wedbar;\"], [6, \"&sdote;\"], [3, \"&simdot;\"], [2, {\n  v: \"&congdot;\",\n  n: 824,\n  o: \"&ncongdot;\"\n}], [0, \"&easter;\"], [0, \"&apacir;\"], [0, {\n  v: \"&apE;\",\n  n: 824,\n  o: \"&napE;\"\n}], [0, \"&eplus;\"], [0, \"&pluse;\"], [0, \"&Esim;\"], [0, \"&Colone;\"], [0, \"&Equal;\"], [1, \"&ddotseq;\"], [0, \"&equivDD;\"], [0, \"&ltcir;\"], [0, \"&gtcir;\"], [0, \"&ltquest;\"], [0, \"&gtquest;\"], [0, {\n  v: \"&leqslant;\",\n  n: 824,\n  o: \"&nleqslant;\"\n}], [0, {\n  v: \"&geqslant;\",\n  n: 824,\n  o: \"&ngeqslant;\"\n}], [0, \"&lesdot;\"], [0, \"&gesdot;\"], [0, \"&lesdoto;\"], [0, \"&gesdoto;\"], [0, \"&lesdotor;\"], [0, \"&gesdotol;\"], [0, \"&lap;\"], [0, \"&gap;\"], [0, \"&lne;\"], [0, \"&gne;\"], [0, \"&lnap;\"], [0, \"&gnap;\"], [0, \"&lEg;\"], [0, \"&gEl;\"], [0, \"&lsime;\"], [0, \"&gsime;\"], [0, \"&lsimg;\"], [0, \"&gsiml;\"], [0, \"&lgE;\"], [0, \"&glE;\"], [0, \"&lesges;\"], [0, \"&gesles;\"], [0, \"&els;\"], [0, \"&egs;\"], [0, \"&elsdot;\"], [0, \"&egsdot;\"], [0, \"&el;\"], [0, \"&eg;\"], [2, \"&siml;\"], [0, \"&simg;\"], [0, \"&simlE;\"], [0, \"&simgE;\"], [0, {\n  v: \"&LessLess;\",\n  n: 824,\n  o: \"&NotNestedLessLess;\"\n}], [0, {\n  v: \"&GreaterGreater;\",\n  n: 824,\n  o: \"&NotNestedGreaterGreater;\"\n}], [1, \"&glj;\"], [0, \"&gla;\"], [0, \"&ltcc;\"], [0, \"&gtcc;\"], [0, \"&lescc;\"], [0, \"&gescc;\"], [0, \"&smt;\"], [0, \"&lat;\"], [0, {\n  v: \"&smte;\",\n  n: 65024,\n  o: \"&smtes;\"\n}], [0, {\n  v: \"&late;\",\n  n: 65024,\n  o: \"&lates;\"\n}], [0, \"&bumpE;\"], [0, {\n  v: \"&PrecedesEqual;\",\n  n: 824,\n  o: \"&NotPrecedesEqual;\"\n}], [0, {\n  v: \"&sce;\",\n  n: 824,\n  o: \"&NotSucceedsEqual;\"\n}], [2, \"&prE;\"], [0, \"&scE;\"], [0, \"&precneqq;\"], [0, \"&scnE;\"], [0, \"&prap;\"], [0, \"&scap;\"], [0, \"&precnapprox;\"], [0, \"&scnap;\"], [0, \"&Pr;\"], [0, \"&Sc;\"], [0, \"&subdot;\"], [0, \"&supdot;\"], [0, \"&subplus;\"], [0, \"&supplus;\"], [0, \"&submult;\"], [0, \"&supmult;\"], [0, \"&subedot;\"], [0, \"&supedot;\"], [0, {\n  v: \"&subE;\",\n  n: 824,\n  o: \"&nsubE;\"\n}], [0, {\n  v: \"&supE;\",\n  n: 824,\n  o: \"&nsupE;\"\n}], [0, \"&subsim;\"], [0, \"&supsim;\"], [2, {\n  v: \"&subnE;\",\n  n: 65024,\n  o: \"&varsubsetneqq;\"\n}], [0, {\n  v: \"&supnE;\",\n  n: 65024,\n  o: \"&varsupsetneqq;\"\n}], [2, \"&csub;\"], [0, \"&csup;\"], [0, \"&csube;\"], [0, \"&csupe;\"], [0, \"&subsup;\"], [0, \"&supsub;\"], [0, \"&subsub;\"], [0, \"&supsup;\"], [0, \"&suphsub;\"], [0, \"&supdsub;\"], [0, \"&forkv;\"], [0, \"&topfork;\"], [0, \"&mlcp;\"], [8, \"&Dashv;\"], [1, \"&Vdashl;\"], [0, \"&Barv;\"], [0, \"&vBar;\"], [0, \"&vBarv;\"], [1, \"&Vbar;\"], [0, \"&Not;\"], [0, \"&bNot;\"], [0, \"&rnmid;\"], [0, \"&cirmid;\"], [0, \"&midcir;\"], [0, \"&topcir;\"], [0, \"&nhpar;\"], [0, \"&parsim;\"], [9, {\n  v: \"&parsl;\",\n  n: 8421,\n  o: \"&nparsl;\"\n}], [44343, {\n  n: new Map(/* #__PURE__ */restoreDiff([[56476, \"&Ascr;\"], [1, \"&Cscr;\"], [0, \"&Dscr;\"], [2, \"&Gscr;\"], [2, \"&Jscr;\"], [0, \"&Kscr;\"], [2, \"&Nscr;\"], [0, \"&Oscr;\"], [0, \"&Pscr;\"], [0, \"&Qscr;\"], [1, \"&Sscr;\"], [0, \"&Tscr;\"], [0, \"&Uscr;\"], [0, \"&Vscr;\"], [0, \"&Wscr;\"], [0, \"&Xscr;\"], [0, \"&Yscr;\"], [0, \"&Zscr;\"], [0, \"&ascr;\"], [0, \"&bscr;\"], [0, \"&cscr;\"], [0, \"&dscr;\"], [1, \"&fscr;\"], [1, \"&hscr;\"], [0, \"&iscr;\"], [0, \"&jscr;\"], [0, \"&kscr;\"], [0, \"&lscr;\"], [0, \"&mscr;\"], [0, \"&nscr;\"], [1, \"&pscr;\"], [0, \"&qscr;\"], [0, \"&rscr;\"], [0, \"&sscr;\"], [0, \"&tscr;\"], [0, \"&uscr;\"], [0, \"&vscr;\"], [0, \"&wscr;\"], [0, \"&xscr;\"], [0, \"&yscr;\"], [0, \"&zscr;\"], [52, \"&Afr;\"], [0, \"&Bfr;\"], [1, \"&Dfr;\"], [0, \"&Efr;\"], [0, \"&Ffr;\"], [0, \"&Gfr;\"], [2, \"&Jfr;\"], [0, \"&Kfr;\"], [0, \"&Lfr;\"], [0, \"&Mfr;\"], [0, \"&Nfr;\"], [0, \"&Ofr;\"], [0, \"&Pfr;\"], [0, \"&Qfr;\"], [1, \"&Sfr;\"], [0, \"&Tfr;\"], [0, \"&Ufr;\"], [0, \"&Vfr;\"], [0, \"&Wfr;\"], [0, \"&Xfr;\"], [0, \"&Yfr;\"], [1, \"&afr;\"], [0, \"&bfr;\"], [0, \"&cfr;\"], [0, \"&dfr;\"], [0, \"&efr;\"], [0, \"&ffr;\"], [0, \"&gfr;\"], [0, \"&hfr;\"], [0, \"&ifr;\"], [0, \"&jfr;\"], [0, \"&kfr;\"], [0, \"&lfr;\"], [0, \"&mfr;\"], [0, \"&nfr;\"], [0, \"&ofr;\"], [0, \"&pfr;\"], [0, \"&qfr;\"], [0, \"&rfr;\"], [0, \"&sfr;\"], [0, \"&tfr;\"], [0, \"&ufr;\"], [0, \"&vfr;\"], [0, \"&wfr;\"], [0, \"&xfr;\"], [0, \"&yfr;\"], [0, \"&zfr;\"], [0, \"&Aopf;\"], [0, \"&Bopf;\"], [1, \"&Dopf;\"], [0, \"&Eopf;\"], [0, \"&Fopf;\"], [0, \"&Gopf;\"], [1, \"&Iopf;\"], [0, \"&Jopf;\"], [0, \"&Kopf;\"], [0, \"&Lopf;\"], [0, \"&Mopf;\"], [1, \"&Oopf;\"], [3, \"&Sopf;\"], [0, \"&Topf;\"], [0, \"&Uopf;\"], [0, \"&Vopf;\"], [0, \"&Wopf;\"], [0, \"&Xopf;\"], [0, \"&Yopf;\"], [1, \"&aopf;\"], [0, \"&bopf;\"], [0, \"&copf;\"], [0, \"&dopf;\"], [0, \"&eopf;\"], [0, \"&fopf;\"], [0, \"&gopf;\"], [0, \"&hopf;\"], [0, \"&iopf;\"], [0, \"&jopf;\"], [0, \"&kopf;\"], [0, \"&lopf;\"], [0, \"&mopf;\"], [0, \"&nopf;\"], [0, \"&oopf;\"], [0, \"&popf;\"], [0, \"&qopf;\"], [0, \"&ropf;\"], [0, \"&sopf;\"], [0, \"&topf;\"], [0, \"&uopf;\"], [0, \"&vopf;\"], [0, \"&wopf;\"], [0, \"&xopf;\"], [0, \"&yopf;\"], [0, \"&zopf;\"]]))\n}], [8906, \"&fflig;\"], [0, \"&filig;\"], [0, \"&fllig;\"], [0, \"&ffilig;\"], [0, \"&ffllig;\"]]));\nconst xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([[34, \"&quot;\"], [38, \"&amp;\"], [39, \"&apos;\"], [60, \"&lt;\"], [62, \"&gt;\"]]);\n// For compatibility with node < 4, we wrap `codePointAt`\nconst getCodePoint =\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null ? (str, index) => str.codePointAt(index) :\n// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n(c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800 ? (c.charCodeAt(index) - 0xd800) * 0x400 + c.charCodeAt(index + 1) - 0xdc00 + 0x10000 : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nfunction encodeXML(str) {\n  let ret = \"\";\n  let lastIdx = 0;\n  let match;\n  while ((match = xmlReplacer.exec(str)) !== null) {\n    const i = match.index;\n    const char = str.charCodeAt(i);\n    const next = xmlCodeMap.get(char);\n    if (next !== undefined) {\n      ret += str.substring(lastIdx, i) + next;\n      lastIdx = i + 1;\n    } else {\n      ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n      // Increase by 1 if we have a surrogate pair\n      lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n    }\n  }\n  return ret + str.substr(lastIdx);\n}\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n  return function escape(data) {\n    let match;\n    let lastIdx = 0;\n    let result = \"\";\n    while (match = regex.exec(data)) {\n      if (lastIdx !== match.index) {\n        result += data.substring(lastIdx, match.index);\n      }\n      // We know that this character will be in the map.\n      result += map.get(match[0].charCodeAt(0));\n      // Every match will be of length 1\n      lastIdx = match.index + 1;\n    }\n    return result + data.substring(lastIdx);\n  };\n}\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([[34, \"&quot;\"], [38, \"&amp;\"], [160, \"&nbsp;\"]]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([[38, \"&amp;\"], [60, \"&lt;\"], [62, \"&gt;\"], [160, \"&nbsp;\"]]));\n\n/** The level of entities to support. */\nvar EntityLevel;\n(function (EntityLevel) {\n  /** Support only XML entities. */\n  EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n  /** Support HTML entities, which are a superset of XML entities. */\n  EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\nvar EncodingMode;\n(function (EncodingMode) {\n  /**\n   * The output is UTF-8 encoded. Only characters that need escaping within\n   * XML will be escaped.\n   */\n  EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n  /**\n   * The output consists only of ASCII characters. Characters that need\n   * escaping within HTML, and characters that aren't ASCII characters will\n   * be escaped.\n   */\n  EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n  /**\n   * Encode all characters that have an equivalent entity, as well as all\n   * characters that are not ASCII characters.\n   */\n  EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n  /**\n   * Encode all characters that have to be escaped in HTML attributes,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n  /**\n   * Encode all characters that have to be escaped in HTML text,\n   * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n   */\n  EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\nconst elementNames = new Map([\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"clipPath\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"foreignObject\", \"glyphRef\", \"linearGradient\", \"radialGradient\", \"textPath\"].map(val => [val.toLowerCase(), val]));\nconst attributeNames = new Map([\"definitionURL\", \"attributeName\", \"attributeType\", \"baseFrequency\", \"baseProfile\", \"calcMode\", \"clipPathUnits\", \"diffuseConstant\", \"edgeMode\", \"filterUnits\", \"glyphRef\", \"gradientTransform\", \"gradientUnits\", \"kernelMatrix\", \"kernelUnitLength\", \"keyPoints\", \"keySplines\", \"keyTimes\", \"lengthAdjust\", \"limitingConeAngle\", \"markerHeight\", \"markerUnits\", \"markerWidth\", \"maskContentUnits\", \"maskUnits\", \"numOctaves\", \"pathLength\", \"patternContentUnits\", \"patternTransform\", \"patternUnits\", \"pointsAtX\", \"pointsAtY\", \"pointsAtZ\", \"preserveAlpha\", \"preserveAspectRatio\", \"primitiveUnits\", \"refX\", \"refY\", \"repeatCount\", \"repeatDur\", \"requiredExtensions\", \"requiredFeatures\", \"specularConstant\", \"specularExponent\", \"spreadMethod\", \"startOffset\", \"stdDeviation\", \"stitchTiles\", \"surfaceScale\", \"systemLanguage\", \"tableValues\", \"targetX\", \"targetY\", \"textLength\", \"viewBox\", \"viewTarget\", \"xChannelSelector\", \"yChannelSelector\", \"zoomAndPan\"].map(val => [val.toLowerCase(), val]));\n\n/*\n * Module dependencies\n */\nconst unencodedElements = new Set([\"style\", \"script\", \"xmp\", \"iframe\", \"noembed\", \"noframes\", \"plaintext\", \"noscript\"]);\nfunction replaceQuotes(value) {\n  return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n  var _a;\n  if (!attributes) return;\n  const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false ? replaceQuotes : opts.xmlMode || opts.encodeEntities !== \"utf8\" ? encodeXML : escapeAttribute;\n  return Object.keys(attributes).map(key => {\n    var _a, _b;\n    const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n    if (opts.xmlMode === \"foreign\") {\n      /* Fix up mixed-case attribute names */\n      key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n    }\n    if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n      return key;\n    }\n    return `${key}=\"${encode(value)}\"`;\n  }).join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nfunction render(node, options = {}) {\n  const nodes = \"length\" in node ? node : [node];\n  let output = \"\";\n  for (let i = 0; i < nodes.length; i++) {\n    output += renderNode(nodes[i], options);\n  }\n  return output;\n}\nfunction renderNode(node, options) {\n  switch (node.type) {\n    case Root:\n      return render(node.children, options);\n    // @ts-expect-error We don't use `Doctype` yet\n    case Doctype:\n    case Directive:\n      return renderDirective(node);\n    case Comment$1:\n      return renderComment(node);\n    case CDATA$1:\n      return renderCdata(node);\n    case Script:\n    case Style:\n    case Tag:\n      return renderTag(node, options);\n    case Text$1:\n      return renderText(node, options);\n  }\n}\nconst foreignModeIntegrationPoints = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignObject\", \"desc\", \"title\"]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n  var _a;\n  // Handle SVG / MathML in HTML\n  if (opts.xmlMode === \"foreign\") {\n    /* Fix up mixed-case element names */\n    elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n    /* Exit foreign mode at integration points */\n    if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {\n      opts = {\n        ...opts,\n        xmlMode: false\n      };\n    }\n  }\n  if (!opts.xmlMode && foreignElements.has(elem.name)) {\n    opts = {\n      ...opts,\n      xmlMode: \"foreign\"\n    };\n  }\n  let tag = `<${elem.name}`;\n  const attribs = formatAttributes(elem.attribs, opts);\n  if (attribs) {\n    tag += ` ${attribs}`;\n  }\n  if (elem.children.length === 0 && (opts.xmlMode ?\n  // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n  opts.selfClosingTags !== false :\n  // User explicitly asked for self-closing tags, even in HTML mode\n  opts.selfClosingTags && singleTag.has(elem.name))) {\n    if (!opts.xmlMode) tag += \" \";\n    tag += \"/>\";\n  } else {\n    tag += \">\";\n    if (elem.children.length > 0) {\n      tag += render(elem.children, opts);\n    }\n    if (opts.xmlMode || !singleTag.has(elem.name)) {\n      tag += `</${elem.name}>`;\n    }\n  }\n  return tag;\n}\nfunction renderDirective(elem) {\n  return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n  var _a;\n  let data = elem.data || \"\";\n  // If entities weren't decoded, no need to encode them back\n  if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))) {\n    data = opts.xmlMode || opts.encodeEntities !== \"utf8\" ? encodeXML(data) : escapeText(data);\n  }\n  return data;\n}\nfunction renderCdata(elem) {\n  return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n  return `<!--${elem.data}-->`;\n}\n\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n  return render(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n  return hasChildren(node) ? node.children.map(node => getOuterHTML(node, options)).join(\"\") : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if (isTag(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if (isCDATA(node)) return getText(node.children);\n  if (isText(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if (hasChildren(node) && !isComment(node)) {\n    return textContent(node.children);\n  }\n  if (isText(node)) return node.data;\n  return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n  if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n    return innerText(node.children);\n  }\n  if (isText(node)) return node.data;\n  return \"\";\n}\n\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n  return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nfunction getParent(elem) {\n  return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nfunction getSiblings(elem) {\n  const parent = getParent(elem);\n  if (parent != null) return getChildren(parent);\n  const siblings = [elem];\n  let {\n    prev,\n    next\n  } = elem;\n  while (prev != null) {\n    siblings.unshift(prev);\n    ({\n      prev\n    } = prev);\n  }\n  while (next != null) {\n    siblings.push(next);\n    ({\n      next\n    } = next);\n  }\n  return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n  var _a;\n  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n  return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nfunction nextElementSibling(elem) {\n  let {\n    next\n  } = elem;\n  while (next !== null && !isTag(next)) ({\n    next\n  } = next);\n  return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nfunction prevElementSibling(elem) {\n  let {\n    prev\n  } = elem;\n  while (prev !== null && !isTag(prev)) ({\n    prev\n  } = prev);\n  return prev;\n}\n\n/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nfunction removeElement(elem) {\n  if (elem.prev) elem.prev.next = elem.next;\n  if (elem.next) elem.next.prev = elem.prev;\n  if (elem.parent) {\n    const childs = elem.parent.children;\n    const childsIndex = childs.lastIndexOf(elem);\n    if (childsIndex >= 0) {\n      childs.splice(childsIndex, 1);\n    }\n  }\n  elem.next = null;\n  elem.prev = null;\n  elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nfunction replaceElement(elem, replacement) {\n  const prev = replacement.prev = elem.prev;\n  if (prev) {\n    prev.next = replacement;\n  }\n  const next = replacement.next = elem.next;\n  if (next) {\n    next.prev = replacement;\n  }\n  const parent = replacement.parent = elem.parent;\n  if (parent) {\n    const childs = parent.children;\n    childs[childs.lastIndexOf(elem)] = replacement;\n    elem.parent = null;\n  }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nfunction appendChild(parent, child) {\n  removeElement(child);\n  child.next = null;\n  child.parent = parent;\n  if (parent.children.push(child) > 1) {\n    const sibling = parent.children[parent.children.length - 2];\n    sibling.next = child;\n    child.prev = sibling;\n  } else {\n    child.prev = null;\n  }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nfunction append(elem, next) {\n  removeElement(next);\n  const {\n    parent\n  } = elem;\n  const currNext = elem.next;\n  next.next = currNext;\n  next.prev = elem;\n  elem.next = next;\n  next.parent = parent;\n  if (currNext) {\n    currNext.prev = next;\n    if (parent) {\n      const childs = parent.children;\n      childs.splice(childs.lastIndexOf(currNext), 0, next);\n    }\n  } else if (parent) {\n    parent.children.push(next);\n  }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nfunction prependChild(parent, child) {\n  removeElement(child);\n  child.parent = parent;\n  child.prev = null;\n  if (parent.children.unshift(child) !== 1) {\n    const sibling = parent.children[1];\n    sibling.prev = child;\n    child.next = sibling;\n  } else {\n    child.next = null;\n  }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nfunction prepend(elem, prev) {\n  removeElement(prev);\n  const {\n    parent\n  } = elem;\n  if (parent) {\n    const childs = parent.children;\n    childs.splice(childs.indexOf(elem), 0, prev);\n  }\n  if (elem.prev) {\n    elem.prev.next = prev;\n  }\n  prev.parent = parent;\n  prev.prev = elem.prev;\n  prev.next = elem;\n  elem.prev = prev;\n}\n\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction filter(test, node, recurse = true, limit = Infinity) {\n  return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction find(test, nodes, recurse, limit) {\n  const result = [];\n  /** Stack of the arrays we are looking at. */\n  const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n  /** Stack of the indices within the arrays. */\n  const indexStack = [0];\n  for (;;) {\n    // First, check if the current array has any more elements to look at.\n    if (indexStack[0] >= nodeStack[0].length) {\n      // If we have no more arrays to look at, we are done.\n      if (indexStack.length === 1) {\n        return result;\n      }\n      // Otherwise, remove the current array from the stack.\n      nodeStack.shift();\n      indexStack.shift();\n      // Loop back to the start to continue with the next array.\n      continue;\n    }\n    const elem = nodeStack[0][indexStack[0]++];\n    if (test(elem)) {\n      result.push(elem);\n      if (--limit <= 0) return result;\n    }\n    if (recurse && hasChildren(elem) && elem.children.length > 0) {\n      /*\n       * Add the children to the stack. We are depth-first, so this is\n       * the next array we look at.\n       */\n      indexStack.unshift(0);\n      nodeStack.unshift(elem.children);\n    }\n  }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nfunction findOneChild(test, nodes) {\n  return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nfunction findOne(test, nodes, recurse = true) {\n  const searchedNodes = Array.isArray(nodes) ? nodes : [nodes];\n  for (let i = 0; i < searchedNodes.length; i++) {\n    const node = searchedNodes[i];\n    if (isTag(node) && test(node)) {\n      return node;\n    }\n    if (recurse && hasChildren(node) && node.children.length > 0) {\n      const found = findOne(test, node.children, true);\n      if (found) return found;\n    }\n  }\n  return null;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nfunction existsOne(test, nodes) {\n  return (Array.isArray(nodes) ? nodes : [nodes]).some(node => isTag(node) && test(node) || hasChildren(node) && existsOne(test, node.children));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nfunction findAll(test, nodes) {\n  const result = [];\n  const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n  const indexStack = [0];\n  for (;;) {\n    if (indexStack[0] >= nodeStack[0].length) {\n      if (nodeStack.length === 1) {\n        return result;\n      }\n      // Otherwise, remove the current array from the stack.\n      nodeStack.shift();\n      indexStack.shift();\n      // Loop back to the start to continue with the next array.\n      continue;\n    }\n    const elem = nodeStack[0][indexStack[0]++];\n    if (isTag(elem) && test(elem)) result.push(elem);\n    if (hasChildren(elem) && elem.children.length > 0) {\n      indexStack.unshift(0);\n      nodeStack.unshift(elem.children);\n    }\n  }\n}\n\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n  tag_name(name) {\n    if (typeof name === \"function\") {\n      return elem => isTag(elem) && name(elem.name);\n    } else if (name === \"*\") {\n      return isTag;\n    }\n    return elem => isTag(elem) && elem.name === name;\n  },\n  tag_type(type) {\n    if (typeof type === \"function\") {\n      return elem => type(elem.type);\n    }\n    return elem => elem.type === type;\n  },\n  tag_contains(data) {\n    if (typeof data === \"function\") {\n      return elem => isText(elem) && data(elem.data);\n    }\n    return elem => isText(elem) && elem.data === data;\n  }\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n  if (typeof value === \"function\") {\n    return elem => isTag(elem) && value(elem.attribs[attrib]);\n  }\n  return elem => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n  return elem => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n  const funcs = Object.keys(options).map(key => {\n    const value = options[key];\n    return Object.prototype.hasOwnProperty.call(Checks, key) ? Checks[key](value) : getAttribCheck(key, value);\n  });\n  return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n  const test = compileTest(options);\n  return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit = Infinity) {\n  const test = compileTest(options);\n  return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse = true) {\n  if (!Array.isArray(nodes)) nodes = [nodes];\n  return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n  return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `className`.\n *\n * @category Legacy Query Functions\n * @param className Class name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `className`.\n */\nfunction getElementsByClassName(className, nodes, recurse = true, limit = Infinity) {\n  return filter(getAttribCheck(\"class\", className), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n  return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nfunction removeSubsets(nodes) {\n  let idx = nodes.length;\n  /*\n   * Check if each node (or one of its ancestors) is already contained in the\n   * array.\n   */\n  while (--idx >= 0) {\n    const node = nodes[idx];\n    /*\n     * Remove the node if it is not unique.\n     * We are going through the array from the end, so we only\n     * have to check nodes that preceed the node under consideration in the array.\n     */\n    if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n      nodes.splice(idx, 1);\n      continue;\n    }\n    for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n      if (nodes.includes(ancestor)) {\n        nodes.splice(idx, 1);\n        break;\n      }\n    }\n  }\n  return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nvar DocumentPosition;\n(function (DocumentPosition) {\n  DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n  DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n  DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n  DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n  DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nfunction compareDocumentPosition(nodeA, nodeB) {\n  const aParents = [];\n  const bParents = [];\n  if (nodeA === nodeB) {\n    return 0;\n  }\n  let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n  while (current) {\n    aParents.unshift(current);\n    current = current.parent;\n  }\n  current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n  while (current) {\n    bParents.unshift(current);\n    current = current.parent;\n  }\n  const maxIdx = Math.min(aParents.length, bParents.length);\n  let idx = 0;\n  while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n    idx++;\n  }\n  if (idx === 0) {\n    return DocumentPosition.DISCONNECTED;\n  }\n  const sharedParent = aParents[idx - 1];\n  const siblings = sharedParent.children;\n  const aSibling = aParents[idx];\n  const bSibling = bParents[idx];\n  if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n    if (sharedParent === nodeB) {\n      return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n    }\n    return DocumentPosition.FOLLOWING;\n  }\n  if (sharedParent === nodeA) {\n    return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n  }\n  return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nfunction uniqueSort(nodes) {\n  nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n  nodes.sort((a, b) => {\n    const relative = compareDocumentPosition(a, b);\n    if (relative & DocumentPosition.PRECEDING) {\n      return -1;\n    } else if (relative & DocumentPosition.FOLLOWING) {\n      return 1;\n    }\n    return 0;\n  });\n  return nodes;\n}\n\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nfunction getFeed(doc) {\n  const feedRoot = getOneElement(isValidFeed, doc);\n  return !feedRoot ? null : feedRoot.name === \"feed\" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n  var _a;\n  const childs = feedRoot.children;\n  const feed = {\n    type: \"atom\",\n    items: getElementsByTagName(\"entry\", childs).map(item => {\n      var _a;\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"id\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n      if (href) {\n        entry.link = href;\n      }\n      const description = fetch(\"summary\", children) || fetch(\"content\", children);\n      if (description) {\n        entry.description = description;\n      }\n      const pubDate = fetch(\"updated\", children);\n      if (pubDate) {\n        entry.pubDate = new Date(pubDate);\n      }\n      return entry;\n    })\n  };\n  addConditionally(feed, \"id\", \"id\", childs);\n  addConditionally(feed, \"title\", \"title\", childs);\n  const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n  if (href) {\n    feed.link = href;\n  }\n  addConditionally(feed, \"description\", \"subtitle\", childs);\n  const updated = fetch(\"updated\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"email\", childs, true);\n  return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n  var _a, _b;\n  const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n  const feed = {\n    type: feedRoot.name.substr(0, 3),\n    id: \"\",\n    items: getElementsByTagName(\"item\", feedRoot.children).map(item => {\n      const {\n        children\n      } = item;\n      const entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"guid\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      addConditionally(entry, \"link\", \"link\", children);\n      addConditionally(entry, \"description\", \"description\", children);\n      const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n      if (pubDate) entry.pubDate = new Date(pubDate);\n      return entry;\n    })\n  };\n  addConditionally(feed, \"title\", \"title\", childs);\n  addConditionally(feed, \"link\", \"link\", childs);\n  addConditionally(feed, \"description\", \"description\", childs);\n  const updated = fetch(\"lastBuildDate\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n  return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\"fileSize\", \"bitrate\", \"framerate\", \"samplingrate\", \"channels\", \"duration\", \"height\", \"width\"];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n  return getElementsByTagName(\"media:content\", where).map(elem => {\n    const {\n      attribs\n    } = elem;\n    const media = {\n      medium: attribs[\"medium\"],\n      isDefault: !!attribs[\"isDefault\"]\n    };\n    for (const attrib of MEDIA_KEYS_STRING) {\n      if (attribs[attrib]) {\n        media[attrib] = attribs[attrib];\n      }\n    }\n    for (const attrib of MEDIA_KEYS_INT) {\n      if (attribs[attrib]) {\n        media[attrib] = parseInt(attribs[attrib], 10);\n      }\n    }\n    if (attribs[\"expression\"]) {\n      media.expression = attribs[\"expression\"];\n    }\n    return media;\n  });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n  return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n  return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n  const val = fetch(tagName, where, recurse);\n  if (val) obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\nvar DomUtils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get DocumentPosition() {\n    return DocumentPosition;\n  },\n  append: append,\n  appendChild: appendChild,\n  compareDocumentPosition: compareDocumentPosition,\n  existsOne: existsOne,\n  filter: filter,\n  find: find,\n  findAll: findAll,\n  findOne: findOne,\n  findOneChild: findOneChild,\n  getAttributeValue: getAttributeValue,\n  getChildren: getChildren,\n  getElementById: getElementById,\n  getElements: getElements,\n  getElementsByClassName: getElementsByClassName,\n  getElementsByTagName: getElementsByTagName,\n  getElementsByTagType: getElementsByTagType,\n  getFeed: getFeed,\n  getInnerHTML: getInnerHTML,\n  getName: getName,\n  getOuterHTML: getOuterHTML,\n  getParent: getParent,\n  getSiblings: getSiblings,\n  getText: getText,\n  hasAttrib: hasAttrib,\n  hasChildren: hasChildren,\n  innerText: innerText,\n  isCDATA: isCDATA,\n  isComment: isComment,\n  isDocument: isDocument,\n  isTag: isTag,\n  isText: isText,\n  nextElementSibling: nextElementSibling,\n  prepend: prepend,\n  prependChild: prependChild,\n  prevElementSibling: prevElementSibling,\n  removeElement: removeElement,\n  removeSubsets: removeSubsets,\n  replaceElement: replaceElement,\n  testElement: testElement,\n  textContent: textContent,\n  uniqueSort: uniqueSort\n});\nvar boolbase$1;\nvar hasRequiredBoolbase;\nfunction requireBoolbase() {\n  if (hasRequiredBoolbase) return boolbase$1;\n  hasRequiredBoolbase = 1;\n  boolbase$1 = {\n    trueFunc: function trueFunc() {\n      return true;\n    },\n    falseFunc: function falseFunc() {\n      return false;\n    }\n  };\n  return boolbase$1;\n}\nvar boolbaseExports = requireBoolbase();\nvar boolbase = /*@__PURE__*/getDefaultExportFromCjs(boolbaseExports);\nvar SelectorType;\n(function (SelectorType) {\n  SelectorType[\"Attribute\"] = \"attribute\";\n  SelectorType[\"Pseudo\"] = \"pseudo\";\n  SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n  SelectorType[\"Tag\"] = \"tag\";\n  SelectorType[\"Universal\"] = \"universal\";\n  // Traversals\n  SelectorType[\"Adjacent\"] = \"adjacent\";\n  SelectorType[\"Child\"] = \"child\";\n  SelectorType[\"Descendant\"] = \"descendant\";\n  SelectorType[\"Parent\"] = \"parent\";\n  SelectorType[\"Sibling\"] = \"sibling\";\n  SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\nvar AttributeAction;\n(function (AttributeAction) {\n  AttributeAction[\"Any\"] = \"any\";\n  AttributeAction[\"Element\"] = \"element\";\n  AttributeAction[\"End\"] = \"end\";\n  AttributeAction[\"Equals\"] = \"equals\";\n  AttributeAction[\"Exists\"] = \"exists\";\n  AttributeAction[\"Hyphen\"] = \"hyphen\";\n  AttributeAction[\"Not\"] = \"not\";\n  AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([[126 /* Tilde */, AttributeAction.Element], [94 /* Circumflex */, AttributeAction.Start], [36 /* Dollar */, AttributeAction.End], [42 /* Asterisk */, AttributeAction.Any], [33 /* ExclamationMark */, AttributeAction.Not], [124 /* Pipe */, AttributeAction.Hyphen]]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\"has\", \"not\", \"matches\", \"is\", \"where\", \"host\", \"host-context\"]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nfunction isTraversal$1(selector) {\n  switch (selector.type) {\n    case SelectorType.Adjacent:\n    case SelectorType.Child:\n    case SelectorType.Descendant:\n    case SelectorType.Parent:\n    case SelectorType.Sibling:\n    case SelectorType.ColumnCombinator:\n      return true;\n    default:\n      return false;\n  }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n  const high = parseInt(escaped, 16) - 0x10000;\n  // NaN means non-codepoint\n  return high !== high || escapedWhitespace ? escaped : high < 0 ?\n  // BMP codepoint\n  String.fromCharCode(high + 0x10000) :\n  // Supplemental Plane codepoint (surrogate pair)\n  String.fromCharCode(high >> 10 | 0xd800, high & 0x3ff | 0xdc00);\n}\nfunction unescapeCSS(str) {\n  return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n  return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace$1(c) {\n  return c === 32 /* Space */ || c === 9 /* Tab */ || c === 10 /* NewLine */ || c === 12 /* FormFeed */ || c === 13 /* CarriageReturn */;\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nfunction parse$1(selector) {\n  const subselects = [];\n  const endIndex = parseSelector(subselects, `${selector}`, 0);\n  if (endIndex < selector.length) {\n    throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n  }\n  return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n  let tokens = [];\n  function getName(offset) {\n    const match = selector.slice(selectorIndex + offset).match(reName);\n    if (!match) {\n      throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n    }\n    const [name] = match;\n    selectorIndex += offset + name.length;\n    return unescapeCSS(name);\n  }\n  function stripWhitespace(offset) {\n    selectorIndex += offset;\n    while (selectorIndex < selector.length && isWhitespace$1(selector.charCodeAt(selectorIndex))) {\n      selectorIndex++;\n    }\n  }\n  function readValueWithParenthesis() {\n    selectorIndex += 1;\n    const start = selectorIndex;\n    let counter = 1;\n    for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n      if (selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */ && !isEscaped(selectorIndex)) {\n        counter++;\n      } else if (selector.charCodeAt(selectorIndex) === 41 /* RightParenthesis */ && !isEscaped(selectorIndex)) {\n        counter--;\n      }\n    }\n    if (counter) {\n      throw new Error(\"Parenthesis not matched\");\n    }\n    return unescapeCSS(selector.slice(start, selectorIndex - 1));\n  }\n  function isEscaped(pos) {\n    let slashCount = 0;\n    while (selector.charCodeAt(--pos) === 92 /* BackSlash */) slashCount++;\n    return (slashCount & 1) === 1;\n  }\n  function ensureNotTraversal() {\n    if (tokens.length > 0 && isTraversal$1(tokens[tokens.length - 1])) {\n      throw new Error(\"Did not expect successive traversals.\");\n    }\n  }\n  function addTraversal(type) {\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === SelectorType.Descendant) {\n      tokens[tokens.length - 1].type = type;\n      return;\n    }\n    ensureNotTraversal();\n    tokens.push({\n      type\n    });\n  }\n  function addSpecialAttribute(name, action) {\n    tokens.push({\n      type: SelectorType.Attribute,\n      name,\n      action,\n      value: getName(1),\n      namespace: null,\n      ignoreCase: \"quirks\"\n    });\n  }\n  /**\n   * We have finished parsing the current part of the selector.\n   *\n   * Remove descendant tokens at the end if they exist,\n   * and return the last index, so that parsing can be\n   * picked up from here.\n   */\n  function finalizeSubselector() {\n    if (tokens.length && tokens[tokens.length - 1].type === SelectorType.Descendant) {\n      tokens.pop();\n    }\n    if (tokens.length === 0) {\n      throw new Error(\"Empty sub-selector\");\n    }\n    subselects.push(tokens);\n  }\n  stripWhitespace(0);\n  if (selector.length === selectorIndex) {\n    return selectorIndex;\n  }\n  loop: while (selectorIndex < selector.length) {\n    const firstChar = selector.charCodeAt(selectorIndex);\n    switch (firstChar) {\n      // Whitespace\n      case 32 /* Space */:\n      case 9 /* Tab */:\n      case 10 /* NewLine */:\n      case 12 /* FormFeed */:\n      case 13 /* CarriageReturn */:\n        {\n          if (tokens.length === 0 || tokens[0].type !== SelectorType.Descendant) {\n            ensureNotTraversal();\n            tokens.push({\n              type: SelectorType.Descendant\n            });\n          }\n          stripWhitespace(1);\n          break;\n        }\n      // Traversals\n      case 62 /* GreaterThan */:\n        {\n          addTraversal(SelectorType.Child);\n          stripWhitespace(1);\n          break;\n        }\n      case 60 /* LessThan */:\n        {\n          addTraversal(SelectorType.Parent);\n          stripWhitespace(1);\n          break;\n        }\n      case 126 /* Tilde */:\n        {\n          addTraversal(SelectorType.Sibling);\n          stripWhitespace(1);\n          break;\n        }\n      case 43 /* Plus */:\n        {\n          addTraversal(SelectorType.Adjacent);\n          stripWhitespace(1);\n          break;\n        }\n      // Special attribute selectors: .class, #id\n      case 46 /* Period */:\n        {\n          addSpecialAttribute(\"class\", AttributeAction.Element);\n          break;\n        }\n      case 35 /* Hash */:\n        {\n          addSpecialAttribute(\"id\", AttributeAction.Equals);\n          break;\n        }\n      case 91 /* LeftSquareBracket */:\n        {\n          stripWhitespace(1);\n          // Determine attribute name and namespace\n          let name;\n          let namespace = null;\n          if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n            // Equivalent to no namespace\n            name = getName(1);\n          } else if (selector.startsWith(\"*|\", selectorIndex)) {\n            namespace = \"*\";\n            name = getName(2);\n          } else {\n            name = getName(0);\n            if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ && selector.charCodeAt(selectorIndex + 1) !== 61 /* Equal */) {\n              namespace = name;\n              name = getName(1);\n            }\n          }\n          stripWhitespace(0);\n          // Determine comparison operation\n          let action = AttributeAction.Exists;\n          const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n          if (possibleAction) {\n            action = possibleAction;\n            if (selector.charCodeAt(selectorIndex + 1) !== 61 /* Equal */) {\n              throw new Error(\"Expected `=`\");\n            }\n            stripWhitespace(2);\n          } else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n            action = AttributeAction.Equals;\n            stripWhitespace(1);\n          }\n          // Determine value\n          let value = \"\";\n          let ignoreCase = null;\n          if (action !== \"exists\") {\n            if (isQuote(selector.charCodeAt(selectorIndex))) {\n              const quote = selector.charCodeAt(selectorIndex);\n              let sectionEnd = selectorIndex + 1;\n              while (sectionEnd < selector.length && (selector.charCodeAt(sectionEnd) !== quote || isEscaped(sectionEnd))) {\n                sectionEnd += 1;\n              }\n              if (selector.charCodeAt(sectionEnd) !== quote) {\n                throw new Error(\"Attribute value didn't end\");\n              }\n              value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n              selectorIndex = sectionEnd + 1;\n            } else {\n              const valueStart = selectorIndex;\n              while (selectorIndex < selector.length && (!isWhitespace$1(selector.charCodeAt(selectorIndex)) && selector.charCodeAt(selectorIndex) !== 93 /* RightSquareBracket */ || isEscaped(selectorIndex))) {\n                selectorIndex += 1;\n              }\n              value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n            }\n            stripWhitespace(0);\n            // See if we have a force ignore flag\n            const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n            // If the forceIgnore flag is set (either `i` or `s`), use that value\n            if (forceIgnore === 115 /* LowerS */) {\n              ignoreCase = false;\n              stripWhitespace(1);\n            } else if (forceIgnore === 105 /* LowerI */) {\n              ignoreCase = true;\n              stripWhitespace(1);\n            }\n          }\n          if (selector.charCodeAt(selectorIndex) !== 93 /* RightSquareBracket */) {\n            throw new Error(\"Attribute selector didn't terminate\");\n          }\n          selectorIndex += 1;\n          const attributeSelector = {\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value,\n            namespace,\n            ignoreCase\n          };\n          tokens.push(attributeSelector);\n          break;\n        }\n      case 58 /* Colon */:\n        {\n          if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n            tokens.push({\n              type: SelectorType.PseudoElement,\n              name: getName(2).toLowerCase(),\n              data: selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */ ? readValueWithParenthesis() : null\n            });\n            continue;\n          }\n          const name = getName(1).toLowerCase();\n          let data = null;\n          if (selector.charCodeAt(selectorIndex) === 40 /* LeftParenthesis */) {\n            if (unpackPseudos.has(name)) {\n              if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n              }\n              data = [];\n              selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n              if (selector.charCodeAt(selectorIndex) !== 41 /* RightParenthesis */) {\n                throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n              }\n              selectorIndex += 1;\n            } else {\n              data = readValueWithParenthesis();\n              if (stripQuotesFromPseudos.has(name)) {\n                const quot = data.charCodeAt(0);\n                if (quot === data.charCodeAt(data.length - 1) && isQuote(quot)) {\n                  data = data.slice(1, -1);\n                }\n              }\n              data = unescapeCSS(data);\n            }\n          }\n          tokens.push({\n            type: SelectorType.Pseudo,\n            name,\n            data\n          });\n          break;\n        }\n      case 44 /* Comma */:\n        {\n          finalizeSubselector();\n          tokens = [];\n          stripWhitespace(1);\n          break;\n        }\n      default:\n        {\n          if (selector.startsWith(\"/*\", selectorIndex)) {\n            const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n            if (endIndex < 0) {\n              throw new Error(\"Comment was not terminated\");\n            }\n            selectorIndex = endIndex + 2;\n            // Remove leading whitespace\n            if (tokens.length === 0) {\n              stripWhitespace(0);\n            }\n            break;\n          }\n          let namespace = null;\n          let name;\n          if (firstChar === 42 /* Asterisk */) {\n            selectorIndex += 1;\n            name = \"*\";\n          } else if (firstChar === 124 /* Pipe */) {\n            name = \"\";\n            if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n              addTraversal(SelectorType.ColumnCombinator);\n              stripWhitespace(2);\n              break;\n            }\n          } else if (reName.test(selector.slice(selectorIndex))) {\n            name = getName(0);\n          } else {\n            break loop;\n          }\n          if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ && selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n            namespace = name;\n            if (selector.charCodeAt(selectorIndex + 1) === 42 /* Asterisk */) {\n              name = \"*\";\n              selectorIndex += 2;\n            } else {\n              name = getName(1);\n            }\n          }\n          tokens.push(name === \"*\" ? {\n            type: SelectorType.Universal,\n            namespace\n          } : {\n            type: SelectorType.Tag,\n            name,\n            namespace\n          });\n        }\n    }\n  }\n  finalizeSubselector();\n  return selectorIndex;\n}\nconst attribValChars = [\"\\\\\", '\"'];\nconst pseudoValChars = [...attribValChars, \"(\", \")\"];\nnew Set(attribValChars.map(c => c.charCodeAt(0)));\nnew Set(pseudoValChars.map(c => c.charCodeAt(0)));\nnew Set([...pseudoValChars, \"~\", \"^\", \"$\", \"*\", \"+\", \"!\", \"|\", \":\", \"[\", \"]\", \" \", \".\"].map(c => c.charCodeAt(0)));\nconst procedure = new Map([[SelectorType.Universal, 50], [SelectorType.Tag, 30], [SelectorType.Attribute, 1], [SelectorType.Pseudo, 0]]);\nfunction isTraversal(token) {\n  return !procedure.has(token.type);\n}\nconst attributes = new Map([[AttributeAction.Exists, 10], [AttributeAction.Equals, 8], [AttributeAction.Not, 7], [AttributeAction.Start, 6], [AttributeAction.End, 6], [AttributeAction.Any, 5]]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nfunction sortByProcedure(arr) {\n  const procs = arr.map(getProcedure);\n  for (let i = 1; i < arr.length; i++) {\n    const procNew = procs[i];\n    if (procNew < 0) continue;\n    for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n      const token = arr[j + 1];\n      arr[j + 1] = arr[j];\n      arr[j] = token;\n      procs[j + 1] = procs[j];\n      procs[j] = procNew;\n    }\n  }\n}\nfunction getProcedure(token) {\n  var _a, _b;\n  let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n  if (token.type === SelectorType.Attribute) {\n    proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n    if (token.action === AttributeAction.Equals && token.name === \"id\") {\n      // Prefer ID selectors (eg. #ID)\n      proc = 9;\n    }\n    if (token.ignoreCase) {\n      /*\n       * IgnoreCase adds some overhead, prefer \"normal\" token\n       * this is a binary operation, to ensure it's still an int\n       */\n      proc >>= 1;\n    }\n  } else if (token.type === SelectorType.Pseudo) {\n    if (!token.data) {\n      proc = 3;\n    } else if (token.name === \"has\" || token.name === \"contains\") {\n      proc = 0; // Expensive in any case\n    } else if (Array.isArray(token.data)) {\n      // Eg. :matches, :not\n      proc = Math.min(...token.data.map(d => Math.min(...d.map(getProcedure))));\n      // If we have traversals, try to avoid executing this selector\n      if (proc < 0) {\n        proc = 0;\n      }\n    } else {\n      proc = 2;\n    }\n  }\n  return proc;\n}\n\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n  return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\"accept\", \"accept-charset\", \"align\", \"alink\", \"axis\", \"bgcolor\", \"charset\", \"checked\", \"clear\", \"codetype\", \"color\", \"compact\", \"declare\", \"defer\", \"dir\", \"direction\", \"disabled\", \"enctype\", \"face\", \"frame\", \"hreflang\", \"http-equiv\", \"lang\", \"language\", \"link\", \"media\", \"method\", \"multiple\", \"nohref\", \"noresize\", \"noshade\", \"nowrap\", \"readonly\", \"rel\", \"rev\", \"rules\", \"scope\", \"scrolling\", \"selected\", \"shape\", \"target\", \"text\", \"type\", \"valign\", \"valuetype\", \"vlink\"]);\nfunction shouldIgnoreCase(selector, options) {\n  return typeof selector.ignoreCase === \"boolean\" ? selector.ignoreCase : selector.ignoreCase === \"quirks\" ? !!options.quirksMode : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nconst attributeRules = {\n  equals(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length === value.length && attr.toLowerCase() === value && next(elem);\n      };\n    }\n    return elem => adapter.getAttributeValue(elem, name) === value && next(elem);\n  },\n  hyphen(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = value.length;\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return function hyphenIC(elem) {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n    return function hyphen(elem) {\n      const attr = adapter.getAttributeValue(elem, name);\n      return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len) === value && next(elem);\n    };\n  },\n  element(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name,\n      value\n    } = data;\n    if (/\\s/.test(value)) {\n      return boolbase.falseFunc;\n    }\n    const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n    return function element(elem) {\n      const attr = adapter.getAttributeValue(elem, name);\n      return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n    };\n  },\n  exists(next, {\n    name\n  }, {\n    adapter\n  }) {\n    return elem => adapter.hasAttrib(elem, name) && next(elem);\n  },\n  start(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = value.length;\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length >= len && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n    return elem => {\n      var _a;\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) && next(elem);\n    };\n  },\n  end(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    const len = -value.length;\n    if (len === 0) {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        var _a;\n        return ((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n      };\n    }\n    return elem => {\n      var _a;\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) && next(elem);\n    };\n  },\n  any(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name,\n      value\n    } = data;\n    if (value === \"\") {\n      return boolbase.falseFunc;\n    }\n    if (shouldIgnoreCase(data, options)) {\n      const regex = new RegExp(escapeRegex(value), \"i\");\n      return function anyIC(elem) {\n        const attr = adapter.getAttributeValue(elem, name);\n        return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);\n      };\n    }\n    return elem => {\n      var _a;\n      return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) && next(elem);\n    };\n  },\n  not(next, data, options) {\n    const {\n      adapter\n    } = options;\n    const {\n      name\n    } = data;\n    let {\n      value\n    } = data;\n    if (value === \"\") {\n      return elem => !!adapter.getAttributeValue(elem, name) && next(elem);\n    } else if (shouldIgnoreCase(data, options)) {\n      value = value.toLowerCase();\n      return elem => {\n        const attr = adapter.getAttributeValue(elem, name);\n        return (attr == null || attr.length !== value.length || attr.toLowerCase() !== value) && next(elem);\n      };\n    }\n    return elem => adapter.getAttributeValue(elem, name) !== value && next(elem);\n  }\n};\n\n// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nfunction parse(formula) {\n  formula = formula.trim().toLowerCase();\n  if (formula === \"even\") {\n    return [2, 0];\n  } else if (formula === \"odd\") {\n    return [2, 1];\n  }\n  // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n  let idx = 0;\n  let a = 0;\n  let sign = readSign();\n  let number = readNumber();\n  if (idx < formula.length && formula.charAt(idx) === \"n\") {\n    idx++;\n    a = sign * (number !== null && number !== void 0 ? number : 1);\n    skipWhitespace();\n    if (idx < formula.length) {\n      sign = readSign();\n      skipWhitespace();\n      number = readNumber();\n    } else {\n      sign = number = 0;\n    }\n  }\n  // Throw if there is anything else\n  if (number === null || idx < formula.length) {\n    throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n  }\n  return [a, sign * number];\n  function readSign() {\n    if (formula.charAt(idx) === \"-\") {\n      idx++;\n      return -1;\n    }\n    if (formula.charAt(idx) === \"+\") {\n      idx++;\n    }\n    return 1;\n  }\n  function readNumber() {\n    const start = idx;\n    let value = 0;\n    while (idx < formula.length && formula.charCodeAt(idx) >= ZERO && formula.charCodeAt(idx) <= NINE) {\n      value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n      idx++;\n    }\n    // Return `null` if we didn't read anything.\n    return idx === start ? null : value;\n  }\n  function skipWhitespace() {\n    while (idx < formula.length && whitespace.has(formula.charCodeAt(idx))) {\n      idx++;\n    }\n  }\n}\n\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nfunction compile(parsed) {\n  const a = parsed[0];\n  // Subtract 1 from `b`, to convert from one- to zero-indexed.\n  const b = parsed[1] - 1;\n  /*\n   * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n   * Besides, the specification states that no elements are\n   * matched when `a` and `b` are 0.\n   *\n   * `b < 0` here as we subtracted 1 from `b` above.\n   */\n  if (b < 0 && a <= 0) return boolbase.falseFunc;\n  // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n  if (a === -1) return index => index <= b;\n  if (a === 0) return index => index === b;\n  // When `b <= 0` and `a === 1`, they match any element.\n  if (a === 1) return b < 0 ? boolbase.trueFunc : index => index >= b;\n  /*\n   * Otherwise, modulo can be used to check if there is a match.\n   *\n   * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n   */\n  const absA = Math.abs(a);\n  // Get `b mod a`, + a if this is negative.\n  const bMod = (b % absA + absA) % absA;\n  return a > 1 ? index => index >= b && index % absA === bMod : index => index <= b && index % absA === bMod;\n}\n\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n  return compile(parse(formula));\n}\nfunction getChildFunc(next, adapter) {\n  return elem => {\n    const parent = adapter.getParent(elem);\n    return parent != null && adapter.isTag(parent) && next(elem);\n  };\n}\nconst filters = {\n  contains(next, text, {\n    adapter\n  }) {\n    return function contains(elem) {\n      return next(elem) && adapter.getText(elem).includes(text);\n    };\n  },\n  icontains(next, text, {\n    adapter\n  }) {\n    const itext = text.toLowerCase();\n    return function icontains(elem) {\n      return next(elem) && adapter.getText(elem).toLowerCase().includes(itext);\n    };\n  },\n  // Location specific methods\n  \"nth-child\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthChild(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = 0; i < siblings.length; i++) {\n        if (equals(elem, siblings[i])) break;\n        if (adapter.isTag(siblings[i])) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  \"nth-last-child\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthLastChild(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = siblings.length - 1; i >= 0; i--) {\n        if (equals(elem, siblings[i])) break;\n        if (adapter.isTag(siblings[i])) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  \"nth-of-type\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthOfType(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = 0; i < siblings.length; i++) {\n        const currentSibling = siblings[i];\n        if (equals(elem, currentSibling)) break;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  \"nth-last-of-type\"(next, rule, {\n    adapter,\n    equals\n  }) {\n    const func = nthCheck(rule);\n    if (func === boolbase.falseFunc) return boolbase.falseFunc;\n    if (func === boolbase.trueFunc) return getChildFunc(next, adapter);\n    return function nthLastOfType(elem) {\n      const siblings = adapter.getSiblings(elem);\n      let pos = 0;\n      for (let i = siblings.length - 1; i >= 0; i--) {\n        const currentSibling = siblings[i];\n        if (equals(elem, currentSibling)) break;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {\n          pos++;\n        }\n      }\n      return func(pos) && next(elem);\n    };\n  },\n  // TODO determine the actual root element\n  root(next, _rule, {\n    adapter\n  }) {\n    return elem => {\n      const parent = adapter.getParent(elem);\n      return (parent == null || !adapter.isTag(parent)) && next(elem);\n    };\n  },\n  scope(next, rule, options, context) {\n    const {\n      equals\n    } = options;\n    if (!context || context.length === 0) {\n      // Equivalent to :root\n      return filters[\"root\"](next, rule, options);\n    }\n    if (context.length === 1) {\n      // NOTE: can't be unpacked, as :has uses this for side-effects\n      return elem => equals(context[0], elem) && next(elem);\n    }\n    return elem => context.includes(elem) && next(elem);\n  },\n  hover: dynamicStatePseudo(\"isHovered\"),\n  visited: dynamicStatePseudo(\"isVisited\"),\n  active: dynamicStatePseudo(\"isActive\")\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n  return function dynamicPseudo(next, _rule, {\n    adapter\n  }) {\n    const func = adapter[name];\n    if (typeof func !== \"function\") {\n      return boolbase.falseFunc;\n    }\n    return function active(elem) {\n      return func(elem) && next(elem);\n    };\n  };\n}\n\n// While filters are precompiled, pseudos get called when they are needed\nconst pseudos = {\n  empty(elem, {\n    adapter\n  }) {\n    return !adapter.getChildren(elem).some(elem =>\n    // FIXME: `getText` call is potentially expensive.\n    adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n  },\n  \"first-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    if (adapter.prevElementSibling) {\n      return adapter.prevElementSibling(elem) == null;\n    }\n    const firstChild = adapter.getSiblings(elem).find(elem => adapter.isTag(elem));\n    return firstChild != null && equals(elem, firstChild);\n  },\n  \"last-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    for (let i = siblings.length - 1; i >= 0; i--) {\n      if (equals(elem, siblings[i])) return true;\n      if (adapter.isTag(siblings[i])) break;\n    }\n    return false;\n  },\n  \"first-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = 0; i < siblings.length; i++) {\n      const currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"last-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const siblings = adapter.getSiblings(elem);\n    const elemName = adapter.getName(elem);\n    for (let i = siblings.length - 1; i >= 0; i--) {\n      const currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n    return false;\n  },\n  \"only-of-type\"(elem, {\n    adapter,\n    equals\n  }) {\n    const elemName = adapter.getName(elem);\n    return adapter.getSiblings(elem).every(sibling => equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName);\n  },\n  \"only-child\"(elem, {\n    adapter,\n    equals\n  }) {\n    return adapter.getSiblings(elem).every(sibling => equals(elem, sibling) || !adapter.isTag(sibling));\n  }\n};\nfunction verifyPseudoArgs(func, name, subselect, argIndex) {\n  if (subselect === null) {\n    if (func.length > argIndex) {\n      throw new Error(`Pseudo-class :${name} requires an argument`);\n    }\n  } else if (func.length === argIndex) {\n    throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n  }\n}\n\n/**\n * Aliases are pseudos that are expressed as selectors.\n */\nconst aliases = {\n  // Links\n  \"any-link\": \":is(a, area, link)[href]\",\n  link: \":any-link:not(:visited)\",\n  // Forms\n  // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n  disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n  enabled: \":not(:disabled)\",\n  checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n  required: \":is(input, select, textarea)[required]\",\n  optional: \":is(input, select, textarea):not([required])\",\n  // JQuery extensions\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n  selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n  checkbox: \"[type=checkbox]\",\n  file: \"[type=file]\",\n  password: \"[type=password]\",\n  radio: \"[type=radio]\",\n  reset: \"[type=reset]\",\n  image: \"[type=image]\",\n  submit: \"[type=submit]\",\n  parent: \":not(:empty)\",\n  header: \":is(h1, h2, h3, h4, h5, h6)\",\n  button: \":is(button, input[type=button])\",\n  input: \":is(input, textarea, select, button)\",\n  text: \"input:is(:not([type!='']), [type=text])\"\n};\n\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nconst PLACEHOLDER_ELEMENT = {};\nfunction ensureIsTag(next, adapter) {\n  if (next === boolbase.falseFunc) return boolbase.falseFunc;\n  return elem => adapter.isTag(elem) && next(elem);\n}\nfunction getNextSiblings(elem, adapter) {\n  const siblings = adapter.getSiblings(elem);\n  if (siblings.length <= 1) return [];\n  const elemIndex = siblings.indexOf(elem);\n  if (elemIndex < 0 || elemIndex === siblings.length - 1) return [];\n  return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n  // Not copied: context, rootFunc\n  return {\n    xmlMode: !!options.xmlMode,\n    lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n    lowerCaseTags: !!options.lowerCaseTags,\n    quirksMode: !!options.quirksMode,\n    cacheResults: !!options.cacheResults,\n    pseudos: options.pseudos,\n    adapter: options.adapter,\n    equals: options.equals\n  };\n}\nconst is = (next, token, options, context, compileToken) => {\n  const func = compileToken(token, copyOptions(options), context);\n  return func === boolbase.trueFunc ? next : func === boolbase.falseFunc ? boolbase.falseFunc : elem => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nconst subselects = {\n  is,\n  /**\n   * `:matches` and `:where` are aliases for `:is`.\n   */\n  matches: is,\n  where: is,\n  not(next, token, options, context, compileToken) {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase.falseFunc ? next : func === boolbase.trueFunc ? boolbase.falseFunc : elem => !func(elem) && next(elem);\n  },\n  has(next, subselect, options, _context, compileToken) {\n    const {\n      adapter\n    } = options;\n    const opts = copyOptions(options);\n    opts.relativeSelector = true;\n    const context = subselect.some(s => s.some(isTraversal)) ?\n    // Used as a placeholder. Will be replaced with the actual element.\n    [PLACEHOLDER_ELEMENT] : undefined;\n    const compiled = compileToken(subselect, opts, context);\n    if (compiled === boolbase.falseFunc) return boolbase.falseFunc;\n    const hasElement = ensureIsTag(compiled, adapter);\n    // If `compiled` is `trueFunc`, we can skip this.\n    if (context && compiled !== boolbase.trueFunc) {\n      /*\n       * `shouldTestNextSiblings` will only be true if the query starts with\n       * a traversal (sibling or adjacent). That means we will always have a context.\n       */\n      const {\n        shouldTestNextSiblings = false\n      } = compiled;\n      return elem => {\n        if (!next(elem)) return false;\n        context[0] = elem;\n        const childs = adapter.getChildren(elem);\n        const nextElements = shouldTestNextSiblings ? [...childs, ...getNextSiblings(elem, adapter)] : childs;\n        return adapter.existsOne(hasElement, nextElements);\n      };\n    }\n    return elem => next(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));\n  }\n};\nfunction compilePseudoSelector(next, selector, options, context, compileToken) {\n  var _a;\n  const {\n    name,\n    data\n  } = selector;\n  if (Array.isArray(data)) {\n    if (!(name in subselects)) {\n      throw new Error(`Unknown pseudo-class :${name}(${data})`);\n    }\n    return subselects[name](next, data, options, context, compileToken);\n  }\n  const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n  const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n  if (typeof stringPseudo === \"string\") {\n    if (data != null) {\n      throw new Error(`Pseudo ${name} doesn't have any arguments`);\n    }\n    // The alias has to be parsed here, to make sure options are respected.\n    const alias = parse$1(stringPseudo);\n    return subselects[\"is\"](next, alias, options, context, compileToken);\n  }\n  if (typeof userPseudo === \"function\") {\n    verifyPseudoArgs(userPseudo, name, data, 1);\n    return elem => userPseudo(elem, data) && next(elem);\n  }\n  if (name in filters) {\n    return filters[name](next, data, options, context);\n  }\n  if (name in pseudos) {\n    const pseudo = pseudos[name];\n    verifyPseudoArgs(pseudo, name, data, 2);\n    return elem => pseudo(elem, options, data) && next(elem);\n  }\n  throw new Error(`Unknown pseudo-class :${name}`);\n}\nfunction getElementParent(node, adapter) {\n  const parent = adapter.getParent(node);\n  if (parent && adapter.isTag(parent)) {\n    return parent;\n  }\n  return null;\n}\n/*\n * All available rules\n */\nfunction compileGeneralSelector(next, selector, options, context, compileToken) {\n  const {\n    adapter,\n    equals\n  } = options;\n  switch (selector.type) {\n    case SelectorType.PseudoElement:\n      {\n        throw new Error(\"Pseudo-elements are not supported by css-select\");\n      }\n    case SelectorType.ColumnCombinator:\n      {\n        throw new Error(\"Column combinators are not yet supported by css-select\");\n      }\n    case SelectorType.Attribute:\n      {\n        if (selector.namespace != null) {\n          throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n        }\n        if (!options.xmlMode || options.lowerCaseAttributeNames) {\n          selector.name = selector.name.toLowerCase();\n        }\n        return attributeRules[selector.action](next, selector, options);\n      }\n    case SelectorType.Pseudo:\n      {\n        return compilePseudoSelector(next, selector, options, context, compileToken);\n      }\n    // Tags\n    case SelectorType.Tag:\n      {\n        if (selector.namespace != null) {\n          throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n        }\n        let {\n          name\n        } = selector;\n        if (!options.xmlMode || options.lowerCaseTags) {\n          name = name.toLowerCase();\n        }\n        return function tag(elem) {\n          return adapter.getName(elem) === name && next(elem);\n        };\n      }\n    // Traversal\n    case SelectorType.Descendant:\n      {\n        if (options.cacheResults === false || typeof WeakSet === \"undefined\") {\n          return function descendant(elem) {\n            let current = elem;\n            while (current = getElementParent(current, adapter)) {\n              if (next(current)) {\n                return true;\n              }\n            }\n            return false;\n          };\n        }\n        // @ts-expect-error `ElementNode` is not extending object\n        const isFalseCache = new WeakSet();\n        return function cachedDescendant(elem) {\n          let current = elem;\n          while (current = getElementParent(current, adapter)) {\n            if (!isFalseCache.has(current)) {\n              if (adapter.isTag(current) && next(current)) {\n                return true;\n              }\n              isFalseCache.add(current);\n            }\n          }\n          return false;\n        };\n      }\n    case \"_flexibleDescendant\":\n      {\n        // Include element itself, only used while querying an array\n        return function flexibleDescendant(elem) {\n          let current = elem;\n          do {\n            if (next(current)) return true;\n          } while (current = getElementParent(current, adapter));\n          return false;\n        };\n      }\n    case SelectorType.Parent:\n      {\n        return function parent(elem) {\n          return adapter.getChildren(elem).some(elem => adapter.isTag(elem) && next(elem));\n        };\n      }\n    case SelectorType.Child:\n      {\n        return function child(elem) {\n          const parent = adapter.getParent(elem);\n          return parent != null && adapter.isTag(parent) && next(parent);\n        };\n      }\n    case SelectorType.Sibling:\n      {\n        return function sibling(elem) {\n          const siblings = adapter.getSiblings(elem);\n          for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) break;\n            if (adapter.isTag(currentSibling) && next(currentSibling)) {\n              return true;\n            }\n          }\n          return false;\n        };\n      }\n    case SelectorType.Adjacent:\n      {\n        if (adapter.prevElementSibling) {\n          return function adjacent(elem) {\n            const previous = adapter.prevElementSibling(elem);\n            return previous != null && next(previous);\n          };\n        }\n        return function adjacent(elem) {\n          const siblings = adapter.getSiblings(elem);\n          let lastElement;\n          for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) break;\n            if (adapter.isTag(currentSibling)) {\n              lastElement = currentSibling;\n            }\n          }\n          return !!lastElement && next(lastElement);\n        };\n      }\n    case SelectorType.Universal:\n      {\n        if (selector.namespace != null && selector.namespace !== \"*\") {\n          throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n        }\n        return next;\n      }\n  }\n}\nfunction compileUnsafe(selector, options, context) {\n  const token = typeof selector === \"string\" ? parse$1(selector) : selector;\n  return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n  return t.type === SelectorType.Pseudo && (t.name === \"scope\" || Array.isArray(t.data) && t.data.some(data => data.some(includesScopePseudo)));\n}\nconst DESCENDANT_TOKEN = {\n  type: SelectorType.Descendant\n};\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n  type: \"_flexibleDescendant\"\n};\nconst SCOPE_TOKEN = {\n  type: SelectorType.Pseudo,\n  name: \"scope\",\n  data: null\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, {\n  adapter\n}, context) {\n  // TODO Use better check if the context is a document\n  const hasContext = !!(context === null || context === void 0 ? void 0 : context.every(e => {\n    const parent = adapter.isTag(e) && adapter.getParent(e);\n    return e === PLACEHOLDER_ELEMENT || parent && adapter.isTag(parent);\n  }));\n  for (const t of token) {\n    if (t.length > 0 && isTraversal(t[0]) && t[0].type !== SelectorType.Descendant) ;else if (hasContext && !t.some(includesScopePseudo)) {\n      t.unshift(DESCENDANT_TOKEN);\n    } else {\n      continue;\n    }\n    t.unshift(SCOPE_TOKEN);\n  }\n}\nfunction compileToken(token, options, context) {\n  var _a;\n  token.forEach(sortByProcedure);\n  context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n  const isArrayContext = Array.isArray(context);\n  const finalContext = context && (Array.isArray(context) ? context : [context]);\n  // Check if the selector is relative\n  if (options.relativeSelector !== false) {\n    absolutize(token, options, finalContext);\n  } else if (token.some(t => t.length > 0 && isTraversal(t[0]))) {\n    throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n  }\n  let shouldTestNextSiblings = false;\n  const query = token.map(rules => {\n    if (rules.length >= 2) {\n      const [first, second] = rules;\n      if (first.type !== SelectorType.Pseudo || first.name !== \"scope\") ;else if (isArrayContext && second.type === SelectorType.Descendant) {\n        rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n      } else if (second.type === SelectorType.Adjacent || second.type === SelectorType.Sibling) {\n        shouldTestNextSiblings = true;\n      }\n    }\n    return compileRules(rules, options, finalContext);\n  }).reduce(reduceRules, boolbase.falseFunc);\n  query.shouldTestNextSiblings = shouldTestNextSiblings;\n  return query;\n}\nfunction compileRules(rules, options, context) {\n  var _a;\n  return rules.reduce((previous, rule) => previous === boolbase.falseFunc ? boolbase.falseFunc : compileGeneralSelector(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n  if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n    return a;\n  }\n  if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n    return b;\n  }\n  return function combine(elem) {\n    return a(elem) || b(elem);\n  };\n}\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n  adapter: DomUtils,\n  equals: defaultEquals\n};\nfunction convertOptionFormats(options) {\n  var _a, _b, _c, _d;\n  /*\n   * We force one format of options to the other one.\n   */\n  // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n  const opts = options !== null && options !== void 0 ? options : defaultOptions;\n  // @ts-expect-error Same as above.\n  (_a = opts.adapter) !== null && _a !== void 0 ? _a : opts.adapter = DomUtils;\n  // @ts-expect-error `equals` does not exist on `Options`\n  (_b = opts.equals) !== null && _b !== void 0 ? _b : opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals;\n  return opts;\n}\nfunction getSelectorFunc(searchFunc) {\n  return function select(query, elements, options) {\n    const opts = convertOptionFormats(options);\n    if (typeof query !== \"function\") {\n      query = compileUnsafe(query, opts, elements);\n    }\n    const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n    return searchFunc(query, filteredElements, opts);\n  };\n}\nfunction prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n  /*\n   * Add siblings if the query requires them.\n   * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n   */\n  if (shouldTestNextSiblings) {\n    elems = appendNextSiblings(elems, adapter);\n  }\n  return Array.isArray(elems) ? adapter.removeSubsets(elems) : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n  // Order matters because jQuery seems to check the children before the siblings\n  const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n  const elemsLength = elems.length;\n  for (let i = 0; i < elemsLength; i++) {\n    const nextSiblings = getNextSiblings(elems[i], adapter);\n    elems.push(...nextSiblings);\n  }\n  return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nconst selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nconst selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems));\n\n// Generated using scripts/write-decode-map.ts\nconst htmlDecodeTree = /* #__PURE__ */new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\".split(\"\").map(c => c.charCodeAt(0)));\n\n// Generated using scripts/write-decode-map.ts\nconst xmlDecodeTree = /* #__PURE__ */new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\".split(\"\").map(c => c.charCodeAt(0)));\n\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([[0, 65533],\n// C1 Unicode control character reference replacements\n[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nconst fromCodePoint =\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n  let output = \"\";\n  if (codePoint > 65535) {\n    codePoint -= 65536;\n    output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);\n    codePoint = 56320 | codePoint & 1023;\n  }\n  output += String.fromCharCode(codePoint);\n  return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nfunction replaceCodePoint(codePoint) {\n  var _a;\n  if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {\n    return 65533;\n  }\n  return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\nvar CharCodes$1;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n  CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n  CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n  CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n  CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n  CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n  CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n  CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n  CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n  CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n  CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n  CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes$1 || (CharCodes$1 = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 32;\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n  BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n  return code >= CharCodes$1.ZERO && code <= CharCodes$1.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n  return code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_F || code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_F;\n}\nfunction isAsciiAlphaNumeric(code) {\n  return code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_Z || code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_Z || isNumber(code);\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n  return code === CharCodes$1.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n  EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n  EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n  EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n  EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n  EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function (DecodingMode) {\n  /** Entities in text nodes that can end with any character. */\n  DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n  /** Only allow entities terminated with a semicolon. */\n  DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n  /** Entities in attributes have limitations on ending characters. */\n  DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nclass EntityDecoder {\n  constructor(/** The tree used to decode entities. */\n  decodeTree,\n  /**\n   * The function that is called when a codepoint is decoded.\n   *\n   * For multi-byte named entities, this will be called multiple times,\n   * with the second codepoint, and the same `consumed` value.\n   *\n   * @param codepoint The decoded codepoint.\n   * @param consumed The number of bytes consumed by the decoder.\n   */\n  emitCodePoint, /** An object that is used to produce errors. */\n  errors) {\n    this.decodeTree = decodeTree;\n    this.emitCodePoint = emitCodePoint;\n    this.errors = errors;\n    /** The current state of the decoder. */\n    this.state = EntityDecoderState.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    this.consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    this.result = 0;\n    /** The current index in the decode tree. */\n    this.treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    this.excess = 1;\n    /** The mode in which the decoder is operating. */\n    this.decodeMode = DecodingMode.Strict;\n  }\n  /** Resets the instance to make it reusable. */\n  startEntity(decodeMode) {\n    this.decodeMode = decodeMode;\n    this.state = EntityDecoderState.EntityStart;\n    this.result = 0;\n    this.treeIndex = 0;\n    this.excess = 1;\n    this.consumed = 1;\n  }\n  /**\n   * Write an entity to the decoder. This can be called multiple times with partial entities.\n   * If the entity is incomplete, the decoder will return -1.\n   *\n   * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n   * entity is incomplete, and resume when the next string is written.\n   *\n   * @param input The string containing the entity (or a continuation of the entity).\n   * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  write(input, offset) {\n    switch (this.state) {\n      case EntityDecoderState.EntityStart:\n        {\n          if (input.charCodeAt(offset) === CharCodes$1.NUM) {\n            this.state = EntityDecoderState.NumericStart;\n            this.consumed += 1;\n            return this.stateNumericStart(input, offset + 1);\n          }\n          this.state = EntityDecoderState.NamedEntity;\n          return this.stateNamedEntity(input, offset);\n        }\n      case EntityDecoderState.NumericStart:\n        {\n          return this.stateNumericStart(input, offset);\n        }\n      case EntityDecoderState.NumericDecimal:\n        {\n          return this.stateNumericDecimal(input, offset);\n        }\n      case EntityDecoderState.NumericHex:\n        {\n          return this.stateNumericHex(input, offset);\n        }\n      case EntityDecoderState.NamedEntity:\n        {\n          return this.stateNamedEntity(input, offset);\n        }\n    }\n  }\n  /**\n   * Switches between the numeric decimal and hexadecimal states.\n   *\n   * Equivalent to the `Numeric character reference state` in the HTML spec.\n   *\n   * @param input The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericStart(input, offset) {\n    if (offset >= input.length) {\n      return -1;\n    }\n    if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes$1.LOWER_X) {\n      this.state = EntityDecoderState.NumericHex;\n      this.consumed += 1;\n      return this.stateNumericHex(input, offset + 1);\n    }\n    this.state = EntityDecoderState.NumericDecimal;\n    return this.stateNumericDecimal(input, offset);\n  }\n  addToNumericResult(input, start, end, base) {\n    if (start !== end) {\n      const digitCount = end - start;\n      this.result = this.result * Math.pow(base, digitCount) + Number.parseInt(input.substr(start, digitCount), base);\n      this.consumed += digitCount;\n    }\n  }\n  /**\n   * Parses a hexadecimal numeric entity.\n   *\n   * Equivalent to the `Hexademical character reference state` in the HTML spec.\n   *\n   * @param input The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericHex(input, offset) {\n    const startIndex = offset;\n    while (offset < input.length) {\n      const char = input.charCodeAt(offset);\n      if (isNumber(char) || isHexadecimalCharacter(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(input, startIndex, offset, 16);\n        return this.emitNumericEntity(char, 3);\n      }\n    }\n    this.addToNumericResult(input, startIndex, offset, 16);\n    return -1;\n  }\n  /**\n   * Parses a decimal numeric entity.\n   *\n   * Equivalent to the `Decimal character reference state` in the HTML spec.\n   *\n   * @param input The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNumericDecimal(input, offset) {\n    const startIndex = offset;\n    while (offset < input.length) {\n      const char = input.charCodeAt(offset);\n      if (isNumber(char)) {\n        offset += 1;\n      } else {\n        this.addToNumericResult(input, startIndex, offset, 10);\n        return this.emitNumericEntity(char, 2);\n      }\n    }\n    this.addToNumericResult(input, startIndex, offset, 10);\n    return -1;\n  }\n  /**\n   * Validate and emit a numeric entity.\n   *\n   * Implements the logic from the `Hexademical character reference start\n   * state` and `Numeric character reference end state` in the HTML spec.\n   *\n   * @param lastCp The last code point of the entity. Used to see if the\n   *               entity was terminated with a semicolon.\n   * @param expectedLength The minimum number of characters that should be\n   *                       consumed. Used to validate that at least one digit\n   *                       was consumed.\n   * @returns The number of characters that were consumed.\n   */\n  emitNumericEntity(lastCp, expectedLength) {\n    var _a;\n    // Ensure we consumed at least one digit.\n    if (this.consumed <= expectedLength) {\n      (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n      return 0;\n    }\n    // Figure out if this is a legit end of the entity\n    if (lastCp === CharCodes$1.SEMI) {\n      this.consumed += 1;\n    } else if (this.decodeMode === DecodingMode.Strict) {\n      return 0;\n    }\n    this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n    if (this.errors) {\n      if (lastCp !== CharCodes$1.SEMI) {\n        this.errors.missingSemicolonAfterCharacterReference();\n      }\n      this.errors.validateNumericCharacterReference(this.result);\n    }\n    return this.consumed;\n  }\n  /**\n   * Parses a named entity.\n   *\n   * Equivalent to the `Named character reference state` in the HTML spec.\n   *\n   * @param input The string containing the entity (or a continuation of the entity).\n   * @param offset The current offset.\n   * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n   */\n  stateNamedEntity(input, offset) {\n    const {\n      decodeTree\n    } = this;\n    let current = decodeTree[this.treeIndex];\n    // The mask is the number of bytes of the value, including the current byte.\n    let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n    for (; offset < input.length; offset++, this.excess++) {\n      const char = input.charCodeAt(offset);\n      this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n      if (this.treeIndex < 0) {\n        return this.result === 0 ||\n        // If we are parsing an attribute\n        this.decodeMode === DecodingMode.Attribute && (\n        // We shouldn't have consumed any characters after the entity,\n        valueLength === 0 ||\n        // And there should be no invalid characters.\n        isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();\n      }\n      current = decodeTree[this.treeIndex];\n      valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n      // If the branch is a value, store it and continue\n      if (valueLength !== 0) {\n        // If the entity is terminated by a semicolon, we are done.\n        if (char === CharCodes$1.SEMI) {\n          return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n        }\n        // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n        if (this.decodeMode !== DecodingMode.Strict) {\n          this.result = this.treeIndex;\n          this.consumed += this.excess;\n          this.excess = 0;\n        }\n      }\n    }\n    return -1;\n  }\n  /**\n   * Emit a named entity that was not terminated with a semicolon.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNotTerminatedNamedEntity() {\n    var _a;\n    const {\n      result,\n      decodeTree\n    } = this;\n    const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n    this.emitNamedEntityData(result, valueLength, this.consumed);\n    (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n    return this.consumed;\n  }\n  /**\n   * Emit a named entity.\n   *\n   * @param result The index of the entity in the decode tree.\n   * @param valueLength The number of bytes in the entity.\n   * @param consumed The number of characters consumed.\n   *\n   * @returns The number of characters consumed.\n   */\n  emitNamedEntityData(result, valueLength, consumed) {\n    const {\n      decodeTree\n    } = this;\n    this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);\n    if (valueLength === 3) {\n      // For multi-byte values, we need to emit the second byte.\n      this.emitCodePoint(decodeTree[result + 2], consumed);\n    }\n    return consumed;\n  }\n  /**\n   * Signal to the parser that the end of the input was reached.\n   *\n   * Remaining data will be emitted and relevant errors will be produced.\n   *\n   * @returns The number of characters consumed.\n   */\n  end() {\n    var _a;\n    switch (this.state) {\n      case EntityDecoderState.NamedEntity:\n        {\n          // Emit a named entity if we have one.\n          return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;\n        }\n      // Otherwise, emit a numeric entity if we have one.\n      case EntityDecoderState.NumericDecimal:\n        {\n          return this.emitNumericEntity(0, 2);\n        }\n      case EntityDecoderState.NumericHex:\n        {\n          return this.emitNumericEntity(0, 3);\n        }\n      case EntityDecoderState.NumericStart:\n        {\n          (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n          return 0;\n        }\n      case EntityDecoderState.EntityStart:\n        {\n          // Return 0 if we have no entity.\n          return 0;\n        }\n    }\n  }\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nfunction determineBranch(decodeTree, current, nodeIndex, char) {\n  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n  // Case 1: Single branch encoded in jump offset\n  if (branchCount === 0) {\n    return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n  }\n  // Case 2: Multiple branches encoded in jump table\n  if (jumpOffset) {\n    const value = char - jumpOffset;\n    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIndex + value] - 1;\n  }\n  // Case 3: Multiple branches encoded in dictionary\n  // Binary search for the character.\n  let lo = nodeIndex;\n  let hi = lo + branchCount - 1;\n  while (lo <= hi) {\n    const mid = lo + hi >>> 1;\n    const midValue = decodeTree[mid];\n    if (midValue < char) {\n      lo = mid + 1;\n    } else if (midValue > char) {\n      hi = mid - 1;\n    } else {\n      return decodeTree[mid + branchCount];\n    }\n  }\n  return -1;\n}\nvar CharCodes;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n  CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n  CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n  CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n  CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n  CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n  CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n  CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n  CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n  CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n  CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n  CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n  CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n  CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n  CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n  CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n  CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n  CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n  CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n  CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n  CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n  CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n  CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n  CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n  CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n  CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n  CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n  State[State[\"Text\"] = 1] = \"Text\";\n  State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n  State[State[\"InTagName\"] = 3] = \"InTagName\";\n  State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n  State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n  State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n  State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n  // Attributes\n  State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n  State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n  State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n  State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n  State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n  State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n  State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n  // Declarations\n  State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n  State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n  // Processing instructions\n  State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n  // Comments & CDATA\n  State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n  State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n  State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n  State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n  // Special tags\n  State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n  State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n  State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n  State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n  State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n  return c === CharCodes.Space || c === CharCodes.NewLine || c === CharCodes.Tab || c === CharCodes.FormFeed || c === CharCodes.CarriageReturn;\n}\nfunction isEndOfTagSection(c) {\n  return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n  return c >= CharCodes.LowerA && c <= CharCodes.LowerZ || c >= CharCodes.UpperA && c <= CharCodes.UpperZ;\n}\nvar QuoteType;\n(function (QuoteType) {\n  QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n  QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n  QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n  QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n  Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n  // CDATA[\n  CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n  // ]]>\n  CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n  // `-->`\n  ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n  // `</script`\n  StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n  // `</style`\n  TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]),\n  // `</title`\n  TextareaEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61]),\n  // `</textarea`\n  XmpEnd: new Uint8Array([0x3c, 0x2f, 0x78, 0x6d, 0x70]) // `</xmp`\n};\nclass Tokenizer {\n  constructor({\n    xmlMode = false,\n    decodeEntities = true\n  }, cbs) {\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = State.Text;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = State.Text;\n    /** For special parsing behavior inside of script and style tags. */\n    this.isSpecial = false;\n    /** Indicates whether the tokenizer has been paused. */\n    this.running = true;\n    /** The offset of the current buffer. */\n    this.offset = 0;\n    this.currentSequence = undefined;\n    this.sequenceIndex = 0;\n    this.xmlMode = xmlMode;\n    this.decodeEntities = decodeEntities;\n    this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n  }\n  reset() {\n    this.state = State.Text;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = State.Text;\n    this.currentSequence = undefined;\n    this.running = true;\n    this.offset = 0;\n  }\n  write(chunk) {\n    this.offset += this.buffer.length;\n    this.buffer = chunk;\n    this.parse();\n  }\n  end() {\n    if (this.running) this.finish();\n  }\n  pause() {\n    this.running = false;\n  }\n  resume() {\n    this.running = true;\n    if (this.index < this.buffer.length + this.offset) {\n      this.parse();\n    }\n  }\n  stateText(c) {\n    if (c === CharCodes.Lt || !this.decodeEntities && this.fastForwardTo(CharCodes.Lt)) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = State.BeforeTagName;\n      this.sectionStart = this.index;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ?\n    // If we are at the end of the sequence, make sure the tag name has ended\n    isEndOfTagSection(c) :\n    // Otherwise, do a case-insensitive comparison\n    (c | 0x20) === this.currentSequence[this.sequenceIndex];\n    if (!isMatch) {\n      this.isSpecial = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = State.InTagName;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> tags, also decode entities. */\n  stateInSpecialTag(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === CharCodes.Gt || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          // Spoof the index so that reported locations match up.\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.isSpecial = false;\n        this.sectionStart = endOfText + 2; // Skip over the `</`\n        this.stateInClosingTagName(c);\n        return; // We are done; skip the rest of the function.\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd) {\n        // We have to parse entities in <title> tags.\n        if (this.decodeEntities && c === CharCodes.Amp) {\n          this.startEntity();\n        }\n      } else if (this.fastForwardTo(CharCodes.Lt)) {\n        // Outside of <title> tags, we can fast-forward.\n        this.sequenceIndex = 1;\n      }\n    } else {\n      // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n      this.sequenceIndex = Number(c === CharCodes.Lt);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = State.InCommentLike;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = State.InDeclaration;\n      this.stateInDeclaration(c); // Reconsume the character\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length + this.offset) {\n      if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n        return true;\n      }\n    }\n    /*\n     * We increment the index at the end of the `parse` loop,\n     * so set it to `buffer.length - 1` here.\n     *\n     * TODO: Refactor `parse` to increment index before calling states.\n     */\n    this.index = this.buffer.length + this.offset - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index, 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index, 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = State.Text;\n      }\n    } else if (this.sequenceIndex === 0) {\n      // Fast-forward to the first character of the sequence\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      // Allow long sequences, eg. --->, ]]]>\n      this.sequenceIndex = 0;\n    }\n  }\n  /**\n   * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n   *\n   * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n   * We allow anything that wouldn't end the tag.\n   */\n  isTagStartChar(c) {\n    return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n  }\n  startSpecial(sequence, offset) {\n    this.isSpecial = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n    this.state = State.SpecialStartSequence;\n  }\n  stateBeforeTagName(c) {\n    if (c === CharCodes.ExclamationMark) {\n      this.state = State.BeforeDeclaration;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Questionmark) {\n      this.state = State.InProcessingInstruction;\n      this.sectionStart = this.index + 1;\n    } else if (this.isTagStartChar(c)) {\n      const lower = c | 0x20;\n      this.sectionStart = this.index;\n      if (this.xmlMode) {\n        this.state = State.InTagName;\n      } else if (lower === Sequences.ScriptEnd[2]) {\n        this.state = State.BeforeSpecialS;\n      } else if (lower === Sequences.TitleEnd[2] || lower === Sequences.XmpEnd[2]) {\n        this.state = State.BeforeSpecialT;\n      } else {\n        this.state = State.InTagName;\n      }\n    } else if (c === CharCodes.Slash) {\n      this.state = State.BeforeClosingTagName;\n    } else {\n      this.state = State.Text;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.cbs.onopentagname(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ;else if (c === CharCodes.Gt) {\n      this.state = State.Text;\n    } else {\n      this.state = this.isTagStartChar(c) ? State.InClosingTagName : State.InSpecialComment;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === CharCodes.Gt || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = State.AfterClosingTagName;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    // Skip everything until \">\"\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttributeName(c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onopentagend(this.index);\n      if (this.isSpecial) {\n        this.state = State.InSpecialTag;\n        this.sequenceIndex = 0;\n      } else {\n        this.state = State.Text;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.Slash) {\n      this.state = State.InSelfClosingTag;\n    } else if (!isWhitespace(c)) {\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === CharCodes.Gt) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n      this.isSpecial = false; // Reset special state, in case of self-closing special tags\n    } else if (!isWhitespace(c)) {\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    }\n  }\n  stateInAttributeName(c) {\n    if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.sectionStart = this.index;\n      this.state = State.AfterAttributeName;\n      this.stateAfterAttributeName(c);\n    }\n  }\n  stateAfterAttributeName(c) {\n    if (c === CharCodes.Eq) {\n      this.state = State.BeforeAttributeValue;\n    } else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n      this.state = State.InAttributeName;\n      this.sectionStart = this.index;\n    }\n  }\n  stateBeforeAttributeValue(c) {\n    if (c === CharCodes.DoubleQuote) {\n      this.state = State.InAttributeValueDq;\n      this.sectionStart = this.index + 1;\n    } else if (c === CharCodes.SingleQuote) {\n      this.state = State.InAttributeValueSq;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = State.InAttributeValueNq;\n      this.stateInAttributeValueNoQuotes(c); // Reconsume token\n    }\n  }\n  handleInAttributeValue(c, quote) {\n    if (c === quote || !this.decodeEntities && this.fastForwardTo(quote)) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(quote === CharCodes.DoubleQuote ? QuoteType.Double : QuoteType.Single, this.index + 1);\n      this.state = State.BeforeAttributeName;\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateInAttributeValueDoubleQuotes(c) {\n    this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n  }\n  stateInAttributeValueSingleQuotes(c) {\n    this.handleInAttributeValue(c, CharCodes.SingleQuote);\n  }\n  stateInAttributeValueNoQuotes(c) {\n    if (isWhitespace(c) || c === CharCodes.Gt) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(QuoteType.Unquoted, this.index);\n      this.state = State.BeforeAttributeName;\n      this.stateBeforeAttributeName(c);\n    } else if (this.decodeEntities && c === CharCodes.Amp) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === CharCodes.OpeningSquareBracket) {\n      this.state = State.CDATASequence;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === CharCodes.Dash ? State.BeforeComment : State.InDeclaration;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.ondeclaration(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === CharCodes.Dash) {\n      this.state = State.InCommentLike;\n      this.currentSequence = Sequences.CommentEnd;\n      // Allow short comments (eg. <!-->)\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = State.InDeclaration;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n      this.cbs.oncomment(this.sectionStart, this.index, 0);\n      this.state = State.Text;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    const lower = c | 0x20;\n    if (lower === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (lower === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = State.InTagName;\n      this.stateInTagName(c); // Consume the token again\n    }\n  }\n  stateBeforeSpecialT(c) {\n    const lower = c | 0x20;\n    switch (lower) {\n      case Sequences.TitleEnd[3]:\n        {\n          this.startSpecial(Sequences.TitleEnd, 4);\n          break;\n        }\n      case Sequences.TextareaEnd[3]:\n        {\n          this.startSpecial(Sequences.TextareaEnd, 4);\n          break;\n        }\n      case Sequences.XmpEnd[3]:\n        {\n          this.startSpecial(Sequences.XmpEnd, 4);\n          break;\n        }\n      default:\n        {\n          this.state = State.InTagName;\n          this.stateInTagName(c); // Consume the token again\n        }\n    }\n  }\n  startEntity() {\n    this.baseState = this.state;\n    this.state = State.InEntity;\n    this.entityStart = this.index;\n    this.entityDecoder.startEntity(this.xmlMode ? DecodingMode.Strict : this.baseState === State.Text || this.baseState === State.InSpecialTag ? DecodingMode.Legacy : DecodingMode.Attribute);\n  }\n  stateInEntity() {\n    const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n    // If `length` is positive, we are done with the entity.\n    if (length >= 0) {\n      this.state = this.baseState;\n      if (length === 0) {\n        this.index = this.entityStart;\n      }\n    } else {\n      // Mark buffer as consumed.\n      this.index = this.offset + this.buffer.length - 1;\n    }\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    // If we are inside of text or attributes, emit what we already have.\n    if (this.running && this.sectionStart !== this.index) {\n      if (this.state === State.Text || this.state === State.InSpecialTag && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === State.InAttributeValueDq || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueNq) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  shouldContinue() {\n    return this.index < this.buffer.length + this.offset && this.running;\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse() {\n    while (this.shouldContinue()) {\n      const c = this.buffer.charCodeAt(this.index - this.offset);\n      switch (this.state) {\n        case State.Text:\n          {\n            this.stateText(c);\n            break;\n          }\n        case State.SpecialStartSequence:\n          {\n            this.stateSpecialStartSequence(c);\n            break;\n          }\n        case State.InSpecialTag:\n          {\n            this.stateInSpecialTag(c);\n            break;\n          }\n        case State.CDATASequence:\n          {\n            this.stateCDATASequence(c);\n            break;\n          }\n        case State.InAttributeValueDq:\n          {\n            this.stateInAttributeValueDoubleQuotes(c);\n            break;\n          }\n        case State.InAttributeName:\n          {\n            this.stateInAttributeName(c);\n            break;\n          }\n        case State.InCommentLike:\n          {\n            this.stateInCommentLike(c);\n            break;\n          }\n        case State.InSpecialComment:\n          {\n            this.stateInSpecialComment(c);\n            break;\n          }\n        case State.BeforeAttributeName:\n          {\n            this.stateBeforeAttributeName(c);\n            break;\n          }\n        case State.InTagName:\n          {\n            this.stateInTagName(c);\n            break;\n          }\n        case State.InClosingTagName:\n          {\n            this.stateInClosingTagName(c);\n            break;\n          }\n        case State.BeforeTagName:\n          {\n            this.stateBeforeTagName(c);\n            break;\n          }\n        case State.AfterAttributeName:\n          {\n            this.stateAfterAttributeName(c);\n            break;\n          }\n        case State.InAttributeValueSq:\n          {\n            this.stateInAttributeValueSingleQuotes(c);\n            break;\n          }\n        case State.BeforeAttributeValue:\n          {\n            this.stateBeforeAttributeValue(c);\n            break;\n          }\n        case State.BeforeClosingTagName:\n          {\n            this.stateBeforeClosingTagName(c);\n            break;\n          }\n        case State.AfterClosingTagName:\n          {\n            this.stateAfterClosingTagName(c);\n            break;\n          }\n        case State.BeforeSpecialS:\n          {\n            this.stateBeforeSpecialS(c);\n            break;\n          }\n        case State.BeforeSpecialT:\n          {\n            this.stateBeforeSpecialT(c);\n            break;\n          }\n        case State.InAttributeValueNq:\n          {\n            this.stateInAttributeValueNoQuotes(c);\n            break;\n          }\n        case State.InSelfClosingTag:\n          {\n            this.stateInSelfClosingTag(c);\n            break;\n          }\n        case State.InDeclaration:\n          {\n            this.stateInDeclaration(c);\n            break;\n          }\n        case State.BeforeDeclaration:\n          {\n            this.stateBeforeDeclaration(c);\n            break;\n          }\n        case State.BeforeComment:\n          {\n            this.stateBeforeComment(c);\n            break;\n          }\n        case State.InProcessingInstruction:\n          {\n            this.stateInProcessingInstruction(c);\n            break;\n          }\n        case State.InEntity:\n          {\n            this.stateInEntity();\n            break;\n          }\n      }\n      this.index++;\n    }\n    this.cleanup();\n  }\n  finish() {\n    if (this.state === State.InEntity) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length + this.offset;\n    // If there is no remaining data, we are done.\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === State.InCommentLike) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex, 0);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex, 0);\n      }\n    } else if (this.state === State.InTagName || this.state === State.BeforeAttributeName || this.state === State.BeforeAttributeValue || this.state === State.AfterAttributeName || this.state === State.InAttributeName || this.state === State.InAttributeValueSq || this.state === State.InAttributeValueDq || this.state === State.InAttributeValueNq || this.state === State.InClosingTagName) ;else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    if (this.baseState !== State.Text && this.baseState !== State.InSpecialTag) {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.onattribdata(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.onattribentity(cp);\n    } else {\n      if (this.sectionStart < this.entityStart) {\n        this.cbs.ontext(this.sectionStart, this.entityStart);\n      }\n      this.sectionStart = this.entityStart + consumed;\n      this.index = this.sectionStart - 1;\n      this.cbs.ontextentity(cp, this.sectionStart);\n    }\n  }\n}\nconst formTags = new Set([\"input\", \"option\", \"optgroup\", \"select\", \"button\", \"datalist\", \"textarea\"]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([[\"tr\", new Set([\"tr\", \"th\", \"td\"])], [\"th\", new Set([\"th\"])], [\"td\", new Set([\"thead\", \"th\", \"td\"])], [\"body\", new Set([\"head\", \"link\", \"script\"])], [\"li\", new Set([\"li\"])], [\"p\", pTag], [\"h1\", pTag], [\"h2\", pTag], [\"h3\", pTag], [\"h4\", pTag], [\"h5\", pTag], [\"h6\", pTag], [\"select\", formTags], [\"input\", formTags], [\"output\", formTags], [\"button\", formTags], [\"datalist\", formTags], [\"textarea\", formTags], [\"option\", new Set([\"option\"])], [\"optgroup\", new Set([\"optgroup\", \"option\"])], [\"dd\", ddtTags], [\"dt\", ddtTags], [\"address\", pTag], [\"article\", pTag], [\"aside\", pTag], [\"blockquote\", pTag], [\"details\", pTag], [\"div\", pTag], [\"dl\", pTag], [\"fieldset\", pTag], [\"figcaption\", pTag], [\"figure\", pTag], [\"footer\", pTag], [\"form\", pTag], [\"header\", pTag], [\"hr\", pTag], [\"main\", pTag], [\"nav\", pTag], [\"ol\", pTag], [\"pre\", pTag], [\"section\", pTag], [\"table\", pTag], [\"ul\", pTag], [\"rt\", rtpTags], [\"rp\", rtpTags], [\"tbody\", tableSectionTags], [\"tfoot\", tableSectionTags]]);\nconst voidElements = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignobject\", \"desc\", \"title\"]);\nconst reNameEnd = /\\s|\\//;\nclass Parser {\n  constructor(cbs, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    this.options = options;\n    /** The start index of the last event. */\n    this.startIndex = 0;\n    /** The end index of the last event. */\n    this.endIndex = 0;\n    /**\n     * Store the start index of the current open tag,\n     * so we can update the start index for attributes.\n     */\n    this.openTagStart = 0;\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribvalue = \"\";\n    this.attribs = null;\n    this.stack = [];\n    this.buffers = [];\n    this.bufferOffset = 0;\n    /** The index of the last written buffer. Used when resuming after a `pause()`. */\n    this.writeIndex = 0;\n    /** Indicates whether the parser has finished running / `.end` has been called. */\n    this.ended = false;\n    this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n    this.htmlMode = !this.options.xmlMode;\n    this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n    this.lowerCaseAttributeNames = (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n    this.recognizeSelfClosing = (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n    this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n    this.foreignContext = [!this.htmlMode];\n    (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n  }\n  // Tokenizer event handlers\n  /** @internal */\n  ontext(start, endIndex) {\n    var _a, _b;\n    const data = this.getSlice(start, endIndex);\n    this.endIndex = endIndex - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n    this.startIndex = endIndex;\n  }\n  /** @internal */\n  ontextentity(cp, endIndex) {\n    var _a, _b;\n    this.endIndex = endIndex - 1;\n    (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n    this.startIndex = endIndex;\n  }\n  /**\n   * Checks if the current tag is a void element. Override this if you want\n   * to specify your own additional void elements.\n   */\n  isVoidElement(name) {\n    return this.htmlMode && voidElements.has(name);\n  }\n  /** @internal */\n  onopentagname(start, endIndex) {\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    this.emitOpenTag(name);\n  }\n  emitOpenTag(name) {\n    var _a, _b, _c, _d;\n    this.openTagStart = this.startIndex;\n    this.tagname = name;\n    const impliesClose = this.htmlMode && openImpliesClose.get(name);\n    if (impliesClose) {\n      while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n        const element = this.stack.shift();\n        (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n      }\n    }\n    if (!this.isVoidElement(name)) {\n      this.stack.unshift(name);\n      if (this.htmlMode) {\n        if (foreignContextElements.has(name)) {\n          this.foreignContext.unshift(true);\n        } else if (htmlIntegrationElements.has(name)) {\n          this.foreignContext.unshift(false);\n        }\n      }\n    }\n    (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n    if (this.cbs.onopentag) this.attribs = {};\n  }\n  endOpenTag(isImplied) {\n    var _a, _b;\n    this.startIndex = this.openTagStart;\n    if (this.attribs) {\n      (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n      this.attribs = null;\n    }\n    if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n      this.cbs.onclosetag(this.tagname, true);\n    }\n    this.tagname = \"\";\n  }\n  /** @internal */\n  onopentagend(endIndex) {\n    this.endIndex = endIndex;\n    this.endOpenTag(false);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onclosetag(start, endIndex) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    this.endIndex = endIndex;\n    let name = this.getSlice(start, endIndex);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    if (this.htmlMode && (foreignContextElements.has(name) || htmlIntegrationElements.has(name))) {\n      this.foreignContext.shift();\n    }\n    if (!this.isVoidElement(name)) {\n      const pos = this.stack.indexOf(name);\n      if (pos !== -1) {\n        for (let index = 0; index <= pos; index++) {\n          const element = this.stack.shift();\n          // We know the stack has sufficient elements.\n          (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n        }\n      } else if (this.htmlMode && name === \"p\") {\n        // Implicit open before close\n        this.emitOpenTag(\"p\");\n        this.closeCurrentTag(true);\n      }\n    } else if (this.htmlMode && name === \"br\") {\n      // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n      (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n      (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n      (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onselfclosingtag(endIndex) {\n    this.endIndex = endIndex;\n    if (this.recognizeSelfClosing || this.foreignContext[0]) {\n      this.closeCurrentTag(false);\n      // Set `startIndex` for next node\n      this.startIndex = endIndex + 1;\n    } else {\n      // Ignore the fact that the tag is self-closing.\n      this.onopentagend(endIndex);\n    }\n  }\n  closeCurrentTag(isOpenImplied) {\n    var _a, _b;\n    const name = this.tagname;\n    this.endOpenTag(isOpenImplied);\n    // Self-closing tags will be on the top of the stack\n    if (this.stack[0] === name) {\n      // If the opening tag isn't implied, the closing tag has to be implied.\n      (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n      this.stack.shift();\n    }\n  }\n  /** @internal */\n  onattribname(start, endIndex) {\n    this.startIndex = start;\n    const name = this.getSlice(start, endIndex);\n    this.attribname = this.lowerCaseAttributeNames ? name.toLowerCase() : name;\n  }\n  /** @internal */\n  onattribdata(start, endIndex) {\n    this.attribvalue += this.getSlice(start, endIndex);\n  }\n  /** @internal */\n  onattribentity(cp) {\n    this.attribvalue += fromCodePoint(cp);\n  }\n  /** @internal */\n  onattribend(quote, endIndex) {\n    var _a, _b;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double ? '\"' : quote === QuoteType.Single ? \"'\" : quote === QuoteType.NoValue ? undefined : null);\n    if (this.attribs && !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n      this.attribs[this.attribname] = this.attribvalue;\n    }\n    this.attribvalue = \"\";\n  }\n  getInstructionName(value) {\n    const index = value.search(reNameEnd);\n    let name = index < 0 ? value : value.substr(0, index);\n    if (this.lowerCaseTagNames) {\n      name = name.toLowerCase();\n    }\n    return name;\n  }\n  /** @internal */\n  ondeclaration(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onprocessinginstruction(start, endIndex) {\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex);\n    if (this.cbs.onprocessinginstruction) {\n      const name = this.getInstructionName(value);\n      this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncomment(start, endIndex, offset) {\n    var _a, _b, _c, _d;\n    this.endIndex = endIndex;\n    (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n    (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  oncdata(start, endIndex, offset) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    this.endIndex = endIndex;\n    const value = this.getSlice(start, endIndex - offset);\n    if (!this.htmlMode || this.options.recognizeCDATA) {\n      (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n      (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n    } else {\n      (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n      (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n    }\n    // Set `startIndex` for next node\n    this.startIndex = endIndex + 1;\n  }\n  /** @internal */\n  onend() {\n    var _a, _b;\n    if (this.cbs.onclosetag) {\n      // Set the end index for all remaining tags\n      this.endIndex = this.startIndex;\n      for (let index = 0; index < this.stack.length; index++) {\n        this.cbs.onclosetag(this.stack[index], true);\n      }\n    }\n    (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n  /**\n   * Resets the parser to a blank state, ready to parse a new HTML document\n   */\n  reset() {\n    var _a, _b, _c, _d;\n    (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n    this.tokenizer.reset();\n    this.tagname = \"\";\n    this.attribname = \"\";\n    this.attribs = null;\n    this.stack.length = 0;\n    this.startIndex = 0;\n    this.endIndex = 0;\n    (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n    this.buffers.length = 0;\n    this.foreignContext.length = 0;\n    this.foreignContext.unshift(!this.htmlMode);\n    this.bufferOffset = 0;\n    this.writeIndex = 0;\n    this.ended = false;\n  }\n  /**\n   * Resets the parser, then parses a complete document and\n   * pushes it to the handler.\n   *\n   * @param data Document to parse.\n   */\n  parseComplete(data) {\n    this.reset();\n    this.end(data);\n  }\n  getSlice(start, end) {\n    while (start - this.bufferOffset >= this.buffers[0].length) {\n      this.shiftBuffer();\n    }\n    let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n    while (end - this.bufferOffset > this.buffers[0].length) {\n      this.shiftBuffer();\n      slice += this.buffers[0].slice(0, end - this.bufferOffset);\n    }\n    return slice;\n  }\n  shiftBuffer() {\n    this.bufferOffset += this.buffers[0].length;\n    this.writeIndex--;\n    this.buffers.shift();\n  }\n  /**\n   * Parses a chunk of data and calls the corresponding callbacks.\n   *\n   * @param chunk Chunk to parse.\n   */\n  write(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n      return;\n    }\n    this.buffers.push(chunk);\n    if (this.tokenizer.running) {\n      this.tokenizer.write(chunk);\n      this.writeIndex++;\n    }\n  }\n  /**\n   * Parses the end of the buffer and clears the stack, calls onend.\n   *\n   * @param chunk Optional final chunk to parse.\n   */\n  end(chunk) {\n    var _a, _b;\n    if (this.ended) {\n      (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n      return;\n    }\n    if (chunk) this.write(chunk);\n    this.ended = true;\n    this.tokenizer.end();\n  }\n  /**\n   * Pauses parsing. The parser won't emit events until `resume` is called.\n   */\n  pause() {\n    this.tokenizer.pause();\n  }\n  /**\n   * Resumes parsing after `pause` was called.\n   */\n  resume() {\n    this.tokenizer.resume();\n    while (this.tokenizer.running && this.writeIndex < this.buffers.length) {\n      this.tokenizer.write(this.buffers[this.writeIndex++]);\n    }\n    if (this.ended) this.tokenizer.end();\n  }\n  /**\n   * Alias of `write`, for backwards compatibility.\n   *\n   * @param chunk Chunk to parse.\n   * @deprecated\n   */\n  parseChunk(chunk) {\n    this.write(chunk);\n  }\n  /**\n   * Alias of `end`, for backwards compatibility.\n   *\n   * @param chunk Optional final chunk to parse.\n   * @deprecated\n   */\n  done(chunk) {\n    this.end(chunk);\n  }\n}\n\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n */\nfunction parseDocument(data, options) {\n  const handler = new DomHandler(undefined, options);\n  new Parser(handler, options).end(data);\n  return handler.root;\n}\nvar picocolors_browserExports = requirePicocolors_browser();\nvar pc = /*@__PURE__*/getDefaultExportFromCjs(picocolors_browserExports);\nfunction parseStylesheet(stylesheet) {\n  return parse$2(stylesheet);\n}\nfunction serializeStylesheet(ast, options) {\n  const cssParts = [];\n  stringify(ast, (result, node, type) => {\n    if (node?.type === \"decl\" && node.value.includes(\"</style>\")) {\n      return;\n    }\n    if (!options.compress) {\n      cssParts.push(result);\n      return;\n    }\n    if (node?.type === \"comment\") return;\n    if (node?.type === \"decl\") {\n      const prefix = node.prop + node.raws.between;\n      cssParts.push(result.replace(prefix, prefix.trim()));\n      return;\n    }\n    if (type === \"start\") {\n      if (node?.type === \"rule\" && node.selectors) {\n        if (node.selectors.length === 1) {\n          cssParts.push(node.selectors[0] ?? \"\", \"{\");\n        } else {\n          cssParts.push(node.selectors.join(\",\"), \"{\");\n        }\n      } else {\n        cssParts.push(result.trim());\n      }\n      return;\n    }\n    if (type === \"end\" && result === \"}\" && node?.raws?.semicolon) {\n      const lastItemIdx = cssParts.length - 2;\n      if (lastItemIdx >= 0 && cssParts[lastItemIdx]) {\n        cssParts[lastItemIdx] = cssParts[lastItemIdx].slice(0, -1);\n      }\n    }\n    cssParts.push(result.trim());\n  });\n  return cssParts.join(\"\");\n}\nfunction markOnly(predicate) {\n  return rule => {\n    const sel = \"selectors\" in rule ? rule.selectors : void 0;\n    if (predicate(rule) === false) {\n      rule.$$remove = true;\n    }\n    if (\"selectors\" in rule) {\n      rule.$$markedSelectors = rule.selectors;\n      rule.selectors = sel;\n    }\n    if (rule._other) {\n      rule._other.$$markedSelectors = rule._other.selectors;\n    }\n  };\n}\nfunction applyMarkedSelectors(rule) {\n  if (rule.$$markedSelectors) {\n    rule.selectors = rule.$$markedSelectors;\n  }\n  if (rule._other) {\n    applyMarkedSelectors(rule._other);\n  }\n}\nfunction walkStyleRules(node, iterator) {\n  if (!(\"nodes\" in node)) {\n    return;\n  }\n  node.nodes = node.nodes?.filter(rule => {\n    if (hasNestedRules(rule)) {\n      walkStyleRules(rule, iterator);\n    }\n    rule._other = void 0;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\nfunction walkStyleRulesWithReverseMirror(node, node2, iterator) {\n  if (!node2) return walkStyleRules(node, iterator);\n  [node.nodes, node2.nodes] = splitFilter(node.nodes, node2.nodes, (rule, index, _rules, rules2) => {\n    const rule2 = rules2?.[index];\n    if (hasNestedRules(rule)) {\n      walkStyleRulesWithReverseMirror(rule, rule2, iterator);\n    }\n    rule._other = rule2;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\nfunction hasNestedRules(rule) {\n  return \"nodes\" in rule && !!rule.nodes?.length && (!(\"name\" in rule) || rule.name !== \"keyframes\" && rule.name !== \"-webkit-keyframes\") && rule.nodes.some(n => n.type === \"rule\" || n.type === \"atrule\");\n}\nfunction splitFilter(a, b, predicate) {\n  const aOut = [];\n  const bOut = [];\n  for (let index = 0; index < a.length; index++) {\n    const item = a[index];\n    if (predicate(item, index, a, b)) {\n      aOut.push(item);\n    } else {\n      bOut.push(item);\n    }\n  }\n  return [aOut, bOut];\n}\nfunction filterSelectors(predicate) {\n  if (this._other) {\n    const [a, b] = splitFilter(this.selectors, this._other.selectors, predicate);\n    this.selectors = a;\n    this._other.selectors = b;\n  } else {\n    this.selectors = this.selectors.filter(predicate);\n  }\n}\nconst MEDIA_TYPES = /* @__PURE__ */new Set([\"all\", \"print\", \"screen\", \"speech\"]);\nconst MEDIA_KEYWORDS = /* @__PURE__ */new Set([\"and\", \"not\", \",\"]);\nconst MEDIA_FEATURES = new Set([\"width\", \"aspect-ratio\", \"color\", \"color-index\", \"grid\", \"height\", \"monochrome\", \"orientation\", \"resolution\", \"scan\"].flatMap(feature => [feature, `min-${feature}`, `max-${feature}`]));\nfunction validateMediaType(node) {\n  const {\n    type: nodeType,\n    value: nodeValue\n  } = node;\n  if (nodeType === \"media-type\") {\n    return MEDIA_TYPES.has(nodeValue);\n  } else if (nodeType === \"keyword\") {\n    return MEDIA_KEYWORDS.has(nodeValue);\n  } else if (nodeType === \"media-feature\") {\n    return MEDIA_FEATURES.has(nodeValue);\n  }\n}\nfunction validateMediaQuery(query) {\n  const mediaParserFn = \"default\" in mediaParser ? mediaParser.default : mediaParser;\n  const mediaTree = mediaParserFn(query);\n  const nodeTypes = /* @__PURE__ */new Set([\"media-type\", \"keyword\", \"media-feature\"]);\n  const stack = [mediaTree];\n  while (stack.length > 0) {\n    const node = stack.pop();\n    if (nodeTypes.has(node.type) && !validateMediaType(node)) {\n      return false;\n    }\n    if (node.nodes) {\n      stack.push(...node.nodes);\n    }\n  }\n  return true;\n}\nlet classCache = null;\nlet idCache = null;\nfunction buildCache(container) {\n  classCache = /* @__PURE__ */new Set();\n  idCache = /* @__PURE__ */new Set();\n  const queue = [container];\n  while (queue.length) {\n    const node = queue.shift();\n    if (node.hasAttribute?.(\"class\")) {\n      const classList = node.getAttribute(\"class\").trim().split(\" \");\n      classList.forEach(cls => {\n        classCache.add(cls);\n      });\n    }\n    if (node.hasAttribute?.(\"id\")) {\n      const id = node.getAttribute(\"id\").trim();\n      idCache.add(id);\n    }\n    if (\"children\" in node) {\n      queue.push(...node.children.filter(child => child.type === \"tag\"));\n    }\n  }\n}\nfunction createDocument(html) {\n  const document = parseDocument(html, {\n    decodeEntities: false\n  });\n  extendDocument(document);\n  extendElement(Element.prototype);\n  let beastiesContainer = document.querySelector(\"[data-beasties-container]\");\n  if (!beastiesContainer) {\n    document.documentElement?.setAttribute(\"data-beasties-container\", \"\");\n    beastiesContainer = document.documentElement || document;\n  }\n  document.beastiesContainer = beastiesContainer;\n  buildCache(beastiesContainer);\n  return document;\n}\nfunction serializeDocument(document) {\n  return render(document, {\n    decodeEntities: false\n  });\n}\nlet extended = false;\nfunction extendElement(element) {\n  if (extended) {\n    return;\n  }\n  extended = true;\n  Object.defineProperties(element, {\n    nodeName: {\n      get() {\n        return this.tagName.toUpperCase();\n      }\n    },\n    id: {\n      get() {\n        return this.getAttribute(\"id\");\n      },\n      set(value) {\n        this.setAttribute(\"id\", value);\n      }\n    },\n    className: {\n      get() {\n        return this.getAttribute(\"class\");\n      },\n      set(value) {\n        this.setAttribute(\"class\", value);\n      }\n    },\n    insertBefore: {\n      value(child, referenceNode) {\n        if (!referenceNode) return this.appendChild(child);\n        prepend(referenceNode, child);\n        return child;\n      }\n    },\n    appendChild: {\n      value(child) {\n        appendChild(this, child);\n        return child;\n      }\n    },\n    removeChild: {\n      value(child) {\n        removeElement(child);\n      }\n    },\n    remove: {\n      value() {\n        removeElement(this);\n      }\n    },\n    textContent: {\n      get() {\n        return getText(this);\n      },\n      set(text) {\n        this.children = [];\n        appendChild(this, new Text(text));\n      }\n    },\n    setAttribute: {\n      value(name, value) {\n        if (this.attribs == null) this.attribs = {};\n        if (value == null) value = \"\";\n        this.attribs[name] = value;\n      }\n    },\n    removeAttribute: {\n      value(name) {\n        if (this.attribs != null) {\n          delete this.attribs[name];\n        }\n      }\n    },\n    getAttribute: {\n      value(name) {\n        return this.attribs != null && this.attribs[name];\n      }\n    },\n    hasAttribute: {\n      value(name) {\n        return this.attribs != null && this.attribs[name] != null;\n      }\n    },\n    getAttributeNode: {\n      value(name) {\n        const value = this.getAttribute(name);\n        if (value != null) return {\n          specified: true,\n          value\n        };\n      }\n    },\n    exists: {\n      value(sel) {\n        return cachedQuerySelector(sel, this);\n      }\n    },\n    querySelector: {\n      value(sel) {\n        return selectOne(sel, this);\n      }\n    },\n    querySelectorAll: {\n      value(sel) {\n        return selectAll(sel, this);\n      }\n    }\n  });\n}\nfunction extendDocument(document) {\n  Object.defineProperties(document, {\n    // document is just an Element in htmlparser2, giving it a nodeType of ELEMENT_NODE.\n    // TODO: verify if these are needed for css-select\n    nodeType: {\n      get() {\n        return 9;\n      }\n    },\n    contentType: {\n      get() {\n        return \"text/html\";\n      }\n    },\n    nodeName: {\n      get() {\n        return \"#document\";\n      }\n    },\n    documentElement: {\n      get() {\n        return this.children.find(child => \"tagName\" in child && String(child.tagName).toLowerCase() === \"html\");\n      }\n    },\n    head: {\n      get() {\n        return this.querySelector(\"head\");\n      }\n    },\n    body: {\n      get() {\n        return this.querySelector(\"body\");\n      }\n    },\n    createElement: {\n      value(name) {\n        return new Element(name, {});\n      }\n    },\n    createTextNode: {\n      value(text) {\n        return new Text(text);\n      }\n    },\n    exists: {\n      value(sel) {\n        return cachedQuerySelector(sel, this);\n      }\n    },\n    querySelector: {\n      value(sel) {\n        return selectOne(sel, this);\n      }\n    },\n    querySelectorAll: {\n      value(sel) {\n        if (sel === \":root\") {\n          return this;\n        }\n        return selectAll(sel, this);\n      }\n    }\n  });\n}\nconst selectorTokensCache = /* @__PURE__ */new Map();\nfunction cachedQuerySelector(sel, node) {\n  let selectorTokens = selectorTokensCache.get(sel);\n  if (selectorTokens === void 0) {\n    selectorTokens = parseRelevantSelectors(sel);\n    selectorTokensCache.set(sel, selectorTokens);\n  }\n  if (selectorTokens) {\n    for (const token of selectorTokens) {\n      if (token.name === \"class\") {\n        return classCache.has(token.value);\n      }\n      if (token.name === \"id\") {\n        return idCache.has(token.value);\n      }\n    }\n  }\n  return !!selectOne(sel, node);\n}\nfunction parseRelevantSelectors(sel) {\n  const tokens = parse$1(sel);\n  const relevantTokens = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const tokenGroup = tokens[i];\n    if (tokenGroup?.length !== 1) {\n      continue;\n    }\n    const token = tokenGroup[0];\n    if (token?.type === \"attribute\" && (token.name === \"class\" || token.name === \"id\")) {\n      relevantTokens.push(token);\n    }\n  }\n  return relevantTokens.length > 0 ? relevantTokens : null;\n}\nconst LOG_LEVELS = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"silent\"];\nconst defaultLogger = {\n  trace(msg) {\n    console.trace(msg);\n  },\n  debug(msg) {\n    console.debug(msg);\n  },\n  warn(msg) {\n    console.warn(pc.yellow(msg));\n  },\n  error(msg) {\n    console.error(pc.bold(pc.red(msg)));\n  },\n  info(msg) {\n    console.info(pc.bold(pc.blue(msg)));\n  },\n  silent() {}\n};\nfunction createLogger(logLevel) {\n  const logLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  return LOG_LEVELS.reduce((logger, type, index) => {\n    if (index >= logLevelIdx) {\n      logger[type] = defaultLogger[type];\n    } else {\n      logger[type] = defaultLogger.silent;\n    }\n    return logger;\n  }, {});\n}\nfunction isSubpath(basePath, currentPath) {\n  return !_pathModule.relative(basePath, currentPath).startsWith(\"..\");\n}\nconst removePseudoClassesAndElementsPattern = /(?<!\\\\)::?[a-z-]+(?:\\(.+\\))?/gi;\nconst doubleNestingPattern = />\\s*(?=>|$)/g;\nconst removeTrailingCommasPattern = /\\(\\s*,|,\\s*\\)/g;\nclass Beasties {\n  #selectorCache = /* @__PURE__ */new Map();\n  options;\n  logger;\n  fs;\n  constructor(options = {}) {\n    this.options = Object.assign({\n      logLevel: \"info\",\n      path: \"\",\n      publicPath: \"\",\n      reduceInlineStyles: true,\n      pruneSource: false,\n      additionalStylesheets: [],\n      allowRules: []\n    }, options);\n    this.logger = this.options.logger || createLogger(this.options.logLevel);\n  }\n  /**\n   * Read the contents of a file from the specified filesystem or disk\n   */\n  readFile(filename) {\n    const fs = this.fs;\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err) reject(err);else resolve(data.toString());\n      };\n      if (fs && fs.readFile) {\n        fs.readFile(filename, callback);\n      } else {\n        readFile(filename, \"utf-8\", callback);\n      }\n    });\n  }\n  /**\n   * Apply critical CSS processing to the html\n   */\n  async process(html) {\n    const start = Date.now();\n    const document = createDocument(html);\n    if (this.options.additionalStylesheets.length > 0) {\n      await this.embedAdditionalStylesheet(document);\n    }\n    if (this.options.external !== false) {\n      const externalSheets = [...document.querySelectorAll('link[rel=\"stylesheet\"]')];\n      await Promise.all(externalSheets.map(link => this.embedLinkedStylesheet(link, document)));\n    }\n    const styles = this.getAffectedStyleTags(document);\n    for (const style of styles) {\n      this.processStyle(style, document);\n    }\n    if (this.options.mergeStylesheets !== false && styles.length !== 0) {\n      this.mergeStylesheets(document);\n    }\n    const output = serializeDocument(document);\n    const end = Date.now();\n    this.logger.info?.(`Time ${end - start}ms`);\n    return output;\n  }\n  /**\n   * Get the style tags that need processing\n   */\n  getAffectedStyleTags(document) {\n    const styles = [...document.querySelectorAll(\"style\")];\n    if (this.options.reduceInlineStyles === false) {\n      return styles.filter(style => style.$$external);\n    }\n    return styles;\n  }\n  mergeStylesheets(document) {\n    const styles = this.getAffectedStyleTags(document);\n    if (styles.length === 0) {\n      this.logger.warn?.(\"Merging inline stylesheets into a single <style> tag skipped, no inline stylesheets to merge\");\n      return;\n    }\n    const first = styles[0];\n    let sheet = first.textContent;\n    for (let i = 1; i < styles.length; i++) {\n      const node = styles[i];\n      sheet += node.textContent;\n      node.remove();\n    }\n    first.textContent = sheet;\n  }\n  /**\n   * Given href, find the corresponding CSS asset\n   */\n  async getCssAsset(href, _style) {\n    const outputPath = this.options.path;\n    const publicPath = this.options.publicPath;\n    let normalizedPath = href.replace(/^\\//, \"\");\n    const pathPrefix = `${(publicPath || \"\").replace(/(^\\/|\\/$)/g, \"\")}/`;\n    if (normalizedPath.startsWith(pathPrefix)) {\n      normalizedPath = normalizedPath.substring(pathPrefix.length).replace(/^\\//, \"\");\n    }\n    if (/^https?:\\/\\//.test(normalizedPath) || href.startsWith(\"//\")) {\n      return void 0;\n    }\n    const filename = _pathModule.resolve(outputPath, normalizedPath);\n    if (!isSubpath(outputPath, filename)) {\n      return void 0;\n    }\n    let sheet;\n    try {\n      sheet = await this.readFile(filename);\n    } catch {\n      this.logger.warn?.(`Unable to locate stylesheet: ${filename}`);\n    }\n    return sheet;\n  }\n  checkInlineThreshold(link, style, sheet) {\n    if (this.options.inlineThreshold && sheet.length < this.options.inlineThreshold) {\n      const href = style.$$name;\n      style.$$reduce = false;\n      this.logger.info?.(`\\x1B[32mInlined all of ${href} (${sheet.length} was below the threshold of ${this.options.inlineThreshold})\\x1B[39m`);\n      link.remove();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Inline the stylesheets from options.additionalStylesheets (assuming it passes `options.filter`)\n   */\n  async embedAdditionalStylesheet(document) {\n    const styleSheetsIncluded = [];\n    const sources = await Promise.all(this.options.additionalStylesheets.map(cssFile => {\n      if (styleSheetsIncluded.includes(cssFile)) {\n        return [];\n      }\n      styleSheetsIncluded.push(cssFile);\n      const style = document.createElement(\"style\");\n      style.$$external = true;\n      return this.getCssAsset(cssFile, style).then(sheet => [sheet, style]);\n    }));\n    for (const [sheet, style] of sources) {\n      if (sheet) {\n        style.textContent = sheet;\n        document.head.appendChild(style);\n      }\n    }\n  }\n  /**\n   * Inline the target stylesheet referred to by a <link rel=\"stylesheet\"> (assuming it passes `options.filter`)\n   */\n  async embedLinkedStylesheet(link, document) {\n    const href = link.getAttribute(\"href\");\n    if (!href?.endsWith(\".css\")) {\n      return void 0;\n    }\n    const style = document.createElement(\"style\");\n    style.$$external = true;\n    const sheet = await this.getCssAsset(href, style);\n    if (!sheet) {\n      return;\n    }\n    style.textContent = sheet;\n    style.$$name = href;\n    style.$$links = [link];\n    link.parentNode?.insertBefore(style, link);\n    if (this.checkInlineThreshold(link, style, sheet)) {\n      return;\n    }\n    let media = link.getAttribute(\"media\");\n    if (media && !validateMediaQuery(media)) {\n      media = void 0;\n    }\n    const preloadMode = this.options.preload;\n    let cssLoaderPreamble = \"function $loadcss(u,m,l){(l=document.createElement('link')).rel='stylesheet';l.href=u;document.head.appendChild(l)}\";\n    const lazy = preloadMode === \"js-lazy\";\n    if (lazy) {\n      cssLoaderPreamble = cssLoaderPreamble.replace(\"l.href\", \"l.media='print';l.onload=function(){l.media=m};l.href\");\n    }\n    if (preloadMode === false) return;\n    let noscriptFallback = false;\n    let updateLinkToPreload = false;\n    const noscriptLink = link.cloneNode(false);\n    if (preloadMode === \"body\") {\n      document.body.appendChild(link);\n    } else {\n      if (preloadMode === \"js\" || preloadMode === \"js-lazy\") {\n        const script = document.createElement(\"script\");\n        script.setAttribute(\"data-href\", href);\n        script.setAttribute(\"data-media\", media || \"all\");\n        const js = `${cssLoaderPreamble}$loadcss(document.currentScript.dataset.href,document.currentScript.dataset.media)`;\n        script.textContent = js;\n        link.parentNode.insertBefore(script, link.nextSibling);\n        style.$$links.push(script);\n        cssLoaderPreamble = \"\";\n        noscriptFallback = true;\n        updateLinkToPreload = true;\n      } else if (preloadMode === \"media\") {\n        link.setAttribute(\"media\", \"print\");\n        link.setAttribute(\"onload\", `this.media='${media || \"all\"}'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap-high\") {\n        link.setAttribute(\"rel\", \"alternate stylesheet preload\");\n        link.setAttribute(\"title\", \"styles\");\n        link.setAttribute(\"onload\", `this.title='';this.rel='stylesheet'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap-low\") {\n        link.setAttribute(\"rel\", \"alternate stylesheet\");\n        link.setAttribute(\"title\", \"styles\");\n        link.setAttribute(\"onload\", `this.title='';this.rel='stylesheet'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap\") {\n        link.setAttribute(\"onload\", \"this.rel='stylesheet'\");\n        updateLinkToPreload = true;\n        noscriptFallback = true;\n      } else {\n        const bodyLink = link.cloneNode(false);\n        bodyLink.removeAttribute(\"id\");\n        document.body.appendChild(bodyLink);\n        style.$$links.push(bodyLink);\n        updateLinkToPreload = true;\n      }\n    }\n    if (this.options.noscriptFallback !== false && noscriptFallback && !href.includes(\"</noscript>\")) {\n      const noscript = document.createElement(\"noscript\");\n      noscriptLink.removeAttribute(\"id\");\n      noscript.appendChild(noscriptLink);\n      link.parentNode.insertBefore(noscript, link.nextSibling);\n      style.$$links.push(noscript);\n    }\n    if (updateLinkToPreload) {\n      link.setAttribute(\"rel\", \"preload\");\n      link.setAttribute(\"as\", \"style\");\n    }\n  }\n  /**\n   * Prune the source CSS files\n   */\n  pruneSource(style, before, sheetInverse) {\n    const minSize = this.options.minimumExternalSize;\n    const name = style.$$name;\n    const shouldInline = minSize && sheetInverse.length < minSize;\n    if (shouldInline) {\n      this.logger.info?.(`\\x1B[32mInlined all of ${name} (non-critical external stylesheet would have been ${sheetInverse.length}b, which was below the threshold of ${minSize})\\x1B[39m`);\n    }\n    if (shouldInline || !sheetInverse) {\n      style.textContent = before;\n      if (style.$$links) {\n        for (const link of style.$$links) {\n          const parent = link.parentNode;\n          parent?.removeChild(link);\n        }\n      }\n    }\n    return !!shouldInline;\n  }\n  /**\n   * Parse the stylesheet within a <style> element, then reduce it to contain only rules used by the document.\n   */\n  processStyle(style, document) {\n    if (style.$$reduce === false) return;\n    const name = style.$$name ? style.$$name.replace(/^\\//, \"\") : \"inline CSS\";\n    const options = this.options;\n    const beastiesContainer = document.beastiesContainer;\n    let keyframesMode = options.keyframes ?? \"critical\";\n    if (keyframesMode === true) keyframesMode = \"all\";\n    if (keyframesMode === false) keyframesMode = \"none\";\n    let sheet = style.textContent;\n    const before = sheet;\n    if (!sheet) return;\n    const ast = parseStylesheet(sheet);\n    const astInverse = options.pruneSource ? parseStylesheet(sheet) : null;\n    let criticalFonts = \"\";\n    const failedSelectors = [];\n    const criticalKeyframeNames = /* @__PURE__ */new Set();\n    let includeNext = false;\n    let includeAll = false;\n    let excludeNext = false;\n    let excludeAll = false;\n    const shouldPreloadFonts = options.fonts === true || options.preloadFonts === true;\n    const shouldInlineFonts = options.fonts !== false && options.inlineFonts === true;\n    walkStyleRules(ast, markOnly(rule => {\n      if (rule.type === \"comment\") {\n        const beastiesComment = rule.text.match(/^(?<!! )beasties:(.*)/);\n        const command = beastiesComment && beastiesComment[1];\n        if (command) {\n          switch (command) {\n            case \"include\":\n              includeNext = true;\n              break;\n            case \"exclude\":\n              excludeNext = true;\n              break;\n            case \"include start\":\n              includeAll = true;\n              break;\n            case \"include end\":\n              includeAll = false;\n              break;\n            case \"exclude start\":\n              excludeAll = true;\n              break;\n            case \"exclude end\":\n              excludeAll = false;\n              break;\n          }\n        }\n      }\n      if (rule.type === \"rule\") {\n        if (includeNext) {\n          includeNext = false;\n          return true;\n        }\n        if (excludeNext) {\n          excludeNext = false;\n          return false;\n        }\n        if (includeAll) {\n          return true;\n        }\n        if (excludeAll) {\n          return false;\n        }\n        rule.filterSelectors?.(sel => {\n          const isAllowedRule = options.allowRules.some(exp => {\n            if (exp instanceof RegExp) {\n              return exp.test(sel);\n            }\n            return exp === sel;\n          });\n          if (isAllowedRule) return true;\n          if (sel === \":root\" || sel === \"html\" || sel === \"body\" || sel[0] === \":\" && /^::?(?:before|after)$/.test(sel)) {\n            return true;\n          }\n          sel = this.normalizeCssSelector(sel);\n          if (!sel) return false;\n          try {\n            return beastiesContainer.exists(sel);\n          } catch (e) {\n            failedSelectors.push(`${sel} -> ${e.message || e.toString()}`);\n            return false;\n          }\n        });\n        if (!rule.selector) {\n          return false;\n        }\n        if (rule.nodes) {\n          for (const decl of rule.nodes) {\n            if (!(\"prop\" in decl)) {\n              continue;\n            }\n            if (shouldInlineFonts && /\\bfont(?:-family)?\\b/i.test(decl.prop)) {\n              criticalFonts += ` ${decl.value}`;\n            }\n            if (decl.prop === \"animation\" || decl.prop === \"animation-name\") {\n              for (const name2 of decl.value.split(/\\s+/)) {\n                const nameTrimmed = name2.trim();\n                if (nameTrimmed) criticalKeyframeNames.add(nameTrimmed);\n              }\n            }\n          }\n        }\n      }\n      if (rule.type === \"atrule\" && (rule.name === \"font-face\" || rule.name === \"layer\")) return;\n      const hasRemainingRules = (\"nodes\" in rule && rule.nodes?.some(rule2 => !rule2.$$remove)) ?? true;\n      return hasRemainingRules;\n    }));\n    if (failedSelectors.length !== 0) {\n      this.logger.warn?.(`${failedSelectors.length} rules skipped due to selector errors:\n  ${failedSelectors.join(\"\\n  \")}`);\n    }\n    const preloadedFonts = /* @__PURE__ */new Set();\n    walkStyleRulesWithReverseMirror(ast, astInverse, rule => {\n      if (rule.$$remove === true) return false;\n      if (\"selectors\" in rule) {\n        applyMarkedSelectors(rule);\n      }\n      if (rule.type === \"atrule\" && rule.name === \"keyframes\") {\n        if (keyframesMode === \"none\") return false;\n        if (keyframesMode === \"all\") return true;\n        return criticalKeyframeNames.has(rule.params);\n      }\n      if (rule.type === \"atrule\" && rule.name === \"font-face\") {\n        let family, src;\n        if (rule.nodes) {\n          for (const decl of rule.nodes) {\n            if (!(\"prop\" in decl)) {\n              continue;\n            }\n            if (decl.prop === \"src\") {\n              src = (decl.value.match(/url\\s*\\(\\s*(['\"]?)(.+?)\\1\\s*\\)/) || [])[2];\n            } else if (decl.prop === \"font-family\") {\n              family = decl.value;\n            }\n          }\n          if (src && shouldPreloadFonts && !preloadedFonts.has(src)) {\n            preloadedFonts.add(src);\n            const preload = document.createElement(\"link\");\n            preload.setAttribute(\"rel\", \"preload\");\n            preload.setAttribute(\"as\", \"font\");\n            preload.setAttribute(\"crossorigin\", \"anonymous\");\n            preload.setAttribute(\"href\", src.trim());\n            document.head.appendChild(preload);\n          }\n        }\n        if (!shouldInlineFonts || !family || !src || !criticalFonts.includes(family)) {\n          return false;\n        }\n      }\n    });\n    sheet = serializeStylesheet(ast, {\n      compress: this.options.compress !== false\n    });\n    if (sheet.trim().length === 0) {\n      if (style.parentNode) {\n        style.remove();\n      }\n      return;\n    }\n    let afterText = \"\";\n    let styleInlinedCompletely = false;\n    if (options.pruneSource) {\n      const sheetInverse = serializeStylesheet(astInverse, {\n        compress: this.options.compress !== false\n      });\n      styleInlinedCompletely = this.pruneSource(style, before, sheetInverse);\n      if (styleInlinedCompletely) {\n        const percent2 = sheetInverse.length / before.length * 100;\n        afterText = `, reducing non-inlined size ${percent2 | 0}% to ${formatSize(sheetInverse.length)}`;\n      }\n    }\n    if (!styleInlinedCompletely) {\n      style.textContent = sheet;\n    }\n    const percent = sheet.length / before.length * 100 | 0;\n    this.logger.info?.(`\\x1B[32mInlined ${formatSize(sheet.length)} (${percent}% of original ${formatSize(before.length)}) of ${name}${afterText}.\\x1B[39m`);\n  }\n  normalizeCssSelector(sel) {\n    let normalizedSelector = this.#selectorCache.get(sel);\n    if (normalizedSelector !== void 0) {\n      return normalizedSelector;\n    }\n    normalizedSelector = sel.replace(removePseudoClassesAndElementsPattern, \"\").replace(removeTrailingCommasPattern, match => match.includes(\"(\") ? \"(\" : \")\").replace(doubleNestingPattern, \"> *\").trim();\n    this.#selectorCache.set(sel, normalizedSelector);\n    return normalizedSelector;\n  }\n}\nfunction formatSize(size) {\n  if (size <= 0) {\n    return \"0 bytes\";\n  }\n  const abbreviations = [\"bytes\", \"kB\", \"MB\", \"GB\"];\n  const index = Math.floor(Math.log(size) / Math.log(1024));\n  const roundedSize = size / 1024 ** index;\n  const fractionDigits = index === 0 ? 0 : 2;\n  return `${roundedSize.toFixed(fractionDigits)} ${abbreviations[index]}`;\n}\nexport { Beasties as default };\n", "import { ɵConsole as _Console, InjectionToken, makeEnvironmentProviders, ɵENABLE_ROOT_COMPONENT_BOOTSTRAP as _ENABLE_ROOT_COMPONENT_BOOTSTRAP, ApplicationRef, Compiler, runInInjectionContext, ɵresetCompiledComponents as _resetCompiledComponents, REQUEST, REQUEST_CONTEXT, RESPONSE_INIT, LOCALE_ID } from '@angular/core';\nimport { ROUTES, Router, ɵloadChildren as _loadChildren } from '@angular/router';\nimport { APP_BASE_HREF, PlatformLocation } from '@angular/common';\nimport { renderModule, renderApplication, ɵSERVER_CONTEXT as _SERVER_CONTEXT, platformServer, INITIAL_CONFIG } from '@angular/platform-server';\nimport Beasties from '../third_party/beasties/index.js';\n\n/**\n * Manages server-side assets.\n */\nclass ServerAssets {\n  manifest;\n  /**\n   * Creates an instance of ServerAsset.\n   *\n   * @param manifest - The manifest containing the server assets.\n   */\n  constructor(manifest) {\n    this.manifest = manifest;\n  }\n  /**\n   * Retrieves the content of a server-side asset using its path.\n   *\n   * @param path - The path to the server asset within the manifest.\n   * @returns The server asset associated with the provided path, as a `ServerAsset` object.\n   * @throws Error - Throws an error if the asset does not exist.\n   */\n  getServerAsset(path) {\n    const asset = this.manifest.assets[path];\n    if (!asset) {\n      throw new Error(`Server asset '${path}' does not exist.`);\n    }\n    return asset;\n  }\n  /**\n   * Checks if a specific server-side asset exists.\n   *\n   * @param path - The path to the server asset.\n   * @returns A boolean indicating whether the asset exists.\n   */\n  hasServerAsset(path) {\n    return !!this.manifest.assets[path];\n  }\n  /**\n   * Retrieves the asset for 'index.server.html'.\n   *\n   * @returns The `ServerAsset` object for 'index.server.html'.\n   * @throws Error - Throws an error if 'index.server.html' does not exist.\n   */\n  getIndexServerHtml() {\n    return this.getServerAsset('index.server.html');\n  }\n}\n\n/**\n * A set of log messages that should be ignored and not printed to the console.\n */\nconst IGNORED_LOGS = new Set(['Angular is running in development mode.']);\n/**\n * Custom implementation of the Angular Console service that filters out specific log messages.\n *\n * This class extends the internal Angular `ɵConsole` class to provide customized logging behavior.\n * It overrides the `log` method to suppress logs that match certain predefined messages.\n */\nclass Console extends _Console {\n  /**\n   * Logs a message to the console if it is not in the set of ignored messages.\n   *\n   * @param message - The message to log to the console.\n   *\n   * This method overrides the `log` method of the `ɵConsole` class. It checks if the\n   * message is in the `IGNORED_LOGS` set. If it is not, it delegates the logging to\n   * the parent class's `log` method. Otherwise, the message is suppressed.\n   */\n  log(message) {\n    if (!IGNORED_LOGS.has(message)) {\n      super.log(message);\n    }\n  }\n}\n\n/**\n * The Angular app manifest object.\n * This is used internally to store the current Angular app manifest.\n */\nlet angularAppManifest;\n/**\n * Sets the Angular app manifest.\n *\n * @param manifest - The manifest object to set for the Angular application.\n */\nfunction setAngularAppManifest(manifest) {\n  angularAppManifest = manifest;\n}\n/**\n * Gets the Angular app manifest.\n *\n * @returns The Angular app manifest.\n * @throws Will throw an error if the Angular app manifest is not set.\n */\nfunction getAngularAppManifest() {\n  if (!angularAppManifest) {\n    throw new Error('Angular app manifest is not set. ' + `Please ensure you are using the '@angular/build:application' builder to build your server application.`);\n  }\n  return angularAppManifest;\n}\n/**\n * The Angular app engine manifest object.\n * This is used internally to store the current Angular app engine manifest.\n */\nlet angularAppEngineManifest;\n/**\n * Sets the Angular app engine manifest.\n *\n * @param manifest - The engine manifest object to set.\n */\nfunction setAngularAppEngineManifest(manifest) {\n  angularAppEngineManifest = manifest;\n}\n/**\n * Gets the Angular app engine manifest.\n *\n * @returns The Angular app engine manifest.\n * @throws Will throw an error if the Angular app engine manifest is not set.\n */\nfunction getAngularAppEngineManifest() {\n  if (!angularAppEngineManifest) {\n    throw new Error('Angular app engine manifest is not set. ' + `Please ensure you are using the '@angular/build:application' builder to build your server application.`);\n  }\n  return angularAppEngineManifest;\n}\n\n/**\n * Removes the trailing slash from a URL if it exists.\n *\n * @param url - The URL string from which to remove the trailing slash.\n * @returns The URL string without a trailing slash.\n *\n * @example\n * ```js\n * stripTrailingSlash('path/'); // 'path'\n * stripTrailingSlash('/path');  // '/path'\n * stripTrailingSlash('/'); // '/'\n * stripTrailingSlash(''); // ''\n * ```\n */\n/**\n * Removes the leading slash from a URL if it exists.\n *\n * @param url - The URL string from which to remove the leading slash.\n * @returns The URL string without a leading slash.\n *\n * @example\n * ```js\n * stripLeadingSlash('/path'); // 'path'\n * stripLeadingSlash('/path/');  // 'path/'\n * stripLeadingSlash('/'); // '/'\n * stripLeadingSlash(''); // ''\n * ```\n */\nfunction stripLeadingSlash(url) {\n  // Check if the first character of the URL is a slash\n  return url.length > 1 && url[0] === '/' ? url.slice(1) : url;\n}\n/**\n * Adds a leading slash to a URL if it does not already have one.\n *\n * @param url - The URL string to which the leading slash will be added.\n * @returns The URL string with a leading slash.\n *\n * @example\n * ```js\n * addLeadingSlash('path'); // '/path'\n * addLeadingSlash('/path'); // '/path'\n * ```\n */\nfunction addLeadingSlash(url) {\n  // Check if the URL already starts with a slash\n  return url[0] === '/' ? url : `/${url}`;\n}\n/**\n * Adds a trailing slash to a URL if it does not already have one.\n *\n * @param url - The URL string to which the trailing slash will be added.\n * @returns The URL string with a trailing slash.\n *\n * @example\n * ```js\n * addTrailingSlash('path'); // 'path/'\n * addTrailingSlash('path/'); // 'path/'\n * ```\n */\nfunction addTrailingSlash(url) {\n  // Check if the URL already end with a slash\n  return url[url.length - 1] === '/' ? url : `${url}/`;\n}\n/**\n * Joins URL parts into a single URL string.\n *\n * This function takes multiple URL segments, normalizes them by removing leading\n * and trailing slashes where appropriate, and then joins them into a single URL.\n *\n * @param parts - The parts of the URL to join. Each part can be a string with or without slashes.\n * @returns The joined URL string, with normalized slashes.\n *\n * @example\n * ```js\n * joinUrlParts('path/', '/to/resource'); // '/path/to/resource'\n * joinUrlParts('/path/', 'to/resource'); // '/path/to/resource'\n * joinUrlParts('', ''); // '/'\n * ```\n */\nfunction joinUrlParts(...parts) {\n  const normalizeParts = [];\n  for (const part of parts) {\n    if (part === '') {\n      // Skip any empty parts\n      continue;\n    }\n    let normalizedPart = part;\n    if (part[0] === '/') {\n      normalizedPart = normalizedPart.slice(1);\n    }\n    if (part[part.length - 1] === '/') {\n      normalizedPart = normalizedPart.slice(0, -1);\n    }\n    if (normalizedPart !== '') {\n      normalizeParts.push(normalizedPart);\n    }\n  }\n  return addLeadingSlash(normalizeParts.join('/'));\n}\n/**\n * Strips `/index.html` from the end of a URL's path, if present.\n *\n * This function is used to convert URLs pointing to an `index.html` file into their directory\n * equivalents. For example, it transforms a URL like `http://www.example.com/page/index.html`\n * into `http://www.example.com/page`.\n *\n * @param url - The URL object to process.\n * @returns A new URL object with `/index.html` removed from the path, if it was present.\n *\n * @example\n * ```typescript\n * const originalUrl = new URL('http://www.example.com/page/index.html');\n * const cleanedUrl = stripIndexHtmlFromURL(originalUrl);\n * console.log(cleanedUrl.href); // Output: 'http://www.example.com/page'\n * ```\n */\nfunction stripIndexHtmlFromURL(url) {\n  if (url.pathname.endsWith('/index.html')) {\n    const modifiedURL = new URL(url);\n    // Remove '/index.html' from the pathname\n    modifiedURL.pathname = modifiedURL.pathname.slice(0, /** '/index.html'.length */-11);\n    return modifiedURL;\n  }\n  return url;\n}\n/**\n * Resolves `*` placeholders in a path template by mapping them to corresponding segments\n * from a base path. This is useful for constructing paths dynamically based on a given base path.\n *\n * The function processes the `toPath` string, replacing each `*` placeholder with\n * the corresponding segment from the `fromPath`. If the `toPath` contains no placeholders,\n * it is returned as-is. Invalid `toPath` formats (not starting with `/`) will throw an error.\n *\n * @param toPath - A path template string that may contain `*` placeholders. Each `*` is replaced\n * by the corresponding segment from the `fromPath`. Static paths (e.g., `/static/path`) are returned\n * directly without placeholder replacement.\n * @param fromPath - A base path string, split into segments, that provides values for\n * replacing `*` placeholders in the `toPath`.\n * @returns A resolved path string with `*` placeholders replaced by segments from the `fromPath`,\n * or the `toPath` returned unchanged if it contains no placeholders.\n *\n * @throws If the `toPath` does not start with a `/`, indicating an invalid path format.\n *\n * @example\n * ```typescript\n * // Example with placeholders resolved\n * const resolvedPath = buildPathWithParams('/*\\/details', '/123/abc');\n * console.log(resolvedPath); // Outputs: '/123/details'\n *\n * // Example with a static path\n * const staticPath = buildPathWithParams('/static/path', '/base/unused');\n * console.log(staticPath); // Outputs: '/static/path'\n * ```\n */\nfunction buildPathWithParams(toPath, fromPath) {\n  if (toPath[0] !== '/') {\n    throw new Error(`Invalid toPath: The string must start with a '/'. Received: '${toPath}'`);\n  }\n  if (fromPath[0] !== '/') {\n    throw new Error(`Invalid fromPath: The string must start with a '/'. Received: '${fromPath}'`);\n  }\n  if (!toPath.includes('/*')) {\n    return toPath;\n  }\n  const fromPathParts = fromPath.split('/');\n  const toPathParts = toPath.split('/');\n  const resolvedParts = toPathParts.map((part, index) => toPathParts[index] === '*' ? fromPathParts[index] : part);\n  return joinUrlParts(...resolvedParts);\n}\n\n/**\n * Renders an Angular application or module to an HTML string.\n *\n * This function determines whether the provided `bootstrap` value is an Angular module\n * or a bootstrap function and calls the appropriate rendering method (`renderModule` or\n * `renderApplication`) based on that determination.\n *\n * @param html - The HTML string to be used as the initial document content.\n * @param bootstrap - Either an Angular module type or a function that returns a promise\n *                    resolving to an `ApplicationRef`.\n * @param url - The URL of the application. This is used for server-side rendering to\n *              correctly handle route-based rendering.\n * @param platformProviders - An array of platform providers to be used during the\n *                             rendering process.\n * @param serverContext - A string representing the server context, used to provide additional\n *                        context or metadata during server-side rendering.\n * @returns A promise that resolves to a string containing the rendered HTML.\n */\nfunction renderAngular(html, bootstrap, url, platformProviders, serverContext) {\n  const providers = [{\n    provide: _SERVER_CONTEXT,\n    useValue: serverContext\n  }, {\n    // An Angular Console Provider that does not print a set of predefined logs.\n    provide: _Console,\n    // Using `useClass` would necessitate decorating `Console` with `@Injectable`,\n    // which would require switching from `ts_library` to `ng_module`. This change\n    // would also necessitate various patches of `@angular/bazel` to support ESM.\n    useFactory: () => new Console()\n  }, ...platformProviders];\n  // A request to `http://www.example.com/page/index.html` will render the Angular route corresponding to `http://www.example.com/page`.\n  const urlToRender = stripIndexHtmlFromURL(url).toString();\n  return isNgModule(bootstrap) ? renderModule(bootstrap, {\n    url: urlToRender,\n    document: html,\n    extraProviders: providers\n  }) : renderApplication(bootstrap, {\n    url: urlToRender,\n    document: html,\n    platformProviders: providers\n  });\n}\n/**\n * Type guard to determine if a given value is an Angular module.\n * Angular modules are identified by the presence of the `ɵmod` static property.\n * This function helps distinguish between Angular modules and bootstrap functions.\n *\n * @param value - The value to be checked.\n * @returns True if the value is an Angular module (i.e., it has the `ɵmod` property), false otherwise.\n */\nfunction isNgModule(value) {\n  return 'ɵmod' in value;\n}\n\n/**\n * Creates a promise that resolves with the result of the provided `promise` or rejects with an\n * `AbortError` if the `AbortSignal` is triggered before the promise resolves.\n *\n * @param promise - The promise to monitor for completion.\n * @param signal - An `AbortSignal` used to monitor for an abort event. If the signal is aborted,\n *                 the returned promise will reject.\n * @param errorMessagePrefix - A custom message prefix to include in the error message when the operation is aborted.\n * @returns A promise that either resolves with the value of the provided `promise` or rejects with\n *          an `AbortError` if the `AbortSignal` is triggered.\n *\n * @throws {AbortError} If the `AbortSignal` is triggered before the `promise` resolves.\n */\nfunction promiseWithAbort(promise, signal, errorMessagePrefix) {\n  return new Promise((resolve, reject) => {\n    const abortHandler = () => {\n      reject(new DOMException(`${errorMessagePrefix} was aborted.\\n${signal.reason}`, 'AbortError'));\n    };\n    // Check for abort signal\n    if (signal.aborted) {\n      abortHandler();\n      return;\n    }\n    signal.addEventListener('abort', abortHandler, {\n      once: true\n    });\n    promise.then(resolve).catch(reject).finally(() => {\n      signal.removeEventListener('abort', abortHandler);\n    });\n  });\n}\n\n/**\n * The internal path used for the app shell route.\n * @internal\n */\nconst APP_SHELL_ROUTE = 'ng-app-shell';\n/**\n * Identifies a particular kind of `ServerRoutesFeatureKind`.\n * @see {@link ServerRoutesFeature}\n * @developerPreview\n */\nvar ServerRoutesFeatureKind;\n(function (ServerRoutesFeatureKind) {\n  ServerRoutesFeatureKind[ServerRoutesFeatureKind[\"AppShell\"] = 0] = \"AppShell\";\n})(ServerRoutesFeatureKind || (ServerRoutesFeatureKind = {}));\n/**\n * Different rendering modes for server routes.\n * @see {@link provideServerRouting}\n * @see {@link ServerRoute}\n * @developerPreview\n */\nvar RenderMode;\n(function (RenderMode) {\n  /** Server-Side Rendering (SSR) mode, where content is rendered on the server for each request. */\n  RenderMode[RenderMode[\"Server\"] = 0] = \"Server\";\n  /** Client-Side Rendering (CSR) mode, where content is rendered on the client side in the browser. */\n  RenderMode[RenderMode[\"Client\"] = 1] = \"Client\";\n  /** Static Site Generation (SSG) mode, where content is pre-rendered at build time and served as static files. */\n  RenderMode[RenderMode[\"Prerender\"] = 2] = \"Prerender\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Defines the fallback strategies for Static Site Generation (SSG) routes when a pre-rendered path is not available.\n * This is particularly relevant for routes with parameterized URLs where some paths might not be pre-rendered at build time.\n * @see {@link ServerRoutePrerenderWithParams}\n * @developerPreview\n */\nvar PrerenderFallback;\n(function (PrerenderFallback) {\n  /**\n   * Fallback to Server-Side Rendering (SSR) if the pre-rendered path is not available.\n   * This strategy dynamically generates the page on the server at request time.\n   */\n  PrerenderFallback[PrerenderFallback[\"Server\"] = 0] = \"Server\";\n  /**\n   * Fallback to Client-Side Rendering (CSR) if the pre-rendered path is not available.\n   * This strategy allows the page to be rendered on the client side.\n   */\n  PrerenderFallback[PrerenderFallback[\"Client\"] = 1] = \"Client\";\n  /**\n   * No fallback; if the path is not pre-rendered, the server will not handle the request.\n   * This means the application will not provide any response for paths that are not pre-rendered.\n   */\n  PrerenderFallback[PrerenderFallback[\"None\"] = 2] = \"None\";\n})(PrerenderFallback || (PrerenderFallback = {}));\n/**\n * Token for providing the server routes configuration.\n * @internal\n */\nconst SERVER_ROUTES_CONFIG = new InjectionToken('SERVER_ROUTES_CONFIG');\n/**\n * Sets up the necessary providers for configuring server routes.\n * This function accepts an array of server routes and optional configuration\n * options, returning an `EnvironmentProviders` object that encapsulates\n * the server routes and configuration settings.\n *\n * @param routes - An array of server routes to be provided.\n * @param options - (Optional) An object containing additional configuration options for server routes.\n * @returns An `EnvironmentProviders` instance with the server routes configuration.\n *\n * @see {@link ServerRoute}\n * @see {@link ServerRoutesConfigOptions}\n * @see {@link provideServerRouting}\n * @deprecated use `provideServerRouting`. This will be removed in version 20.\n * @developerPreview\n */\nfunction provideServerRoutesConfig(routes, options) {\n  if (typeof ngServerMode === 'undefined' || !ngServerMode) {\n    throw new Error(`The 'provideServerRoutesConfig' function should not be invoked within the browser portion of the application.`);\n  }\n  return makeEnvironmentProviders([{\n    provide: SERVER_ROUTES_CONFIG,\n    useValue: {\n      routes,\n      ...options\n    }\n  }]);\n}\n/**\n * Sets up the necessary providers for configuring server routes.\n * This function accepts an array of server routes and optional configuration\n * options, returning an `EnvironmentProviders` object that encapsulates\n * the server routes and configuration settings.\n *\n * @param routes - An array of server routes to be provided.\n * @param features - (Optional) server routes features.\n * @returns An `EnvironmentProviders` instance with the server routes configuration.\n *\n * @see {@link ServerRoute}\n * @see {@link withAppShell}\n * @developerPreview\n */\nfunction provideServerRouting(routes, ...features) {\n  const config = {\n    routes\n  };\n  const hasAppShell = features.some(f => f.ɵkind === ServerRoutesFeatureKind.AppShell);\n  if (hasAppShell) {\n    config.appShellRoute = APP_SHELL_ROUTE;\n  }\n  const providers = [{\n    provide: SERVER_ROUTES_CONFIG,\n    useValue: config\n  }];\n  for (const feature of features) {\n    providers.push(...feature.ɵproviders);\n  }\n  return makeEnvironmentProviders(providers);\n}\n/**\n * Configures the app shell route with the provided component.\n *\n * The app shell serves as the main entry point for the application and is commonly used\n * to enable server-side rendering (SSR) of the application shell. It handles requests\n * that do not match any specific server route, providing a fallback mechanism and improving\n * perceived performance during navigation.\n *\n * This configuration is particularly useful in applications leveraging Progressive Web App (PWA)\n * patterns, such as service workers, to deliver a seamless user experience.\n *\n * @param component The Angular component to render for the app shell route.\n * @returns A server routes feature configuration for the app shell.\n *\n * @see {@link provideServerRouting}\n * @see {@link https://angular.dev/ecosystem/service-workers/app-shell | App shell pattern on Angular.dev}\n */\nfunction withAppShell(component) {\n  const routeConfig = {\n    path: APP_SHELL_ROUTE\n  };\n  if ('ɵcmp' in component) {\n    routeConfig.component = component;\n  } else {\n    routeConfig.loadComponent = component;\n  }\n  return {\n    ɵkind: ServerRoutesFeatureKind.AppShell,\n    ɵproviders: [{\n      provide: ROUTES,\n      useValue: routeConfig,\n      multi: true\n    }]\n  };\n}\n\n/**\n * A route tree implementation that supports efficient route matching, including support for wildcard routes.\n * This structure is useful for organizing and retrieving routes in a hierarchical manner,\n * enabling complex routing scenarios with nested paths.\n *\n * @typeParam AdditionalMetadata - Type of additional metadata that can be associated with route nodes.\n */\nclass RouteTree {\n  /**\n   * The root node of the route tree.\n   * All routes are stored and accessed relative to this root node.\n   */\n  root = this.createEmptyRouteTreeNode();\n  /**\n   * Inserts a new route into the route tree.\n   * The route is broken down into segments, and each segment is added to the tree.\n   * Parameterized segments (e.g., :id) are normalized to wildcards (*) for matching purposes.\n   *\n   * @param route - The route path to insert into the tree.\n   * @param metadata - Metadata associated with the route, excluding the route path itself.\n   */\n  insert(route, metadata) {\n    let node = this.root;\n    const segments = this.getPathSegments(route);\n    const normalizedSegments = [];\n    for (const segment of segments) {\n      // Replace parameterized segments (e.g., :id) with a wildcard (*) for matching\n      const normalizedSegment = segment[0] === ':' ? '*' : segment;\n      let childNode = node.children.get(normalizedSegment);\n      if (!childNode) {\n        childNode = this.createEmptyRouteTreeNode();\n        node.children.set(normalizedSegment, childNode);\n      }\n      node = childNode;\n      normalizedSegments.push(normalizedSegment);\n    }\n    // At the leaf node, store the full route and its associated metadata\n    node.metadata = {\n      ...metadata,\n      route: addLeadingSlash(normalizedSegments.join('/'))\n    };\n  }\n  /**\n   * Matches a given route against the route tree and returns the best matching route's metadata.\n   * The best match is determined by the lowest insertion index, meaning the earliest defined route\n   * takes precedence.\n   *\n   * @param route - The route path to match against the route tree.\n   * @returns The metadata of the best matching route or `undefined` if no match is found.\n   */\n  match(route) {\n    const segments = this.getPathSegments(route);\n    return this.traverseBySegments(segments)?.metadata;\n  }\n  /**\n   * Converts the route tree into a serialized format representation.\n   * This method converts the route tree into an array of metadata objects that describe the structure of the tree.\n   * The array represents the routes in a nested manner where each entry includes the route and its associated metadata.\n   *\n   * @returns An array of `RouteTreeNodeMetadata` objects representing the route tree structure.\n   *          Each object includes the `route` and associated metadata of a route.\n   */\n  toObject() {\n    return Array.from(this.traverse());\n  }\n  /**\n   * Constructs a `RouteTree` from an object representation.\n   * This method is used to recreate a `RouteTree` instance from an array of metadata objects.\n   * The array should be in the format produced by `toObject`, allowing for the reconstruction of the route tree\n   * with the same routes and metadata.\n   *\n   * @param value - An array of `RouteTreeNodeMetadata` objects that represent the serialized format of the route tree.\n   *                Each object should include a `route` and its associated metadata.\n   * @returns A new `RouteTree` instance constructed from the provided metadata objects.\n   */\n  static fromObject(value) {\n    const tree = new RouteTree();\n    for (const {\n      route,\n      ...metadata\n    } of value) {\n      tree.insert(route, metadata);\n    }\n    return tree;\n  }\n  /**\n   * A generator function that recursively traverses the route tree and yields the metadata of each node.\n   * This allows for easy and efficient iteration over all nodes in the tree.\n   *\n   * @param node - The current node to start the traversal from. Defaults to the root node of the tree.\n   */\n  *traverse(node = this.root) {\n    if (node.metadata) {\n      yield node.metadata;\n    }\n    for (const childNode of node.children.values()) {\n      yield* this.traverse(childNode);\n    }\n  }\n  /**\n   * Extracts the path segments from a given route string.\n   *\n   * @param route - The route string from which to extract segments.\n   * @returns An array of path segments.\n   */\n  getPathSegments(route) {\n    return route.split('/').filter(Boolean);\n  }\n  /**\n   * Recursively traverses the route tree from a given node, attempting to match the remaining route segments.\n   * If the node is a leaf node (no more segments to match) and contains metadata, the node is yielded.\n   *\n   * This function prioritizes exact segment matches first, followed by wildcard matches (`*`),\n   * and finally deep wildcard matches (`**`) that consume all segments.\n   *\n   * @param segments - The array of route path segments to match against the route tree.\n   * @param node - The current node in the route tree to start traversal from. Defaults to the root node.\n   * @param currentIndex - The index of the segment in `remainingSegments` currently being matched.\n   * Defaults to `0` (the first segment).\n   *\n   * @returns The node that best matches the remaining segments or `undefined` if no match is found.\n   */\n  traverseBySegments(segments, node = this.root, currentIndex = 0) {\n    if (currentIndex >= segments.length) {\n      return node.metadata ? node : node.children.get('**');\n    }\n    if (!node.children.size) {\n      return undefined;\n    }\n    const segment = segments[currentIndex];\n    // 1. Attempt exact match with the current segment.\n    const exactMatch = node.children.get(segment);\n    if (exactMatch) {\n      const match = this.traverseBySegments(segments, exactMatch, currentIndex + 1);\n      if (match) {\n        return match;\n      }\n    }\n    // 2. Attempt wildcard match ('*').\n    const wildcardMatch = node.children.get('*');\n    if (wildcardMatch) {\n      const match = this.traverseBySegments(segments, wildcardMatch, currentIndex + 1);\n      if (match) {\n        return match;\n      }\n    }\n    // 3. Attempt double wildcard match ('**').\n    return node.children.get('**');\n  }\n  /**\n   * Creates an empty route tree node.\n   * This helper function is used during the tree construction.\n   *\n   * @returns A new, empty route tree node.\n   */\n  createEmptyRouteTreeNode() {\n    return {\n      children: new Map()\n    };\n  }\n}\n\n/**\n * The maximum number of module preload link elements that should be added for\n * initial scripts.\n */\nconst MODULE_PRELOAD_MAX = 10;\n/**\n * Regular expression to match a catch-all route pattern in a URL path,\n * specifically one that ends with '/**'.\n */\nconst CATCH_ALL_REGEXP = /\\/(\\*\\*)$/;\n/**\n * Regular expression to match segments preceded by a colon in a string.\n */\nconst URL_PARAMETER_REGEXP = /(?<!\\\\):([^/]+)/g;\n/**\n * An set of HTTP status codes that are considered valid for redirect responses.\n */\nconst VALID_REDIRECT_RESPONSE_CODES = new Set([301, 302, 303, 307, 308]);\n/**\n * Handles a single route within the route tree and yields metadata or errors.\n *\n * @param options - Configuration options for handling the route.\n * @returns An async iterable iterator yielding `RouteTreeNodeMetadata` or an error object.\n */\nasync function* handleRoute(options) {\n  try {\n    const {\n      metadata,\n      currentRoutePath,\n      route,\n      compiler,\n      parentInjector,\n      serverConfigRouteTree,\n      entryPointToBrowserMapping,\n      invokeGetPrerenderParams,\n      includePrerenderFallbackRoutes\n    } = options;\n    const {\n      redirectTo,\n      loadChildren,\n      loadComponent,\n      children,\n      ɵentryName\n    } = route;\n    if (ɵentryName && loadComponent) {\n      appendPreloadToMetadata(ɵentryName, entryPointToBrowserMapping, metadata, true);\n    }\n    if (metadata.renderMode === RenderMode.Prerender) {\n      yield* handleSSGRoute(serverConfigRouteTree, typeof redirectTo === 'string' ? redirectTo : undefined, metadata, parentInjector, invokeGetPrerenderParams, includePrerenderFallbackRoutes);\n    } else if (typeof redirectTo === 'string') {\n      if (metadata.status && !VALID_REDIRECT_RESPONSE_CODES.has(metadata.status)) {\n        yield {\n          error: `The '${metadata.status}' status code is not a valid redirect response code. ` + `Please use one of the following redirect response codes: ${[...VALID_REDIRECT_RESPONSE_CODES.values()].join(', ')}.`\n        };\n      } else {\n        yield {\n          ...metadata,\n          redirectTo: resolveRedirectTo(metadata.route, redirectTo)\n        };\n      }\n    } else {\n      yield metadata;\n    }\n    // Recursively process child routes\n    if (children?.length) {\n      yield* traverseRoutesConfig({\n        ...options,\n        routes: children,\n        parentRoute: currentRoutePath,\n        parentPreloads: metadata.preload\n      });\n    }\n    // Load and process lazy-loaded child routes\n    if (loadChildren) {\n      if (ɵentryName) {\n        // When using `loadChildren`, the entire feature area (including multiple routes) is loaded.\n        // As a result, we do not want all dynamic-import dependencies to be preload, because it involves multiple dependencies\n        // across different child routes. In contrast, `loadComponent` only loads a single component, which allows\n        // for precise control over preloading, ensuring that the files preloaded are exactly those required for that specific route.\n        appendPreloadToMetadata(ɵentryName, entryPointToBrowserMapping, metadata, false);\n      }\n      const loadedChildRoutes = await _loadChildren(route, compiler, parentInjector).toPromise();\n      if (loadedChildRoutes) {\n        const {\n          routes: childRoutes,\n          injector = parentInjector\n        } = loadedChildRoutes;\n        yield* traverseRoutesConfig({\n          ...options,\n          routes: childRoutes,\n          parentInjector: injector,\n          parentRoute: currentRoutePath,\n          parentPreloads: metadata.preload\n        });\n      }\n    }\n  } catch (error) {\n    yield {\n      error: `Error in handleRoute for '${options.currentRoutePath}': ${error.message}`\n    };\n  }\n}\n/**\n * Traverses an array of route configurations to generate route tree node metadata.\n *\n * This function processes each route and its children, handling redirects, SSG (Static Site Generation) settings,\n * and lazy-loaded routes. It yields route metadata for each route and its potential variants.\n *\n * @param options - The configuration options for traversing routes.\n * @returns An async iterable iterator yielding either route tree node metadata or an error object with an error message.\n */\nasync function* traverseRoutesConfig(options) {\n  const {\n    routes: routeConfigs,\n    parentPreloads,\n    parentRoute,\n    serverConfigRouteTree\n  } = options;\n  for (const route of routeConfigs) {\n    const {\n      matcher,\n      path = matcher ? '**' : ''\n    } = route;\n    const currentRoutePath = joinUrlParts(parentRoute, path);\n    if (matcher && serverConfigRouteTree) {\n      let foundMatch = false;\n      for (const matchedMetaData of serverConfigRouteTree.traverse()) {\n        if (!matchedMetaData.route.startsWith(currentRoutePath)) {\n          continue;\n        }\n        foundMatch = true;\n        matchedMetaData.presentInClientRouter = true;\n        if (matchedMetaData.renderMode === RenderMode.Prerender) {\n          yield {\n            error: `The route '${stripLeadingSlash(currentRoutePath)}' is set for prerendering but has a defined matcher. ` + `Routes with matchers cannot use prerendering. Please specify a different 'renderMode'.`\n          };\n          continue;\n        }\n        yield* handleRoute({\n          ...options,\n          currentRoutePath,\n          route,\n          metadata: {\n            ...matchedMetaData,\n            preload: parentPreloads,\n            route: matchedMetaData.route,\n            presentInClientRouter: undefined\n          }\n        });\n      }\n      if (!foundMatch) {\n        yield {\n          error: `The route '${stripLeadingSlash(currentRoutePath)}' has a defined matcher but does not ` + 'match any route in the server routing configuration. Please ensure this route is added to the server routing configuration.'\n        };\n      }\n      continue;\n    }\n    let matchedMetaData;\n    if (serverConfigRouteTree) {\n      matchedMetaData = serverConfigRouteTree.match(currentRoutePath);\n      if (!matchedMetaData) {\n        yield {\n          error: `The '${stripLeadingSlash(currentRoutePath)}' route does not match any route defined in the server routing configuration. ` + 'Please ensure this route is added to the server routing configuration.'\n        };\n        continue;\n      }\n      matchedMetaData.presentInClientRouter = true;\n    }\n    yield* handleRoute({\n      ...options,\n      metadata: {\n        renderMode: RenderMode.Prerender,\n        ...matchedMetaData,\n        preload: parentPreloads,\n        // Match Angular router behavior\n        // ['one', 'two', ''] -> 'one/two/'\n        // ['one', 'two', 'three'] -> 'one/two/three'\n        route: path === '' ? addTrailingSlash(currentRoutePath) : currentRoutePath,\n        presentInClientRouter: undefined\n      },\n      currentRoutePath,\n      route\n    });\n  }\n}\n/**\n * Appends preload information to the metadata object based on the specified entry-point and chunk mappings.\n *\n * This function extracts preload data for a given entry-point from the provided chunk mappings. It adds the\n * corresponding browser bundles to the metadata's preload list, ensuring no duplicates and limiting the total\n * preloads to a predefined maximum.\n */\nfunction appendPreloadToMetadata(entryName, entryPointToBrowserMapping, metadata, includeDynamicImports) {\n  const existingPreloads = metadata.preload ?? [];\n  if (!entryPointToBrowserMapping || existingPreloads.length >= MODULE_PRELOAD_MAX) {\n    return;\n  }\n  const preload = entryPointToBrowserMapping[entryName];\n  if (!preload?.length) {\n    return;\n  }\n  // Merge existing preloads with new ones, ensuring uniqueness and limiting the total to the maximum allowed.\n  const combinedPreloads = new Set(existingPreloads);\n  for (const {\n    dynamicImport,\n    path\n  } of preload) {\n    if (dynamicImport && !includeDynamicImports) {\n      continue;\n    }\n    combinedPreloads.add(path);\n    if (combinedPreloads.size === MODULE_PRELOAD_MAX) {\n      break;\n    }\n  }\n  metadata.preload = Array.from(combinedPreloads);\n}\n/**\n * Handles SSG (Static Site Generation) routes by invoking `getPrerenderParams` and yielding\n * all parameterized paths, returning any errors encountered.\n *\n * @param serverConfigRouteTree - The tree representing the server's routing setup.\n * @param redirectTo - Optional path to redirect to, if specified.\n * @param metadata - The metadata associated with the route tree node.\n * @param parentInjector - The dependency injection container for the parent route.\n * @param invokeGetPrerenderParams - A flag indicating whether to invoke the `getPrerenderParams` function.\n * @param includePrerenderFallbackRoutes - A flag indicating whether to include fallback routes in the result.\n * @returns An async iterable iterator that yields route tree node metadata for each SSG path or errors.\n */\nasync function* handleSSGRoute(serverConfigRouteTree, redirectTo, metadata, parentInjector, invokeGetPrerenderParams, includePrerenderFallbackRoutes) {\n  if (metadata.renderMode !== RenderMode.Prerender) {\n    throw new Error(`'handleSSGRoute' was called for a route which rendering mode is not prerender.`);\n  }\n  const {\n    route: currentRoutePath,\n    fallback,\n    ...meta\n  } = metadata;\n  const getPrerenderParams = 'getPrerenderParams' in meta ? meta.getPrerenderParams : undefined;\n  if ('getPrerenderParams' in meta) {\n    delete meta['getPrerenderParams'];\n  }\n  if (redirectTo !== undefined) {\n    meta.redirectTo = resolveRedirectTo(currentRoutePath, redirectTo);\n  }\n  const isCatchAllRoute = CATCH_ALL_REGEXP.test(currentRoutePath);\n  if (isCatchAllRoute && !getPrerenderParams || !isCatchAllRoute && !URL_PARAMETER_REGEXP.test(currentRoutePath)) {\n    // Route has no parameters\n    yield {\n      ...meta,\n      route: currentRoutePath\n    };\n    return;\n  }\n  if (invokeGetPrerenderParams) {\n    if (!getPrerenderParams) {\n      yield {\n        error: `The '${stripLeadingSlash(currentRoutePath)}' route uses prerendering and includes parameters, but 'getPrerenderParams' ` + `is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration ` + `or specify a different 'renderMode'.`\n      };\n      return;\n    }\n    if (serverConfigRouteTree) {\n      // Automatically resolve dynamic parameters for nested routes.\n      const catchAllRoutePath = isCatchAllRoute ? currentRoutePath : joinUrlParts(currentRoutePath, '**');\n      const match = serverConfigRouteTree.match(catchAllRoutePath);\n      if (match && match.renderMode === RenderMode.Prerender && !('getPrerenderParams' in match)) {\n        serverConfigRouteTree.insert(catchAllRoutePath, {\n          ...match,\n          presentInClientRouter: true,\n          getPrerenderParams\n        });\n      }\n    }\n    const parameters = await runInInjectionContext(parentInjector, () => getPrerenderParams());\n    try {\n      for (const params of parameters) {\n        const replacer = handlePrerenderParamsReplacement(params, currentRoutePath);\n        const routeWithResolvedParams = currentRoutePath.replace(URL_PARAMETER_REGEXP, replacer).replace(CATCH_ALL_REGEXP, replacer);\n        yield {\n          ...meta,\n          route: routeWithResolvedParams,\n          redirectTo: redirectTo === undefined ? undefined : resolveRedirectTo(routeWithResolvedParams, redirectTo)\n        };\n      }\n    } catch (error) {\n      yield {\n        error: `${error.message}`\n      };\n      return;\n    }\n  }\n  // Handle fallback render modes\n  if (includePrerenderFallbackRoutes && (fallback !== PrerenderFallback.None || !invokeGetPrerenderParams)) {\n    yield {\n      ...meta,\n      route: currentRoutePath,\n      renderMode: fallback === PrerenderFallback.Client ? RenderMode.Client : RenderMode.Server\n    };\n  }\n}\n/**\n * Creates a replacer function used for substituting parameter placeholders in a route path\n * with their corresponding values provided in the `params` object.\n *\n * @param params - An object mapping parameter names to their string values.\n * @param currentRoutePath - The current route path, used for constructing error messages.\n * @returns A function that replaces a matched parameter placeholder (e.g., ':id') with its corresponding value.\n */\nfunction handlePrerenderParamsReplacement(params, currentRoutePath) {\n  return match => {\n    const parameterName = match.slice(1);\n    const value = params[parameterName];\n    if (typeof value !== 'string') {\n      throw new Error(`The 'getPrerenderParams' function defined for the '${stripLeadingSlash(currentRoutePath)}' route ` + `returned a non-string value for parameter '${parameterName}'. ` + `Please make sure the 'getPrerenderParams' function returns values for all parameters ` + 'specified in this route.');\n    }\n    return parameterName === '**' ? `/${value}` : value;\n  };\n}\n/**\n * Resolves the `redirectTo` property for a given route.\n *\n * This function processes the `redirectTo` property to ensure that it correctly\n * resolves relative to the current route path. If `redirectTo` is an absolute path,\n * it is returned as is. If it is a relative path, it is resolved based on the current route path.\n *\n * @param routePath - The current route path.\n * @param redirectTo - The target path for redirection.\n * @returns The resolved redirect path as a string.\n */\nfunction resolveRedirectTo(routePath, redirectTo) {\n  if (redirectTo[0] === '/') {\n    // If the redirectTo path is absolute, return it as is.\n    return redirectTo;\n  }\n  // Resolve relative redirectTo based on the current route path.\n  const segments = routePath.replace(URL_PARAMETER_REGEXP, '*').split('/');\n  segments.pop(); // Remove the last segment to make it relative.\n  return joinUrlParts(...segments, redirectTo);\n}\n/**\n * Builds a server configuration route tree from the given server routes configuration.\n *\n * @param serverRoutesConfig - The server routes to be used for configuration.\n\n * @returns An object containing:\n * - `serverConfigRouteTree`: A populated `RouteTree` instance, which organizes the server routes\n *   along with their additional metadata.\n * - `errors`: An array of strings that list any errors encountered during the route tree construction\n *   process, such as invalid paths.\n */\nfunction buildServerConfigRouteTree({\n  routes,\n  appShellRoute\n}) {\n  const serverRoutes = [...routes];\n  if (appShellRoute !== undefined) {\n    serverRoutes.unshift({\n      path: appShellRoute,\n      renderMode: RenderMode.Prerender\n    });\n  }\n  const serverConfigRouteTree = new RouteTree();\n  const errors = [];\n  for (const {\n    path,\n    ...metadata\n  } of serverRoutes) {\n    if (path[0] === '/') {\n      errors.push(`Invalid '${path}' route configuration: the path cannot start with a slash.`);\n      continue;\n    }\n    if ('getPrerenderParams' in metadata && (path.includes('/*/') || path.endsWith('/*'))) {\n      errors.push(`Invalid '${path}' route configuration: 'getPrerenderParams' cannot be used with a '*' route.`);\n      continue;\n    }\n    serverConfigRouteTree.insert(path, metadata);\n  }\n  return {\n    serverConfigRouteTree,\n    errors\n  };\n}\n/**\n * Retrieves routes from the given Angular application.\n *\n * This function initializes an Angular platform, bootstraps the application or module,\n * and retrieves routes from the Angular router configuration. It handles both module-based\n * and function-based bootstrapping. It yields the resulting routes as `RouteTreeNodeMetadata` objects or errors.\n *\n * @param bootstrap - A function that returns a promise resolving to an `ApplicationRef` or an Angular module to bootstrap.\n * @param document - The initial HTML document used for server-side rendering.\n * This document is necessary to render the application on the server.\n * @param url - The URL for server-side rendering. The URL is used to configure `ServerPlatformLocation`. This configuration is crucial\n * for ensuring that API requests for relative paths succeed, which is essential for accurate route extraction.\n * @param invokeGetPrerenderParams - A boolean flag indicating whether to invoke `getPrerenderParams` for parameterized SSG routes\n * to handle prerendering paths. Defaults to `false`.\n * @param includePrerenderFallbackRoutes - A flag indicating whether to include fallback routes in the result. Defaults to `true`.\n * @param entryPointToBrowserMapping - Maps the entry-point name to the associated JavaScript browser bundles.\n *\n * @returns A promise that resolves to an object of type `AngularRouterConfigResult` or errors.\n */\nasync function getRoutesFromAngularRouterConfig(bootstrap, document, url, invokeGetPrerenderParams = false, includePrerenderFallbackRoutes = true, entryPointToBrowserMapping = undefined) {\n  const {\n    protocol,\n    host\n  } = url;\n  // Create and initialize the Angular platform for server-side rendering.\n  const platformRef = platformServer([{\n    provide: INITIAL_CONFIG,\n    useValue: {\n      document,\n      url: `${protocol}//${host}/`\n    }\n  }, {\n    // An Angular Console Provider that does not print a set of predefined logs.\n    provide: _Console,\n    // Using `useClass` would necessitate decorating `Console` with `@Injectable`,\n    // which would require switching from `ts_library` to `ng_module`. This change\n    // would also necessitate various patches of `@angular/bazel` to support ESM.\n    useFactory: () => new Console()\n  }, {\n    provide: _ENABLE_ROOT_COMPONENT_BOOTSTRAP,\n    useValue: false\n  }]);\n  try {\n    let applicationRef;\n    if (isNgModule(bootstrap)) {\n      const moduleRef = await platformRef.bootstrapModule(bootstrap);\n      applicationRef = moduleRef.injector.get(ApplicationRef);\n    } else {\n      applicationRef = await bootstrap();\n    }\n    const injector = applicationRef.injector;\n    const router = injector.get(Router);\n    // Workaround to unblock navigation when `withEnabledBlockingInitialNavigation()` is used.\n    // This is necessary because route extraction disables component bootstrapping.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    router.navigationTransitions.afterPreactivation()?.next?.();\n    // Wait until the application is stable.\n    await applicationRef.whenStable();\n    const errors = [];\n    const rawBaseHref = injector.get(APP_BASE_HREF, null, {\n      optional: true\n    }) ?? injector.get(PlatformLocation).getBaseHrefFromDOM();\n    const {\n      pathname: baseHref\n    } = new URL(rawBaseHref, 'http://localhost');\n    const compiler = injector.get(Compiler);\n    const serverRoutesConfig = injector.get(SERVER_ROUTES_CONFIG, null, {\n      optional: true\n    });\n    let serverConfigRouteTree;\n    if (serverRoutesConfig) {\n      const result = buildServerConfigRouteTree(serverRoutesConfig);\n      serverConfigRouteTree = result.serverConfigRouteTree;\n      errors.push(...result.errors);\n    }\n    if (errors.length) {\n      return {\n        baseHref,\n        routes: [],\n        errors\n      };\n    }\n    const routesResults = [];\n    if (router.config.length) {\n      // Retrieve all routes from the Angular router configuration.\n      const traverseRoutes = traverseRoutesConfig({\n        routes: router.config,\n        compiler,\n        parentInjector: injector,\n        parentRoute: '',\n        serverConfigRouteTree,\n        invokeGetPrerenderParams,\n        includePrerenderFallbackRoutes,\n        entryPointToBrowserMapping\n      });\n      const seenRoutes = new Set();\n      for await (const routeMetadata of traverseRoutes) {\n        if ('error' in routeMetadata) {\n          errors.push(routeMetadata.error);\n          continue;\n        }\n        // If a result already exists for the exact same route, subsequent matches should be ignored.\n        // This aligns with Angular's app router behavior, which prioritizes the first route.\n        const routePath = routeMetadata.route;\n        if (!seenRoutes.has(routePath)) {\n          routesResults.push(routeMetadata);\n          seenRoutes.add(routePath);\n        }\n      }\n      // This timeout is necessary to prevent 'adev' from hanging in production builds.\n      // The exact cause is unclear, but removing it leads to the issue.\n      await new Promise(resolve => setTimeout(resolve, 0));\n      if (serverConfigRouteTree) {\n        for (const {\n          route,\n          presentInClientRouter\n        } of serverConfigRouteTree.traverse()) {\n          if (presentInClientRouter || route.endsWith('/**')) {\n            // Skip if matched or it's the catch-all route.\n            continue;\n          }\n          errors.push(`The '${stripLeadingSlash(route)}' server route does not match any routes defined in the Angular ` + `routing configuration (typically provided as a part of the 'provideRouter' call). ` + 'Please make sure that the mentioned server route is present in the Angular routing configuration.');\n        }\n      }\n    } else {\n      const rootRouteMetadata = serverConfigRouteTree?.match('') ?? {\n        route: '',\n        renderMode: RenderMode.Prerender\n      };\n      routesResults.push({\n        ...rootRouteMetadata,\n        // Matched route might be `/*` or `/**`, which would make Angular serve all routes rather than just `/`.\n        // So we limit to just `/` for the empty app router case.\n        route: ''\n      });\n    }\n    return {\n      baseHref,\n      routes: routesResults,\n      errors,\n      appShellRoute: serverRoutesConfig?.appShellRoute\n    };\n  } finally {\n    platformRef.destroy();\n  }\n}\n/**\n * Asynchronously extracts routes from the Angular application configuration\n * and creates a `RouteTree` to manage server-side routing.\n *\n * @param options - An object containing the following options:\n *  - `url`: The URL for server-side rendering. The URL is used to configure `ServerPlatformLocation`. This configuration is crucial\n *     for ensuring that API requests for relative paths succeed, which is essential for accurate route extraction.\n *     See:\n *      - https://github.com/angular/angular/blob/d608b857c689d17a7ffa33bbb510301014d24a17/packages/platform-server/src/location.ts#L51\n *      - https://github.com/angular/angular/blob/6882cc7d9eed26d3caeedca027452367ba25f2b9/packages/platform-server/src/http.ts#L44\n *  - `manifest`: An optional `AngularAppManifest` that contains the application's routing and configuration details.\n *     If not provided, the default manifest is retrieved using `getAngularAppManifest()`.\n *  - `invokeGetPrerenderParams`: A boolean flag indicating whether to invoke `getPrerenderParams` for parameterized SSG routes\n *     to handle prerendering paths. Defaults to `false`.\n *  - `includePrerenderFallbackRoutes`: A flag indicating whether to include fallback routes in the result. Defaults to `true`.\n *  - `signal`: An optional `AbortSignal` that can be used to abort the operation.\n *\n * @returns A promise that resolves to an object containing:\n *  - `routeTree`: A populated `RouteTree` containing all extracted routes from the Angular application.\n *  - `appShellRoute`: The specified route for the app-shell, if configured.\n *  - `errors`: An array of strings representing any errors encountered during the route extraction process.\n */\nfunction extractRoutesAndCreateRouteTree(options) {\n  const {\n    url,\n    manifest = getAngularAppManifest(),\n    invokeGetPrerenderParams = false,\n    includePrerenderFallbackRoutes = true,\n    signal\n  } = options;\n  async function extract() {\n    const routeTree = new RouteTree();\n    const document = await new ServerAssets(manifest).getIndexServerHtml().text();\n    const bootstrap = await manifest.bootstrap();\n    const {\n      baseHref,\n      appShellRoute,\n      routes,\n      errors\n    } = await getRoutesFromAngularRouterConfig(bootstrap, document, url, invokeGetPrerenderParams, includePrerenderFallbackRoutes, manifest.entryPointToBrowserMapping);\n    for (const {\n      route,\n      ...metadata\n    } of routes) {\n      if (metadata.redirectTo !== undefined) {\n        metadata.redirectTo = joinUrlParts(baseHref, metadata.redirectTo);\n      }\n      // Remove undefined fields\n      // Helps avoid unnecessary test updates\n      for (const [key, value] of Object.entries(metadata)) {\n        if (value === undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          delete metadata[key];\n        }\n      }\n      const fullRoute = joinUrlParts(baseHref, route);\n      routeTree.insert(fullRoute, metadata);\n    }\n    return {\n      appShellRoute,\n      routeTree,\n      errors\n    };\n  }\n  return signal ? promiseWithAbort(extract(), signal, 'Routes extraction') : extract();\n}\n\n/**\n * Manages a collection of hooks and provides methods to register and execute them.\n * Hooks are functions that can be invoked with specific arguments to allow modifications or enhancements.\n */\nclass Hooks {\n  /**\n   * A map of hook names to arrays of hook functions.\n   * Each hook name can have multiple associated functions, which are executed in sequence.\n   */\n  store = new Map();\n  /**\n   * Executes all hooks associated with the specified name, passing the given argument to each hook function.\n   * The hooks are invoked sequentially, and the argument may be modified by each hook.\n   *\n   * @template Hook - The type of the hook name. It should be one of the keys of `HooksMapping`.\n   * @param name - The name of the hook whose functions will be executed.\n   * @param context - The input value to be passed to each hook function. The value is mutated by each hook function.\n   * @returns A promise that resolves once all hook functions have been executed.\n   *\n   * @example\n   * ```typescript\n   * const hooks = new Hooks();\n   * hooks.on('html:transform:pre', async (ctx) => {\n   *   ctx.html = ctx.html.replace(/foo/g, 'bar');\n   *   return ctx.html;\n   * });\n   * const result = await hooks.run('html:transform:pre', { html: '<div>foo</div>' });\n   * console.log(result); // '<div>bar</div>'\n   * ```\n   * @internal\n   */\n  async run(name, context) {\n    const hooks = this.store.get(name);\n    switch (name) {\n      case 'html:transform:pre':\n        {\n          if (!hooks) {\n            return context.html;\n          }\n          const ctx = {\n            ...context\n          };\n          for (const hook of hooks) {\n            ctx.html = await hook(ctx);\n          }\n          return ctx.html;\n        }\n      default:\n        throw new Error(`Running hook \"${name}\" is not supported.`);\n    }\n  }\n  /**\n   * Registers a new hook function under the specified hook name.\n   * This function should be a function that takes an argument of type `T` and returns a `string` or `Promise<string>`.\n   *\n   * @template Hook - The type of the hook name. It should be one of the keys of `HooksMapping`.\n   * @param name - The name of the hook under which the function will be registered.\n   * @param handler - A function to be executed when the hook is triggered. The handler will be called with an argument\n   *                  that may be modified by the hook functions.\n   *\n   * @remarks\n   * - If there are existing handlers registered under the given hook name, the new handler will be added to the list.\n   * - If no handlers are registered under the given hook name, a new list will be created with the handler as its first element.\n   *\n   * @example\n   * ```typescript\n   * hooks.on('html:transform:pre', async (ctx) => {\n   *   return ctx.html.replace(/foo/g, 'bar');\n   * });\n   * ```\n   */\n  on(name, handler) {\n    const hooks = this.store.get(name);\n    if (hooks) {\n      hooks.push(handler);\n    } else {\n      this.store.set(name, [handler]);\n    }\n  }\n  /**\n   * Checks if there are any hooks registered under the specified name.\n   *\n   * @param name - The name of the hook to check.\n   * @returns `true` if there are hooks registered under the specified name, otherwise `false`.\n   */\n  has(name) {\n    return !!this.store.get(name)?.length;\n  }\n}\n\n/**\n * Manages the application's server routing logic by building and maintaining a route tree.\n *\n * This class is responsible for constructing the route tree from the Angular application\n * configuration and using it to match incoming requests to the appropriate routes.\n */\nclass ServerRouter {\n  routeTree;\n  /**\n   * Creates an instance of the `ServerRouter`.\n   *\n   * @param routeTree - An instance of `RouteTree` that holds the routing information.\n   * The `RouteTree` is used to match request URLs to the appropriate route metadata.\n   */\n  constructor(routeTree) {\n    this.routeTree = routeTree;\n  }\n  /**\n   * Static property to track the ongoing build promise.\n   */\n  static #extractionPromise;\n  /**\n   * Creates or retrieves a `ServerRouter` instance based on the provided manifest and URL.\n   *\n   * If the manifest contains pre-built routes, a new `ServerRouter` is immediately created.\n   * Otherwise, it builds the router by extracting routes from the Angular configuration\n   * asynchronously. This method ensures that concurrent builds are prevented by re-using\n   * the same promise.\n   *\n   * @param manifest - An instance of `AngularAppManifest` that contains the route information.\n   * @param url - The URL for server-side rendering. The URL is needed to configure `ServerPlatformLocation`.\n   * This is necessary to ensure that API requests for relative paths succeed, which is crucial for correct route extraction.\n   * [Reference](https://github.com/angular/angular/blob/d608b857c689d17a7ffa33bbb510301014d24a17/packages/platform-server/src/location.ts#L51)\n   * @returns A promise resolving to a `ServerRouter` instance.\n   */\n  static from(manifest, url) {\n    if (manifest.routes) {\n      const routeTree = RouteTree.fromObject(manifest.routes);\n      return Promise.resolve(new ServerRouter(routeTree));\n    }\n    // Create and store a new promise for the build process.\n    // This prevents concurrent builds by re-using the same promise.\n    ServerRouter.#extractionPromise ??= extractRoutesAndCreateRouteTree({\n      url,\n      manifest\n    }).then(({\n      routeTree,\n      errors\n    }) => {\n      if (errors.length > 0) {\n        throw new Error('Error(s) occurred while extracting routes:\\n' + errors.map(error => `- ${error}`).join('\\n'));\n      }\n      return new ServerRouter(routeTree);\n    }).finally(() => {\n      ServerRouter.#extractionPromise = undefined;\n    });\n    return ServerRouter.#extractionPromise;\n  }\n  /**\n   * Matches a request URL against the route tree to retrieve route metadata.\n   *\n   * This method strips 'index.html' from the URL if it is present and then attempts\n   * to find a match in the route tree. If a match is found, it returns the associated\n   * route metadata; otherwise, it returns `undefined`.\n   *\n   * @param url - The URL to be matched against the route tree.\n   * @returns The metadata for the matched route or `undefined` if no match is found.\n   */\n  match(url) {\n    // Strip 'index.html' from URL if present.\n    // A request to `http://www.example.com/page/index.html` will render the Angular route corresponding to `http://www.example.com/page`.\n    const {\n      pathname\n    } = stripIndexHtmlFromURL(url);\n    return this.routeTree.match(decodeURIComponent(pathname));\n  }\n}\n\n/**\n * Generates a SHA-256 hash of the provided string.\n *\n * @param data - The input string to be hashed.\n * @returns A promise that resolves to the SHA-256 hash of the input,\n * represented as a hexadecimal string.\n */\nasync function sha256(data) {\n  const encodedData = new TextEncoder().encode(data);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', encodedData);\n  const hashParts = [];\n  for (const h of new Uint8Array(hashBuffer)) {\n    hashParts.push(h.toString(16).padStart(2, '0'));\n  }\n  return hashParts.join('');\n}\n\n/**\n * Pattern used to extract the media query set by Beasties in an `onload` handler.\n */\nconst MEDIA_SET_HANDLER_PATTERN = /^this\\.media=[\"'](.*)[\"'];?$/;\n/**\n * Name of the attribute used to save the Beasties media query so it can be re-assigned on load.\n */\nconst CSP_MEDIA_ATTR = 'ngCspMedia';\n/**\n * Script that dynamically updates the `media` attribute of `<link>` tags based on a custom attribute (`CSP_MEDIA_ATTR`).\n *\n * NOTE:\n * We do not use `document.querySelectorAll('link').forEach((s) => s.addEventListener('load', ...)`\n * because load events are not always triggered reliably on Chrome.\n * See: https://github.com/angular/angular-cli/issues/26932 and https://crbug.com/1521256\n *\n * The script:\n * - Ensures the event target is a `<link>` tag with the `CSP_MEDIA_ATTR` attribute.\n * - Updates the `media` attribute with the value of `CSP_MEDIA_ATTR` and then removes the attribute.\n * - Removes the event listener when all relevant `<link>` tags have been processed.\n * - Uses event capturing (the `true` parameter) since load events do not bubble up the DOM.\n */\nconst LINK_LOAD_SCRIPT_CONTENT = /* @__PURE__ */(() => `(() => {\n  const CSP_MEDIA_ATTR = '${CSP_MEDIA_ATTR}';\n  const documentElement = document.documentElement;\n\n  // Listener for load events on link tags.\n  const listener = (e) => {\n    const target = e.target;\n    if (\n      !target ||\n      target.tagName !== 'LINK' ||\n      !target.hasAttribute(CSP_MEDIA_ATTR)\n    ) {\n      return;\n    }\n\n    target.media = target.getAttribute(CSP_MEDIA_ATTR);\n    target.removeAttribute(CSP_MEDIA_ATTR);\n\n    if (!document.head.querySelector(\\`link[\\${CSP_MEDIA_ATTR}]\\`)) {\n      documentElement.removeEventListener('load', listener);\n    }\n  };\n\n  documentElement.addEventListener('load', listener, true);\n})();`)();\nclass BeastiesBase extends Beasties {}\n/* eslint-enable @typescript-eslint/no-unsafe-declaration-merging */\nclass InlineCriticalCssProcessor extends BeastiesBase {\n  readFile;\n  outputPath;\n  addedCspScriptsDocuments = new WeakSet();\n  documentNonces = new WeakMap();\n  constructor(readFile, outputPath) {\n    super({\n      logger: {\n        // eslint-disable-next-line no-console\n        warn: s => console.warn(s),\n        // eslint-disable-next-line no-console\n        error: s => console.error(s),\n        info: () => {}\n      },\n      logLevel: 'warn',\n      path: outputPath,\n      publicPath: undefined,\n      compress: false,\n      pruneSource: false,\n      reduceInlineStyles: false,\n      mergeStylesheets: false,\n      // Note: if `preload` changes to anything other than `media`, the logic in\n      // `embedLinkedStylesheet` will have to be updated.\n      preload: 'media',\n      noscriptFallback: true,\n      inlineFonts: true\n    });\n    this.readFile = readFile;\n    this.outputPath = outputPath;\n  }\n  /**\n   * Override of the Beasties `embedLinkedStylesheet` method\n   * that makes it work with Angular's CSP APIs.\n   */\n  async embedLinkedStylesheet(link, document) {\n    if (link.getAttribute('media') === 'print' && link.next?.name === 'noscript') {\n      // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n      // NB: this is only needed for the webpack based builders.\n      const media = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n      if (media) {\n        link.removeAttribute('onload');\n        link.setAttribute('media', media[1]);\n        link?.next?.remove();\n      }\n    }\n    const returnValue = await super.embedLinkedStylesheet(link, document);\n    const cspNonce = this.findCspNonce(document);\n    if (cspNonce) {\n      const beastiesMedia = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n      if (beastiesMedia) {\n        // If there's a Beasties-generated `onload` handler and the file has an Angular CSP nonce,\n        // we have to remove the handler, because it's incompatible with CSP. We save the value\n        // in a different attribute and we generate a script tag with the nonce that uses\n        // `addEventListener` to apply the media query instead.\n        link.removeAttribute('onload');\n        link.setAttribute(CSP_MEDIA_ATTR, beastiesMedia[1]);\n        this.conditionallyInsertCspLoadingScript(document, cspNonce, link);\n      }\n      // Ideally we would hook in at the time Beasties inserts the `style` tags, but there isn't\n      // a way of doing that at the moment so we fall back to doing it any time a `link` tag is\n      // inserted. We mitigate it by only iterating the direct children of the `<head>` which\n      // should be pretty shallow.\n      document.head.children.forEach(child => {\n        if (child.tagName === 'style' && !child.hasAttribute('nonce')) {\n          child.setAttribute('nonce', cspNonce);\n        }\n      });\n    }\n    return returnValue;\n  }\n  /**\n   * Finds the CSP nonce for a specific document.\n   */\n  findCspNonce(document) {\n    if (this.documentNonces.has(document)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.documentNonces.get(document);\n    }\n    // HTML attribute are case-insensitive, but the parser used by Beasties is case-sensitive.\n    const nonceElement = document.querySelector('[ngCspNonce], [ngcspnonce]');\n    const cspNonce = nonceElement?.getAttribute('ngCspNonce') || nonceElement?.getAttribute('ngcspnonce') || null;\n    this.documentNonces.set(document, cspNonce);\n    return cspNonce;\n  }\n  /**\n   * Inserts the `script` tag that swaps the critical CSS at runtime,\n   * if one hasn't been inserted into the document already.\n   */\n  conditionallyInsertCspLoadingScript(document, nonce, link) {\n    if (this.addedCspScriptsDocuments.has(document)) {\n      return;\n    }\n    if (document.head.textContent.includes(LINK_LOAD_SCRIPT_CONTENT)) {\n      // Script was already added during the build.\n      this.addedCspScriptsDocuments.add(document);\n      return;\n    }\n    const script = document.createElement('script');\n    script.setAttribute('nonce', nonce);\n    script.textContent = LINK_LOAD_SCRIPT_CONTENT;\n    // Prepend the script to the head since it needs to\n    // run as early as possible, before the `link` tags.\n    document.head.insertBefore(script, link);\n    this.addedCspScriptsDocuments.add(document);\n  }\n}\n\n/**\n * A Least Recently Used (LRU) cache implementation.\n *\n * This cache stores a fixed number of key-value pairs, and when the cache exceeds its capacity,\n * the least recently accessed items are evicted.\n *\n * @template Key - The type of the cache keys.\n * @template Value - The type of the cache values.\n */\nclass LRUCache {\n  /**\n   * The maximum number of items the cache can hold.\n   */\n  capacity;\n  /**\n   * Internal storage for the cache, mapping keys to their associated nodes in the linked list.\n   */\n  cache = new Map();\n  /**\n   * Head of the doubly linked list, representing the most recently used item.\n   */\n  head;\n  /**\n   * Tail of the doubly linked list, representing the least recently used item.\n   */\n  tail;\n  /**\n   * Creates a new LRUCache instance.\n   * @param capacity The maximum number of items the cache can hold.\n   */\n  constructor(capacity) {\n    this.capacity = capacity;\n  }\n  /**\n   * Gets the value associated with the given key.\n   * @param key The key to retrieve the value for.\n   * @returns The value associated with the key, or undefined if the key is not found.\n   */\n  get(key) {\n    const node = this.cache.get(key);\n    if (node) {\n      this.moveToHead(node);\n      return node.value;\n    }\n    return undefined;\n  }\n  /**\n   * Puts a key-value pair into the cache.\n   * If the key already exists, the value is updated.\n   * If the cache is full, the least recently used item is evicted.\n   * @param key The key to insert or update.\n   * @param value The value to associate with the key.\n   */\n  put(key, value) {\n    const cachedNode = this.cache.get(key);\n    if (cachedNode) {\n      // Update existing node\n      cachedNode.value = value;\n      this.moveToHead(cachedNode);\n      return;\n    }\n    // Create a new node\n    const newNode = {\n      key,\n      value,\n      prev: undefined,\n      next: undefined\n    };\n    this.cache.set(key, newNode);\n    this.addToHead(newNode);\n    if (this.cache.size > this.capacity) {\n      // Evict the LRU item\n      const tail = this.removeTail();\n      if (tail) {\n        this.cache.delete(tail.key);\n      }\n    }\n  }\n  /**\n   * Adds a node to the head of the linked list.\n   * @param node The node to add.\n   */\n  addToHead(node) {\n    node.next = this.head;\n    node.prev = undefined;\n    if (this.head) {\n      this.head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n  }\n  /**\n   * Removes a node from the linked list.\n   * @param node The node to remove.\n   */\n  removeNode(node) {\n    if (node.prev) {\n      node.prev.next = node.next;\n    } else {\n      this.head = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    } else {\n      this.tail = node.prev;\n    }\n  }\n  /**\n   * Moves a node to the head of the linked list.\n   * @param node The node to move.\n   */\n  moveToHead(node) {\n    this.removeNode(node);\n    this.addToHead(node);\n  }\n  /**\n   * Removes the tail node from the linked list.\n   * @returns The removed tail node, or undefined if the list is empty.\n   */\n  removeTail() {\n    const node = this.tail;\n    if (node) {\n      this.removeNode(node);\n    }\n    return node;\n  }\n}\n\n/**\n * Maximum number of critical CSS entries the cache can store.\n * This value determines the capacity of the LRU (Least Recently Used) cache, which stores critical CSS for pages.\n */\nconst MAX_INLINE_CSS_CACHE_ENTRIES = 50;\n/**\n * A mapping of `RenderMode` enum values to corresponding string representations.\n *\n * This record is used to map each `RenderMode` to a specific string value that represents\n * the server context. The string values are used internally to differentiate\n * between various rendering strategies when processing routes.\n *\n * - `RenderMode.Prerender` maps to `'ssg'` (Static Site Generation).\n * - `RenderMode.Server` maps to `'ssr'` (Server-Side Rendering).\n * - `RenderMode.Client` maps to an empty string `''` (Client-Side Rendering, no server context needed).\n */\nconst SERVER_CONTEXT_VALUE = {\n  [RenderMode.Prerender]: 'ssg',\n  [RenderMode.Server]: 'ssr',\n  [RenderMode.Client]: ''\n};\n/**\n * Represents a locale-specific Angular server application managed by the server application engine.\n *\n * The `AngularServerApp` class handles server-side rendering and asset management for a specific locale.\n */\nclass AngularServerApp {\n  options;\n  /**\n   * Whether prerendered routes should be rendered on demand or served directly.\n   *\n   * @see {@link AngularServerAppOptions.allowStaticRouteRender} for more details.\n   */\n  allowStaticRouteRender;\n  /**\n   * Hooks for extending or modifying server behavior.\n   *\n   * @see {@link AngularServerAppOptions.hooks} for more details.\n   */\n  hooks;\n  /**\n   * Constructs an instance of `AngularServerApp`.\n   *\n   * @param options Optional configuration options for the server application.\n   */\n  constructor(options = {}) {\n    this.options = options;\n    this.allowStaticRouteRender = this.options.allowStaticRouteRender ?? false;\n    this.hooks = options.hooks ?? new Hooks();\n  }\n  /**\n   * The manifest associated with this server application.\n   */\n  manifest = getAngularAppManifest();\n  /**\n   * An instance of ServerAsset that handles server-side asset.\n   */\n  assets = new ServerAssets(this.manifest);\n  /**\n   * The router instance used for route matching and handling.\n   */\n  router;\n  /**\n   * The `inlineCriticalCssProcessor` is responsible for handling critical CSS inlining.\n   */\n  inlineCriticalCssProcessor;\n  /**\n   * The bootstrap mechanism for the server application.\n   */\n  boostrap;\n  /**\n   * Cache for storing critical CSS for pages.\n   * Stores a maximum of MAX_INLINE_CSS_CACHE_ENTRIES entries.\n   *\n   * Uses an LRU (Least Recently Used) eviction policy, meaning that when the cache is full,\n   * the least recently accessed page's critical CSS will be removed to make space for new entries.\n   */\n  criticalCssLRUCache = new LRUCache(MAX_INLINE_CSS_CACHE_ENTRIES);\n  /**\n   * Handles an incoming HTTP request by serving prerendered content, performing server-side rendering,\n   * or delivering a static file for client-side rendered routes based on the `RenderMode` setting.\n   *\n   * @param request - The HTTP request to handle.\n   * @param requestContext - Optional context for rendering, such as metadata associated with the request.\n   * @returns A promise that resolves to the resulting HTTP response object, or `null` if no matching Angular route is found.\n   *\n   * @remarks A request to `https://www.example.com/page/index.html` will serve or render the Angular route\n   * corresponding to `https://www.example.com/page`.\n   */\n  async handle(request, requestContext) {\n    const url = new URL(request.url);\n    this.router ??= await ServerRouter.from(this.manifest, url);\n    const matchedRoute = this.router.match(url);\n    if (!matchedRoute) {\n      // Not a known Angular route.\n      return null;\n    }\n    const {\n      redirectTo,\n      status,\n      renderMode\n    } = matchedRoute;\n    if (redirectTo !== undefined) {\n      return new Response(null, {\n        // Note: The status code is validated during route extraction.\n        // 302 Found is used by default for redirections\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/Response/redirect_static#status\n        status: status ?? 302,\n        headers: {\n          'Location': buildPathWithParams(redirectTo, url.pathname)\n        }\n      });\n    }\n    if (renderMode === RenderMode.Prerender) {\n      const response = await this.handleServe(request, matchedRoute);\n      if (response) {\n        return response;\n      }\n    }\n    return promiseWithAbort(this.handleRendering(request, matchedRoute, requestContext), request.signal, `Request for: ${request.url}`);\n  }\n  /**\n   * Handles serving a prerendered static asset if available for the matched route.\n   *\n   * This method only supports `GET` and `HEAD` requests.\n   *\n   * @param request - The incoming HTTP request for serving a static page.\n   * @param matchedRoute - The metadata of the matched route for rendering.\n   * If not provided, the method attempts to find a matching route based on the request URL.\n   * @returns A promise that resolves to a `Response` object if the prerendered page is found, or `null`.\n   */\n  async handleServe(request, matchedRoute) {\n    const {\n      headers,\n      renderMode\n    } = matchedRoute;\n    if (renderMode !== RenderMode.Prerender) {\n      return null;\n    }\n    const {\n      method\n    } = request;\n    if (method !== 'GET' && method !== 'HEAD') {\n      return null;\n    }\n    const assetPath = this.buildServerAssetPathFromRequest(request);\n    const {\n      manifest: {\n        locale\n      },\n      assets\n    } = this;\n    if (!assets.hasServerAsset(assetPath)) {\n      return null;\n    }\n    const {\n      text,\n      hash,\n      size\n    } = assets.getServerAsset(assetPath);\n    const etag = `\"${hash}\"`;\n    return request.headers.get('if-none-match') === etag ? new Response(undefined, {\n      status: 304,\n      statusText: 'Not Modified'\n    }) : new Response(await text(), {\n      headers: {\n        'Content-Length': size.toString(),\n        'ETag': etag,\n        'Content-Type': 'text/html;charset=UTF-8',\n        ...(locale !== undefined ? {\n          'Content-Language': locale\n        } : {}),\n        ...headers\n      }\n    });\n  }\n  /**\n   * Handles the server-side rendering process for the given HTTP request.\n   * This method matches the request URL to a route and performs rendering if a matching route is found.\n   *\n   * @param request - The incoming HTTP request to be processed.\n   * @param matchedRoute - The metadata of the matched route for rendering.\n   * If not provided, the method attempts to find a matching route based on the request URL.\n   * @param requestContext - Optional additional context for rendering, such as request metadata.\n   *\n   * @returns A promise that resolves to the rendered response, or null if no matching route is found.\n   */\n  async handleRendering(request, matchedRoute, requestContext) {\n    const {\n      renderMode,\n      headers,\n      status,\n      preload\n    } = matchedRoute;\n    if (!this.allowStaticRouteRender && renderMode === RenderMode.Prerender) {\n      return null;\n    }\n    const url = new URL(request.url);\n    const platformProviders = [];\n    const {\n      manifest: {\n        bootstrap,\n        inlineCriticalCss,\n        locale\n      },\n      assets\n    } = this;\n    // Initialize the response with status and headers if available.\n    const responseInit = {\n      status,\n      headers: new Headers({\n        'Content-Type': 'text/html;charset=UTF-8',\n        ...(locale !== undefined ? {\n          'Content-Language': locale\n        } : {}),\n        ...headers\n      })\n    };\n    if (renderMode === RenderMode.Server) {\n      // Configure platform providers for request and response only for SSR.\n      platformProviders.push({\n        provide: REQUEST,\n        useValue: request\n      }, {\n        provide: REQUEST_CONTEXT,\n        useValue: requestContext\n      }, {\n        provide: RESPONSE_INIT,\n        useValue: responseInit\n      });\n    } else if (renderMode === RenderMode.Client) {\n      // Serve the client-side rendered version if the route is configured for CSR.\n      let html = await this.assets.getServerAsset('index.csr.html').text();\n      html = await this.runTransformsOnHtml(html, url, preload);\n      return new Response(html, responseInit);\n    }\n    if (locale !== undefined) {\n      platformProviders.push({\n        provide: LOCALE_ID,\n        useValue: locale\n      });\n    }\n    this.boostrap ??= await bootstrap();\n    let html = await assets.getIndexServerHtml().text();\n    html = await this.runTransformsOnHtml(html, url, preload);\n    html = await renderAngular(html, this.boostrap, url, platformProviders, SERVER_CONTEXT_VALUE[renderMode]);\n    if (inlineCriticalCss) {\n      // Optionally inline critical CSS.\n      this.inlineCriticalCssProcessor ??= new InlineCriticalCssProcessor(path => {\n        const fileName = path.split('/').pop() ?? path;\n        return this.assets.getServerAsset(fileName).text();\n      });\n      // TODO(alanagius): remove once Node.js version 18 is no longer supported.\n      if (renderMode === RenderMode.Server && typeof crypto === 'undefined') {\n        // eslint-disable-next-line no-console\n        console.error(`The global 'crypto' module is unavailable. ` + `If you are running on Node.js, please ensure you are using version 20 or later, ` + `which includes built-in support for the Web Crypto module.`);\n      }\n      if (renderMode === RenderMode.Server && typeof crypto !== 'undefined') {\n        // Only cache if we are running in SSR Mode.\n        const cacheKey = await sha256(html);\n        let htmlWithCriticalCss = this.criticalCssLRUCache.get(cacheKey);\n        if (htmlWithCriticalCss === undefined) {\n          htmlWithCriticalCss = await this.inlineCriticalCssProcessor.process(html);\n          this.criticalCssLRUCache.put(cacheKey, htmlWithCriticalCss);\n        }\n        html = htmlWithCriticalCss;\n      } else {\n        html = await this.inlineCriticalCssProcessor.process(html);\n      }\n    }\n    return new Response(html, responseInit);\n  }\n  /**\n   * Constructs the asset path on the server based on the provided HTTP request.\n   *\n   * This method processes the incoming request URL to derive a path corresponding\n   * to the requested asset. It ensures the path points to the correct file (e.g.,\n   * `index.html`) and removes any base href if it is not part of the asset path.\n   *\n   * @param request - The incoming HTTP request object.\n   * @returns The server-relative asset path derived from the request.\n   */\n  buildServerAssetPathFromRequest(request) {\n    let {\n      pathname: assetPath\n    } = new URL(request.url);\n    if (!assetPath.endsWith('/index.html')) {\n      // Append \"index.html\" to build the default asset path.\n      assetPath = joinUrlParts(assetPath, 'index.html');\n    }\n    const {\n      baseHref\n    } = this.manifest;\n    // Check if the asset path starts with the base href and the base href is not (`/` or ``).\n    if (baseHref.length > 1 && assetPath.startsWith(baseHref)) {\n      // Remove the base href from the start of the asset path to align with server-asset expectations.\n      assetPath = assetPath.slice(baseHref.length);\n    }\n    return stripLeadingSlash(assetPath);\n  }\n  /**\n   * Runs the registered transform hooks on the given HTML content.\n   *\n   * @param html - The raw HTML content to be transformed.\n   * @param url - The URL associated with the HTML content, used for context during transformations.\n   * @param preload - An array of URLs representing the JavaScript resources to preload.\n   * @returns A promise that resolves to the transformed HTML string.\n   */\n  async runTransformsOnHtml(html, url, preload) {\n    if (this.hooks.has('html:transform:pre')) {\n      html = await this.hooks.run('html:transform:pre', {\n        html,\n        url\n      });\n    }\n    if (preload?.length) {\n      html = appendPreloadHintsToHtml(html, preload);\n    }\n    return html;\n  }\n}\nlet angularServerApp;\n/**\n * Retrieves or creates an instance of `AngularServerApp`.\n * - If an instance of `AngularServerApp` already exists, it will return the existing one.\n * - If no instance exists, it will create a new one with the provided options.\n *\n * @param options Optional configuration options for the server application.\n *\n * @returns The existing or newly created instance of `AngularServerApp`.\n */\nfunction getOrCreateAngularServerApp(options) {\n  return angularServerApp ??= new AngularServerApp(options);\n}\n/**\n * Destroys the existing `AngularServerApp` instance, releasing associated resources and resetting the\n * reference to `undefined`.\n *\n * This function is primarily used to enable the recreation of the `AngularServerApp` instance,\n * typically when server configuration or application state needs to be refreshed.\n */\nfunction destroyAngularServerApp() {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    // Need to clean up GENERATED_COMP_IDS map in `@angular/core`.\n    // Otherwise an incorrect component ID generation collision detected warning will be displayed in development.\n    // See: https://github.com/angular/angular-cli/issues/25924\n    _resetCompiledComponents();\n  }\n  angularServerApp = undefined;\n}\n/**\n * Appends module preload hints to an HTML string for specified JavaScript resources.\n * This function enhances the HTML by injecting `<link rel=\"modulepreload\">` elements\n * for each provided resource, allowing browsers to preload the specified JavaScript\n * modules for better performance.\n *\n * @param html - The original HTML string to which preload hints will be added.\n * @param preload - An array of URLs representing the JavaScript resources to preload.\n * @returns The modified HTML string with the preload hints injected before the closing `</body>` tag.\n *          If `</body>` is not found, the links are not added.\n */\nfunction appendPreloadHintsToHtml(html, preload) {\n  const bodyCloseIdx = html.lastIndexOf('</body>');\n  if (bodyCloseIdx === -1) {\n    return html;\n  }\n  // Note: Module preloads should be placed at the end before the closing body tag to avoid a performance penalty.\n  // Placing them earlier can cause the browser to prioritize downloading these modules\n  // over other critical page resources like images, CSS, and fonts.\n  return [html.slice(0, bodyCloseIdx), ...preload.map(val => `<link rel=\"modulepreload\" href=\"${val}\">`), html.slice(bodyCloseIdx)].join('\\n');\n}\n\n/**\n * Extracts a potential locale ID from a given URL based on the specified base path.\n *\n * This function parses the URL to locate a potential locale identifier that immediately\n * follows the base path segment in the URL's pathname. If the URL does not contain a valid\n * locale ID, an empty string is returned.\n *\n * @param url - The full URL from which to extract the locale ID.\n * @param basePath - The base path used as the reference point for extracting the locale ID.\n * @returns The extracted locale ID if present, or an empty string if no valid locale ID is found.\n *\n * @example\n * ```js\n * const url = new URL('https://example.com/base/en/page');\n * const basePath = '/base';\n * const localeId = getPotentialLocaleIdFromUrl(url, basePath);\n * console.log(localeId); // Output: 'en'\n * ```\n */\nfunction getPotentialLocaleIdFromUrl(url, basePath) {\n  const {\n    pathname\n  } = url;\n  // Move forward of the base path section.\n  let start = basePath.length;\n  if (pathname[start] === '/') {\n    start++;\n  }\n  // Find the next forward slash.\n  let end = pathname.indexOf('/', start);\n  if (end === -1) {\n    end = pathname.length;\n  }\n  // Extract the potential locale id.\n  return pathname.slice(start, end);\n}\n/**\n * Parses the `Accept-Language` header and returns a list of locale preferences with their respective quality values.\n *\n * The `Accept-Language` header is typically a comma-separated list of locales, with optional quality values\n * in the form of `q=<value>`. If no quality value is specified, a default quality of `1` is assumed.\n * Special case: if the header is `*`, it returns the default locale with a quality of `1`.\n *\n * @param header - The value of the `Accept-Language` header, typically a comma-separated list of locales\n *                  with optional quality values (e.g., `en-US;q=0.8,fr-FR;q=0.9`). If the header is `*`,\n *                  it represents a wildcard for any language, returning the default locale.\n *\n * @returns A `ReadonlyMap` where the key is the locale (e.g., `en-US`, `fr-FR`), and the value is\n *          the associated quality value (a number between 0 and 1). If no quality value is provided,\n *          a default of `1` is used.\n *\n * @example\n * ```js\n * parseLanguageHeader('en-US;q=0.8,fr-FR;q=0.9')\n * // returns new Map([['en-US', 0.8], ['fr-FR', 0.9]])\n\n * parseLanguageHeader('*')\n * // returns new Map([['*', 1]])\n * ```\n */\nfunction parseLanguageHeader(header) {\n  if (header === '*') {\n    return new Map([['*', 1]]);\n  }\n  const parsedValues = header.split(',').map(item => {\n    const [locale, qualityValue] = item.split(';', 2).map(v => v.trim());\n    let quality = qualityValue?.startsWith('q=') ? parseFloat(qualityValue.slice(2)) : undefined;\n    if (typeof quality !== 'number' || isNaN(quality) || quality < 0 || quality > 1) {\n      quality = 1; // Invalid quality value defaults to 1\n    }\n    return [locale, quality];\n  }).sort(([_localeA, qualityA], [_localeB, qualityB]) => qualityB - qualityA);\n  return new Map(parsedValues);\n}\n/**\n * Gets the preferred locale based on the highest quality value from the provided `Accept-Language` header\n * and the set of available locales.\n *\n * This function adheres to the HTTP `Accept-Language` header specification as defined in\n * [RFC 7231](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5), including:\n * - Case-insensitive matching of language tags.\n * - Quality value handling (e.g., `q=1`, `q=0.8`). If no quality value is provided, it defaults to `q=1`.\n * - Prefix matching (e.g., `en` matching `en-US` or `en-GB`).\n *\n * @param header - The `Accept-Language` header string to parse and evaluate. It may contain multiple\n *                 locales with optional quality values, for example: `'en-US;q=0.8,fr-FR;q=0.9'`.\n * @param supportedLocales - An array of supported locales (e.g., `['en-US', 'fr-FR']`),\n *                           representing the locales available in the application.\n * @returns The best matching locale from the supported languages, or `undefined` if no match is found.\n *\n * @example\n * ```js\n * getPreferredLocale('en-US;q=0.8,fr-FR;q=0.9', ['en-US', 'fr-FR', 'de-DE'])\n * // returns 'fr-FR'\n *\n * getPreferredLocale('en;q=0.9,fr-FR;q=0.8', ['en-US', 'fr-FR', 'de-DE'])\n * // returns 'en-US'\n *\n * getPreferredLocale('es-ES;q=0.7', ['en-US', 'fr-FR', 'de-DE'])\n * // returns undefined\n * ```\n */\nfunction getPreferredLocale(header, supportedLocales) {\n  if (supportedLocales.length < 2) {\n    return supportedLocales[0];\n  }\n  const parsedLocales = parseLanguageHeader(header);\n  // Handle edge cases:\n  // - No preferred locales provided.\n  // - Only one supported locale.\n  // - Wildcard preference.\n  if (parsedLocales.size === 0 || parsedLocales.size === 1 && parsedLocales.has('*')) {\n    return supportedLocales[0];\n  }\n  // Create a map for case-insensitive lookup of supported locales.\n  // Keys are normalized (lowercase) locale values, values are original casing.\n  const normalizedSupportedLocales = new Map();\n  for (const locale of supportedLocales) {\n    normalizedSupportedLocales.set(normalizeLocale(locale), locale);\n  }\n  // Iterate through parsed locales in descending order of quality.\n  let bestMatch;\n  const qualityZeroNormalizedLocales = new Set();\n  for (const [locale, quality] of parsedLocales) {\n    const normalizedLocale = normalizeLocale(locale);\n    if (quality === 0) {\n      qualityZeroNormalizedLocales.add(normalizedLocale);\n      continue; // Skip locales with quality value of 0.\n    }\n    // Exact match found.\n    if (normalizedSupportedLocales.has(normalizedLocale)) {\n      return normalizedSupportedLocales.get(normalizedLocale);\n    }\n    // If an exact match is not found, try prefix matching (e.g., \"en\" matches \"en-US\").\n    // Store the first prefix match encountered, as it has the highest quality value.\n    if (bestMatch !== undefined) {\n      continue;\n    }\n    const [languagePrefix] = normalizedLocale.split('-', 1);\n    for (const supportedLocale of normalizedSupportedLocales.keys()) {\n      if (supportedLocale.startsWith(languagePrefix)) {\n        bestMatch = normalizedSupportedLocales.get(supportedLocale);\n        break; // No need to continue searching for this locale.\n      }\n    }\n  }\n  if (bestMatch !== undefined) {\n    return bestMatch;\n  }\n  // Return the first locale that is not quality zero.\n  for (const [normalizedLocale, locale] of normalizedSupportedLocales) {\n    if (!qualityZeroNormalizedLocales.has(normalizedLocale)) {\n      return locale;\n    }\n  }\n}\n/**\n * Normalizes a locale string by converting it to lowercase.\n *\n * @param locale - The locale string to normalize.\n * @returns The normalized locale string in lowercase.\n *\n * @example\n * ```ts\n * const normalized = normalizeLocale('EN-US');\n * console.log(normalized); // Output: \"en-us\"\n * ```\n */\nfunction normalizeLocale(locale) {\n  return locale.toLowerCase();\n}\n\n/**\n * Angular server application engine.\n * Manages Angular server applications (including localized ones), handles rendering requests,\n * and optionally transforms index HTML before rendering.\n *\n * @remarks This class should be instantiated once and used as a singleton across the server-side\n * application to ensure consistent handling of rendering requests and resource management.\n *\n * @developerPreview\n */\nclass AngularAppEngine {\n  /**\n   * A flag to enable or disable the rendering of prerendered routes.\n   *\n   * Typically used during development to avoid prerendering all routes ahead of time,\n   * allowing them to be rendered on the fly as requested.\n   *\n   * @private\n   */\n  static ɵallowStaticRouteRender = false;\n  /**\n   * Hooks for extending or modifying the behavior of the server application.\n   * These hooks are used by the Angular CLI when running the development server and\n   * provide extensibility points for the application lifecycle.\n   *\n   * @private\n   */\n  static ɵhooks = /* #__PURE__*/new Hooks();\n  /**\n   * The manifest for the server application.\n   */\n  manifest = getAngularAppEngineManifest();\n  /**\n   * A map of supported locales from the server application's manifest.\n   */\n  supportedLocales = Object.keys(this.manifest.supportedLocales);\n  /**\n   * A cache that holds entry points, keyed by their potential locale string.\n   */\n  entryPointsCache = new Map();\n  /**\n   * Handles an incoming HTTP request by serving prerendered content, performing server-side rendering,\n   * or delivering a static file for client-side rendered routes based on the `RenderMode` setting.\n   *\n   * @param request - The HTTP request to handle.\n   * @param requestContext - Optional context for rendering, such as metadata associated with the request.\n   * @returns A promise that resolves to the resulting HTTP response object, or `null` if no matching Angular route is found.\n   *\n   * @remarks A request to `https://www.example.com/page/index.html` will serve or render the Angular route\n   * corresponding to `https://www.example.com/page`.\n   */\n  async handle(request, requestContext) {\n    const serverApp = await this.getAngularServerAppForRequest(request);\n    if (serverApp) {\n      return serverApp.handle(request, requestContext);\n    }\n    if (this.supportedLocales.length > 1) {\n      // Redirect to the preferred language if i18n is enabled.\n      return this.redirectBasedOnAcceptLanguage(request);\n    }\n    return null;\n  }\n  /**\n   * Handles requests for the base path when i18n is enabled.\n   * Redirects the user to a locale-specific path based on the `Accept-Language` header.\n   *\n   * @param request The incoming request.\n   * @returns A `Response` object with a 302 redirect, or `null` if i18n is not enabled\n   *          or the request is not for the base path.\n   */\n  redirectBasedOnAcceptLanguage(request) {\n    const {\n      basePath,\n      supportedLocales\n    } = this.manifest;\n    // If the request is not for the base path, it's not our responsibility to handle it.\n    const {\n      pathname\n    } = new URL(request.url);\n    if (pathname !== basePath) {\n      return null;\n    }\n    // For requests to the base path (typically '/'), attempt to extract the preferred locale\n    // from the 'Accept-Language' header.\n    const preferredLocale = getPreferredLocale(request.headers.get('Accept-Language') || '*', this.supportedLocales);\n    if (preferredLocale) {\n      const subPath = supportedLocales[preferredLocale];\n      if (subPath !== undefined) {\n        return new Response(null, {\n          status: 302,\n          // Use a 302 redirect as language preference may change.\n          headers: {\n            'Location': joinUrlParts(pathname, subPath),\n            'Vary': 'Accept-Language'\n          }\n        });\n      }\n    }\n    return null;\n  }\n  /**\n   * Retrieves the Angular server application instance for a given request.\n   *\n   * This method checks if the request URL corresponds to an Angular application entry point.\n   * If so, it initializes or retrieves an instance of the Angular server application for that entry point.\n   * Requests that resemble file requests (except for `/index.html`) are skipped.\n   *\n   * @param request - The incoming HTTP request object.\n   * @returns A promise that resolves to an `AngularServerApp` instance if a valid entry point is found,\n   * or `null` if no entry point matches the request URL.\n   */\n  async getAngularServerAppForRequest(request) {\n    // Skip if the request looks like a file but not `/index.html`.\n    const url = new URL(request.url);\n    const entryPoint = await this.getEntryPointExportsForUrl(url);\n    if (!entryPoint) {\n      return null;\n    }\n    // Note: Using `instanceof` is not feasible here because `AngularServerApp` will\n    // be located in separate bundles, making `instanceof` checks unreliable.\n    const ɵgetOrCreateAngularServerApp = entryPoint.ɵgetOrCreateAngularServerApp;\n    const serverApp = ɵgetOrCreateAngularServerApp({\n      allowStaticRouteRender: AngularAppEngine.ɵallowStaticRouteRender,\n      hooks: AngularAppEngine.ɵhooks\n    });\n    return serverApp;\n  }\n  /**\n   * Retrieves the exports for a specific entry point, caching the result.\n   *\n   * @param potentialLocale - The locale string used to find the corresponding entry point.\n   * @returns A promise that resolves to the entry point exports or `undefined` if not found.\n   */\n  getEntryPointExports(potentialLocale) {\n    const cachedEntryPoint = this.entryPointsCache.get(potentialLocale);\n    if (cachedEntryPoint) {\n      return cachedEntryPoint;\n    }\n    const {\n      entryPoints\n    } = this.manifest;\n    const entryPoint = entryPoints[potentialLocale];\n    if (!entryPoint) {\n      return undefined;\n    }\n    const entryPointExports = entryPoint();\n    this.entryPointsCache.set(potentialLocale, entryPointExports);\n    return entryPointExports;\n  }\n  /**\n   * Retrieves the entry point for a given URL by determining the locale and mapping it to\n   * the appropriate application bundle.\n   *\n   * This method determines the appropriate entry point and locale for rendering the application by examining the URL.\n   * If there is only one entry point available, it is returned regardless of the URL.\n   * Otherwise, the method extracts a potential locale identifier from the URL and looks up the corresponding entry point.\n   *\n   * @param url - The URL of the request.\n   * @returns A promise that resolves to the entry point exports or `undefined` if not found.\n   */\n  getEntryPointExportsForUrl(url) {\n    const {\n      basePath\n    } = this.manifest;\n    if (this.supportedLocales.length === 1) {\n      return this.getEntryPointExports('');\n    }\n    const potentialLocale = getPotentialLocaleIdFromUrl(url, basePath);\n    return this.getEntryPointExports(potentialLocale) ?? this.getEntryPointExports('');\n  }\n}\n\n/**\n * Annotates a request handler function with metadata, marking it as a special\n * handler.\n *\n * @param handler - The request handler function to be annotated.\n * @returns The same handler function passed in, with metadata attached.\n *\n * @example\n * Example usage in a Hono application:\n * ```ts\n * const app = new Hono();\n * export default createRequestHandler(app.fetch);\n * ```\n *\n * @example\n * Example usage in a H3 application:\n * ```ts\n * const app = createApp();\n * const handler = toWebHandler(app);\n * export default createRequestHandler(handler);\n * ```\n * @developerPreview\n */\nfunction createRequestHandler(handler) {\n  handler['__ng_request_handler__'] = true;\n  return handler;\n}\nexport { AngularAppEngine, PrerenderFallback, RenderMode, createRequestHandler, provideServerRoutesConfig, provideServerRouting, withAppShell, InlineCriticalCssProcessor as ɵInlineCriticalCssProcessor, destroyAngularServerApp as ɵdestroyAngularServerApp, extractRoutesAndCreateRouteTree as ɵextractRoutesAndCreateRouteTree, getOrCreateAngularServerApp as ɵgetOrCreateAngularServerApp, getRoutesFromAngularRouterConfig as ɵgetRoutesFromAngularRouterConfig, setAngularAppEngineManifest as ɵsetAngularAppEngineManifest, setAngularAppManifest as ɵsetAngularAppManifest };\n"],
  "mappings": "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",
  "names": ["input", "path", "root", "a", "spacing", "node", "stringify", "cloneNode", "Node", "result", "stringifier", "Comment", "parse", "Root", "Container", "Document", "dirname", "join", "isAbsolute", "resolve", "sep", "_a", "relative", "Parser", "open", "parser", "processor", "warning", "warnOnce", "postcss", "filter", "ElementType", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "EntityLevel", "EncodingMode", "attributes", "DocumentPosition", "href", "SelectorType", "AttributeAction", "subselects", "getName", "rule", "elem", "compileToken", "EntityDecoder", "State", "QuoteType", "cp", "node2", "rule2", "container", "document", "link", "path", "Console", "resolve", "ServerRoutesFeatureKind", "RenderMode", "PrerenderFallback", "node", "_a", "loadChildren", "matchedMetaData", "document", "result", "readFile", "link", "html"]
}
